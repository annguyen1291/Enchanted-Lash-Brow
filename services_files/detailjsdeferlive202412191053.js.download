/* Minification failed. Returning unminified contents.
(120,64-65): run-time error JS1013: Syntax error in regular expression: ,
(72,65-66): run-time error JS1013: Syntax error in regular expression: ,
 */
// JScript File for all methods for handling the Numeric only text box, Grid Pager textbox and 
//Multi line textbox control for handling maxlength problem

//*************************** NUMERIC TEXTBOX *******************************************
//Some functions used in all functions also but primararily for numeric textbox and grid pager

var IsPaste; // This variable is used for the firefox browser to identify if a paste operation is done or not.
// If Paste is done then the keyup event would be used to handle it.
var IsSelected; //This variable is used for IE when some text is selected within the textbox and then paste is done
var nDotCount = 0; //This variable is used to keep the count of dots(.) in the Numeric text box which allows decimal point

//This function is made for checking that there cant be more than one decimal points in Numeric Text box with decimals
function checkForDecimalPoint(sText) {
    if (sText == ".") {
        if (nDotCount == 0) {
            nDotCount = nDotCount + 1;
            return 0;
        }
        else {
            return 2;
        }
    }

    return 0;
}

//This function is made to identify if there is a "." present in the textbox or not
function identifyDot(stringToCheck) {
    var d = 0;
    var dotPresent = false;
    for (d = 0; d < stringToCheck.length; d++) {
        //alert('this' + stringToCheck.charAt(d));
        if (stringToCheck.charAt(d) == '.') {
            dotPresent = true;
        }
    }
    return dotPresent;
}

//This function is used to identify the numeric only characters
function IsNumeric(sText, entryMode) {
    var ValidChars;
    if (entryMode == 0) //Numeric Entries
    {
        ValidChars = "0123456789";
    }
    else if (entryMode == 1)//Numeric Entries with Decimal Point
    {
        ValidChars = "0123456789.";
    }
    else if (entryMode == 2)//Numeric Entries with Spaces for Phone numbers
    {
        ValidChars = "0123456789 ";
    }
    else if (entryMode == 3)//Numeric Entries with small bracket and dash for Phone numbers((222)-223-3333)
    {
        ValidChars = "0123456789()- ";
    }
    var IsNumber = true;
    var Char;
    for (i = 0; i < sText.length && IsNumber == true; i++) {
        Char = sText.charAt(i);
        if (ValidChars.indexOf(Char) == -1) {
            IsNumber = false;
        }
    }
    return IsNumber;

}
function ValidatePhoneFormat(control, countryId, dialingCode ='') {
    try {
        var phoneNumber = $(control).val().replace(/([()-\s])+/g, '');
        var valLenght = phoneNumber.length;
        if (valLenght <= 0) {
            return true;
        }
        if (valLenght > 0) {
            if (countryId != '2' && (valLenght == 11 || valLenght == 10) && phoneNumber[0] == 0) {
                phoneNumber = phoneNumber.substring(1);
                valLenght = phoneNumber.length;
            }
            if ((countryId == '1' || countryId == '3')) {
                if (valLenght != 10) {
                    return false;
                }
            }
            else if (countryId == '2') { //UK
                if (typeof dialingCode != 'undefined' && dialingCode != null && dialingCode != '' && dialingCode == '353') {
                    if (valLenght == 9 && phoneNumber[0] != 0) {
                        phoneNumber = 0 + phoneNumber;
                        valLenght = phoneNumber.length;
                    }
                    if (valLenght < 9 || valLenght > 10) {
                        return false;
                    }
                }
                else {
                    if (valLenght == 10 && phoneNumber[0] == 0) {
                        phoneNumber = phoneNumber.substring(1);
                        valLenght = phoneNumber.length;
                    }
                    if (valLenght < 10 || valLenght > 11  ) {
                        return false;
                    }
                }
            }
            else if (countryId == '4') { // Australia
                if (valLenght < 9 || valLenght > 10) {
                    return false;
                }
            }
        }
        return true;
    } catch(ex) {
        return true;
    }
}

function Phone_pattern(phoneNumber, countryId) {
    phoneNumber.value = phoneNumber.value.replace(/([()-\s])+/g, '');
    if (typeof countryId != "undefined" && countryId != null && countryId != "") {
        var phoneVal = phoneNumber.value;
        var valLenght = phoneVal.length;
        if (valLenght <= 0) {
            return;
        }
        if (countryId != '2' && valLenght == 11 && phoneVal[0] == 0) {
            phoneVal = phoneVal.substring(1);
            valLenght = phoneVal.length;
        }
        if ((countryId == '1' || countryId == '3') && valLenght == 10) {
            if (countryId == '3') {
                var number = phoneVal.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, '$1-$2-$3');
                phoneNumber.value = number;
            } else {
                var number = phoneVal.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, '($1)-$2-$3');
                phoneNumber.value = number;
            }
        }
        else if (countryId == '2') {//UK
            if (valLenght == 10 && phoneVal[0] != 0) {
                phoneVal = 0 + phoneVal;
                valLenght = phoneVal.length;
            }
            else if ((valLenght <= 10 || valLenght == 12) && phoneVal[0] == 0) {
                phoneVal = phoneVal.substring(1);
                valLenght = phoneVal.length;
            }
            if (valLenght == 10 || valLenght == 11) {
                var number = phoneVal.replace(/(\d{3})\-?(\d{4})\-?(\d{4})/, '$1 $2 $3');
                phoneNumber.value = number;
            }
        }
        else if (countryId == '4') { // Australia
            if (valLenght == 9 && phoneVal[0] != 0) {
                phoneVal = 0 + phoneVal;
                valLenght = phoneVal.length;
            }
            else if ((valLenght <= 9 || valLenght > 10) && phoneVal[0] == 0) {
                phoneVal = phoneVal.substring(1);
                valLenght = phoneVal.length;
            }
            if (valLenght == 9 || valLenght == 10) {
                var number = phoneVal.replace(/(\d{2})\-?(\d{4})\-?(\d{4})/, '($1) $2 $3');
                phoneNumber.value = number;
            }
        }
    } else {
        var number = phoneNumber.value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, '($1)-$2-$3');
        phoneNumber.value = number;
    }
}
//This function parses a given string and returns only the numeric characters from that string
function stripChars(string, entryMode) {
    var onlyNumbers = "";
    var len = string.length;
    var strarr = string.split('');
    var localDotCount = 0;
    var j = 0;
    for (j = 0; j < len; j++) {
        if ((IsNumeric(strarr[j], entryMode)) == true) {
            if (entryMode == 1) {
                if (strarr[j] == '.' && localDotCount == 0 && nDotCount != 1) {
                    onlyNumbers = onlyNumbers + strarr[j];
                    localDotCount = localDotCount + 1;
                    nDotCount = 1;
                }
                else if (strarr[j] != '.') {
                    onlyNumbers = onlyNumbers + strarr[j];
                }
            }
            else {
                onlyNumbers = onlyNumbers + strarr[j];
            }

        }
    }
    return (onlyNumbers);
}

//Function which returns only the maximum allowed number of characters for the given string
function checkMaxLength(actualstring, maxlength) {

    if ((maxlength > 0) && (maxlength < actualstring.length)) {
        var actualstringarr = actualstring.split('');
        var returnstring = "";
        var k = 0;
        for (k = 0; k < maxlength; k++) {
            returnstring = returnstring + actualstringarr[k];
        }
        return (returnstring);
    }
    else {
        return (actualstring);
    }
}

//This function is made to identify at what position the "." is present in the string
function identifyDotPosition(stringToCheck) {
    var d = 0;
    var dotPosition = 0;
    for (d = 0; d < stringToCheck.length; d++) {
        //alert('this' + stringToCheck.charAt(d));
        if (stringToCheck.charAt(d) == '.') {
            dotPosition = d;
        }
    }
    return dotPosition;
}

//This function is made for managing the string, either string manipulations or rounding off of extra decimals
//---------NOT USED AT THE MOMENT------------
function modifyTextString(stringValue, op, decimalPlaces, position) {
    if (op == 0) //Case where "." is at the last and it is to be removed
    {
        var r = 0;
        var stringValueArr = stringValue.split('');
        var returnString = "";
        for (r = 0; r < stringValue.length - 1; r++) {
            returnString = returnString + stringValueArr[r];
        }
        return returnString;
    }
    else if (op == 1) //Case where the numbers of decimal places after "." is greater than specified
    {
        //var r = 0;
        //var lastIndex = position + decimalPlaces + 1;
        //stringValue = stringValue.substring(0,(lastIndex+1))
        ////alert(stringValue);
        //var stringValueArr = stringValue.split('');
        //var returnString = "";
        //for(r =0; r < stringValue.length - 1; r++)
        //{
        //		if(r == (stringValue.length - 2))
        //		{
        //			//alert(stringValueArr[r+1]);
        //			if(stringValueArr[r+1] >= 5 && stringValueArr[r] != 9)
        //			{
        //				stringValueArr[r-1] = stringValueArr[r-1];
        //				stringValueArr[r] = eval(stringValueArr[r]) + 1;
        //			}
        //			else if(stringValueArr[r+1] >= 5 && stringValueArr[r] == 9)
        //			{
        //				stringValueArr[r-1] = eval(stringValueArr[r-1]) + 1;
        //				stringValueArr[r] = 0;
        //			}
        //			returnString = returnString + stringValueArr[r-1] + stringValueArr[r];
        //		}
        //		else if(r < (stringValue.length - 3))
        //		{
        //			returnString = returnString + stringValueArr[r];
        //		}
        //}
        returnString = Math.round(stringValue * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);
        return returnString;
    }
}

//This function is made to check on the decimal places validation. This round offs the decimal places as per the decimals mentioned.
//---------NOT USED AT THE MOMENT------------
function decimalPlacesValidation(textbox, decimalPlaces) {
    //alert(textbox.value.length);
    //alert(identifyDotPosition(textbox.value));
    if (identifyDotPosition(textbox.value) == (textbox.value.length - 1)) {
        textbox.value = modifyTextString(textbox.value, 0, decimalPlaces, identifyDotPosition(textbox.value));
        //alert(textbox.value);
    }
    else if (((textbox.value.length - 1) - identifyDotPosition(textbox.value)) > decimalPlaces) {
        textbox.value = modifyTextString(textbox.value, 1, decimalPlaces, identifyDotPosition(textbox.value));
    }
}

//This function is used on blur. This is a final line of protection and any invalid (non-numeric) entry would
//be removed from the textbox by using this function.
function validate(textbox, entryMode, decimalPlaces) {
    //alert(decimalPlaces);
    nDotCount = 0;
    var i = 0;
    var appendZerosString;
    textbox.value = checkMaxLength(stripChars(textbox.value, entryMode), textbox.maxLength);
    if (entryMode == 1 && identifyDot(textbox.value) == true) {
        //decimalPlacesValidation(textbox,decimalPlaces);
        textbox.value = Math.round(textbox.value * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);
        //Code added for making the decimal places stay in cases of zero values.
        if (identifyDot(textbox.value) == false) {
            //textbox.value = textbox.value + ".00";
            if (decimalPlaces > 0)
                appendZerosString = ".";
            else
                appendZerosString = "";
            for (i = 0; i < decimalPlaces; i++) {
                appendZerosString = appendZerosString + "0";
            }
            //P//textbox.value = textbox.value + appendZerosString;
        }
        else {
            //alert(textbox.value.length);
            //alert((textbox.value.length - 1) - identifyDotPosition(textbox.value));
            if (((textbox.value.length - 1) - identifyDotPosition(textbox.value)) < decimalPlaces) {
                appendZerosString = ""
                for (i = ((textbox.value.length - 1) - identifyDotPosition(textbox.value)); i < decimalPlaces; i++) {
                    appendZerosString = appendZerosString + "0";
                }
                //P//textbox.value = textbox.value + appendZerosString;
            }
        }
    }
    else if (entryMode == 1 && identifyDot(textbox.value) == false) {
        textbox.value = Math.round(textbox.value * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);
        if (decimalPlaces > 0)
            appendZerosString = ".";
        else
            appendZerosString = "";
        for (i = 0; i < decimalPlaces; i++) {
            appendZerosString = appendZerosString + "0";
        }
        //textbox.value = textbox.value + appendZerosString;
    }
}
//This function is used on keypress. user can enter any digits in textbox then it will be increase dynamically width of textbox
function dynamicWidthChange(obj, textBoxWidthSize, cSymbol) {
    var cLength = new Array(10, 8, 10, 10, 10, 10, 10, 9, 10, 10);
    var sWidth = textBoxWidthSize;
    var txtValue = $(obj).val();
    if (txtValue != '' && (txtValue).length > 5) {
        sWidth = 0;
        //$.each(txtValue, function (index, item) {
        for (var i = 0; i < txtValue.length; i++) {
            var item = txtValue.substring(i, i + 1);
            //console.log('sWidth' + sWidth + 'Index' + index + 'Item Value' + cLength[item]);
            if (item == ".") {
                sWidth = parseInt(sWidth) + parseInt(4);
            } else if (item == cSymbol) {
                sWidth = parseInt(sWidth) + parseInt(12);
            } else {
                sWidth = parseInt(sWidth) + parseInt(cLength[item]);
            }
        }
        if (sWidth == 0)
            sWidth = textBoxWidthSize;

        $(obj).css("width", (sWidth + "px"));
    } else {
        $(obj).css("width", (sWidth + "px"));
    }
}
function makeCurrencySymbolInTextbox(textbox, currencySymbol) {
    var prefix = "";
    var suffix = "";
    if (textbox.value.indexOf("$") >= 0) {
        prefix = "$";
    }
    else if (textbox.value.indexOf("£") >= 0) {
        prefix = "£";
    }
    else if (textbox.value.indexOf("%") >= 0) {
        suffix = "%";
    } else {
        textbox.value = currencySymbol + (textbox.value).replace(currencySymbol, "");
    }
}
function validateDecimal(textbox, entryMode, decimalPlaces) {
    //alert(decimalPlaces);
    //debugger;
    var prefix = "";
    var suffix = "";
    if (textbox.value.indexOf("$") >= 0) {
        prefix = "$";
    }
    else if (textbox.value.indexOf("£") >= 0) {
        prefix = "£";
    }
    else if (textbox.value.indexOf("%") >= 0) {
        suffix = "%";
    }
    nDotCount = 0;
    var i = 0;
    var appendZerosString;
    textbox.value = checkMaxLength(stripChars(textbox.value, entryMode), textbox.maxLength);
    if (entryMode == 1 && identifyDot(textbox.value) == true) {
        //decimalPlacesValidation(textbox,decimalPlaces);
        if (textbox.value == ".") textbox.value = "0.00";
        textbox.value = Math.round(textbox.value * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);
        //Code added for making the decimal places stay in cases of zero values.
        if (identifyDot(textbox.value) == false) {
            //textbox.value = textbox.value + ".00";
            if (decimalPlaces > 0)
                appendZerosString = ".";
            else
                appendZerosString = "";
            for (i = 0; i < decimalPlaces; i++) {
                appendZerosString = appendZerosString + "0";
            }
            var tmpApp = textbox.value + appendZerosString;
            if (parseInt(tmpApp.length) <= parseInt(textbox.maxLength))
                textbox.value = textbox.value + appendZerosString;
            //tmpApp = textbox.value + appendZerosString;            
            //textbox.value = textbox.value + appendZerosString;
        }
        else {
            //alert(textbox.value.length);
            //alert((textbox.value.length - 1) - identifyDotPosition(textbox.value));
            if (((textbox.value.length - 1) - identifyDotPosition(textbox.value)) < decimalPlaces) {
                appendZerosString = ""
                for (i = ((textbox.value.length - 1) - identifyDotPosition(textbox.value)); i < decimalPlaces; i++) {
                    appendZerosString = appendZerosString + "0";
                }
                var tmpApp = textbox.value + appendZerosString;
                if (parseInt(tmpApp.length) <= parseInt(textbox.maxLength))
                    textbox.value = textbox.value + appendZerosString;
                //tmpApp = textbox.value + appendZerosString;           
                //textbox.value = textbox.value + appendZerosString;
            }
        }
    }
    else if (entryMode == 1 && identifyDot(textbox.value) == false) {
        textbox.value = Math.round(textbox.value * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);
        if (decimalPlaces > 0)
            appendZerosString = ".";
        else
            appendZerosString = "";
        for (i = 0; i < decimalPlaces; i++) {
            appendZerosString = appendZerosString + "0";
        }
        var tmpApp = textbox.value + appendZerosString;
        if (parseInt(tmpApp.length) <= parseInt(textbox.maxLength))
            textbox.value = textbox.value + appendZerosString;
        //tmpApp = textbox.value + appendZerosString;
    }

    textbox.value = prefix + textbox.value + suffix;
    //    if (parseInt(tmpApp.length) <= parseInt(textbox.maxLength))
    //        textbox.value = textbox.value + appendZerosString;
}

//This function is used in the keyup event. 
function pasteHandlerKeyup(textbox, e, entryMode) {
    if (navigator.appName == "Microsoft Internet Explorer") {
        if (IsSelected) {
            nDotCount = 0;
            var pastestring = checkMaxLength(stripChars(textbox.value, entryMode), textbox.maxLength);
            textbox.value = pastestring;
            IsSelected = false;
        }
        if (e.keyCode == 8 || e.keyCode == 46) // Code written for resetting the dot counter to 0 on delete of "."
        {
            if (!identifyDot(textbox.value)) {
                nDotCount = 0;
            }
        }
        if (textbox.value == "") {
            nDotCount = 0;
        }
    }
    else {

        if ((e.type == 'keyup') && IsPaste) {
            nDotCount = 0;
            var pastestring = checkMaxLength(stripChars(textbox.value, entryMode), textbox.maxLength);
            textbox.value = pastestring;
            IsPaste = false;
        }
        if (e.which == 8 || e.which == 46) // Code written for resetting the dot counter to 0 on delete of "."
        {
            if (!identifyDot(textbox.value)) {
                nDotCount = 0;
            }
        }
        if (textbox.value == "") {
            nDotCount = 0;
        }

    }
}

//This function is used by the keypress as well as onpaste events.
function pasteHandler(textbox, e, entryMode) {
    if (navigator.appName == "Microsoft Internet Explorer") {
        if (e.keyCode == 13) {
            return true;
        }
        if (e.type == 'paste') {
            var seltext = getSelText();
            var alltext = textbox.value;
            if (seltext != '') {
                IsSelected = true;
                return true;
            }
            else {
                //Old code -DO NOT REMOVE FOR NOW - HARSH
                //var pastestring = stripChars(window.clipboardData.getData("Text"));
                //var newstring = textbox.value + pastestring;
                //newstring = checkMaxLength(newstring,textbox.maxLength);
                //textbox.value = newstring;
                //return false;
                if (!isNaN(textbox.maxLength)) {
                    event.returnValue = false;
                    maxLength = parseInt(textbox.maxLength);
                    var oTR = document.selection.createRange();
                    var iInsertLength = textbox.maxLength - textbox.value.length + oTR.text.length;
                    var sData = window.clipboardData.getData("Text").substr(0, iInsertLength);
                    //oTR.text = sData; 'Change on 25th January 2007 by harsh
                    oTR.text = stripChars(sData, entryMode);
                }
            }

        }
        var iKeyValue;
        iKeyValue = String.fromCharCode(e.keyCode);
        //Below If condition added for checking so that not more than one "." is allowed
        //alert(identifyDot(getSelText()));
        if (identifyDot(getSelText()) == true) {
            nDotCount = 0;
        }
        if (checkForDecimalPoint(iKeyValue) > 1 && identifyDot(getSelText()) != true) {
            return false;
        }
        return (IsNumeric(iKeyValue, entryMode));
    }
    else {
        if ((e.type == 'keypress') && !(e.ctrlKey && e.which == 118)) {
            if ((e.which == 0) || (e.which == 8) || (e.which == 13)) {
                return true;
            }
            else {
                var iKeyValue;
                iKeyValue = String.fromCharCode(e.which);
                //Change done on 30th Jan 2007. Condition added.
                if (iKeyValue == '.' && textbox.value.indexOf('.') >= 0) {
                    return false;
                }
                //                if (checkForDecimalPoint(iKeyValue) > 1) {
                //                    return false;
                //                }
                return (IsNumeric(iKeyValue, entryMode));
            }
        }
        else if ((e.type == 'keypress') && (e.ctrlKey && e.which == 118)) {
            IsPaste = true;
        }
    }
}

//This function is used to get the selected text from within the textbox if any.
function getSelText() {
    var txt = '';
    if (window.getSelection) {
        txt = window.getSelection();
    }
    else if (document.getSelection) {
        txt = document.getSelection();
    }
    else if (document.selection) {
        txt = document.selection.createRange().text;
    }
    else return;
    return txt;
}

//*************************** GRID PAGER TEXTBOX *******************************************
//Function made for Grid Pager Validation. Arguments passed are textbox to validate, position (0-bottom, 1 - top)
//grd for the id of the grid, and pagecount for the total number of pages.

var IsErrorBottom; //This variable is used to check whether an erroneous entry was made into the textbox in bottom pager 
// or not.
// This would be used when the of button would be clicked.
var IsErrorTop;    //This variable is used to check whether an erroneous entry was made into the textbox in top pager 
// or not.
// This would be used when the of button would be clicked.                   

function validateGridPager(textbox, position, grd, pagecount) {
    textbox.value = stripChars(textbox.value, 0);

    if ((textbox.value == '') || !(textbox.value > 0 && textbox.value <= pagecount)) {
        var gridname = grd;
        if (position == 0) {
            var lblstring = 'lblerrormsgForGridbottom' + gridname;
            var lbl = eval(document.getElementById(lblstring));
            lbl.innerHTML = "Invalid page no.";
            IsErrorBottom = true;
        }
        else {
            var lblstring = 'lblerrormsgForGridtop' + gridname
            var lbl = eval(document.getElementById(lblstring));
            lbl.innerHTML = "Invalid page no.";
            IsErrorTop = true;
        }

    }
    else {
        var gridname = grd;
        if (position == 0) {
            var lblstring = 'lblerrormsgForGridbottom' + gridname;
            var lbl = eval(document.getElementById(lblstring));
            lbl.innerHTML = "";
            IsErrorBottom = false;
        }
        else {
            var lblstring = 'lblerrormsgForGridtop' + gridname
            var lbl = eval(document.getElementById(lblstring));
            lbl.innerHTML = "";
            IsErrorTop = false;
        }
    }
}


//Function for checking if error exists or not on clicking the "Of" button in grid pager
//This determines that if error exists then form is not to be posted.
function checkError(position, gridname) {
    if (position == 0) {
        if (IsErrorBottom) {
            return false;
        }
        else {
            return true;
        }
    }
    else {
        if (IsErrorTop) {
            return false;
        }
        else {
            return true;
        }
    }
}

//*************************** MULTILINE TEXTBOX WITH MAXLENGTH CHECK ****************************************

//Multi Line textbox checking
//This function is used on blur and onkeypress. This function is used for checking the maxlength of the 
//Multi line textbox control.

var IsMultiLinePaste; //Used to check whether the paste was done or not (Firefox)
var oldTextValue = '';     //This is used to store the string value before the paste operation was done (Firefox)
var startPos;         //This is used to store the start position of the selection (Firefox)
var endPos;           //This is used to store the end position of the selection (Firefox)
var enterCount = 0;   //This variable is used for storing the count of enter key presses in textbox in IE.
//This is needed because in IE for each enter key it stores 2 characters.
var newMaxLength = 0; //This variable is used for storing the maxlength along with the enters
var keyPressTextValue = ''; // Variable used in keydown event for getting the value
var keyDownSelText = ''; // For knowing whether selected text is there or not
var pasteStartPos;
var pasteEndPos;


//Function which handles the keypress events for the textbox, disallowing extra number of characters while typing
//Function also used to find out whether paste is done in firefox or not
function keyPressHandler(textbox, e, maxlength) {
    if (navigator.appName == "Microsoft Internet Explorer") {
        if (maxlength > textbox.value.length) {
            return true;
        }
        else {
            selText = getSelText();
            if (selText.length > 1 && e.keyCode == 13) {
                return true;
            }
            else if (selText.length > 0 && e.keyCode != 13) {
                return true;
            }
            else {
                return false;
            }
        }
    }
    else {
        var charLengthFF = 0;
        var lastKeyEnter = false;
        charLengthFF = getCharCountFF(textbox.value, maxlength);
        var charLengthFFOld = charLengthFF;
        if ((e.which == 8 || e.which == 0) && keyPressTextValue == '') {
            keyPressTextValue = textbox.value;
        }
        if (e.which == 13) {
            lastKeyEnter = true;
            charLengthFF = charLengthFF + 1;
        }
        if (maxlength > charLengthFF) {
            if ((e.ctrlKey && e.which == 118)) {
                oldTextValue = textbox.value;
                startPos = textbox.selectionStart;
                endPos = textbox.selectionEnd;
                IsMultiLinePaste = true;
            }

            return true;
        }
        else {
            if ((e.ctrlKey && e.which == 118)) {
                IsMultiLinePaste = true;
                oldTextValue = textbox.value;
                startPos = textbox.selectionStart;
                endPos = textbox.selectionEnd;
                return true;
            }
            if ((e.ctrlKey && e.which == 97)) {
                return true;
            }
            else if (e.which == 0 || e.which == 8) {
                return true;
            }
            else {
                var localStartPos = textbox.selectionStart;
                var localEndPos = textbox.selectionEnd;
                var selectionRange = localEndPos - localStartPos;
                if ((selectionRange > 1) && (lastKeyEnter)) {
                    return true;
                }
                else if (selectionRange > 0 && !(lastKeyEnter)) {
                    return true;
                }
                return false;
            }
        }
    }
}

function getCharCountFF(stringToCheck, maxLength) {
    var l = 0;
    var localEnterCount = 0;
    var nonEnterChars = 0;
    var validChars = 0;
    for (l = 0; l < stringToCheck.length; l++) {
        if (stringToCheck.charCodeAt(l) == 10) {
            localEnterCount = localEnterCount + 1;
        }
        nonEnterChars = nonEnterChars + 1;
    }
    validChars = nonEnterChars + localEnterCount;
    return validChars;
}

function identifyEnter(stringToCheck, maxLength) {
    var l = 0;
    var localEnterCount = 0;
    for (l = 0; l < stringToCheck.length; l++) {
        if (stringToCheck.charCodeAt(l) == 10) {
            localEnterCount = localEnterCount + 1;
        }
    }
    return localEnterCount;
}

function setMaxLengthforPaste(stringToCheck, maxLength) {
    var m = 0;
    var stringToCheckArr = stringToCheck.split('');
    var returnString = '';
    var charCount = 0;
    for (m = 0; m < stringToCheck.length; m++) {
        returnString = returnString + stringToCheckArr[m];
        if (stringToCheck.charCodeAt(m) == 13) {
            newMaxLength = newMaxLength + 1;
        }
        else {
            charCount = charCount + 1;
        }
        if (charCount == maxLength) {
            return returnString;
        }
    }
}

function getValidCharsWithEnter(stringToCheck, maxLength) {
    var m = 0;
    var stringToCheckArr = stringToCheck.split('');
    var returnString = '';
    var charCount = 0;
    var enterCount = 0;
    for (m = 0; m < stringToCheck.length; m++) {

        if (stringToCheck.charCodeAt(m) == 10 || stringToCheck.charCodeAt(m) == 13) {
            enterCount = enterCount + 2;
        }
        else if ((stringToCheck.charCodeAt(m) != 10) && (stringToCheck.charCodeAt(m) != 13)) {
            charCount = charCount + 1;
        }
        if ((charCount + enterCount) > maxLength) {
            break;
        }
        else {
            returnString = returnString + stringToCheckArr[m];
        }
    }
    return returnString;
}

//KeyDown Event function 
function setOldValue(textbox) {
    if (!(navigator.appName == "Microsoft Internet Explorer")) {
        pasteStartPos = textbox.selectionStart;
        pasteEndPos = textbox.selectionEnd;
        return true;
    }
}

//This function is used for firefox to handle the paste event and in IE for enter calculations
function keyUpMultiLine(textbox, e, maxLength) {
    if (navigator.appName == "Microsoft Internet Explorer") {
        //document.getElementById('mylabel').innerHTML = textbox.value.length;
    }
    else {
        var newEnterCount = identifyEnter(textbox.value, maxLength);
        var oldEnterCount = identifyEnter(keyPressTextValue, maxLength);
        if (e.which == 8 || e.which == 46) {
            if (oldEnterCount != newEnterCount) {
                newMaxLength = newMaxLength - (oldEnterCount - newEnterCount);

            }
            if ((textbox.value == '') || (newMaxLength < 0)) {
                newMaxLength = 0; //maxLength;
            }
            keyPressTextValue = '';
        }
        //var lbl = eval(document.getElementById('mylabel'));
        //lbl.innerHTML = textbox.value.length;
        if ((maxLength < getCharCountFF(oldTextValue, maxLength)) && IsMultiLinePaste) {
            if (((endPos - startPos) > 0) && ((endPos - startPos) < maxLength)) {
                var newString = textbox.value;
                var noOfCharsString = oldTextValue.substring(startPos, endPos);
                var diff = getCharCountFF(noOfCharsString, maxLength);
                noOfChars = (diff) + (maxLength - getCharCountFF(oldTextValue, maxLength));
                var firstPart = oldTextValue.substring(0, startPos);
                var lastPart = oldTextValue.substring(endPos, getCharCountFF(oldTextValue, maxLength));
                var newLastPart = newString.substring(startPos, getCharCountFF(newString, maxLength));
                var pasteString = newLastPart.substring(0, noOfChars);
                textbox.value = firstPart + pasteString + lastPart;
                textbox.value = getValidCharsWithEnter(textbox.value, maxLength);
            }
            else {
                textbox.value = checkMaxLength(textbox.value, maxLength);
                textbox.value = getValidCharsWithEnter(textbox.value, maxLength);
            }
            IsMultiLinePaste = false;
            return false;
        }
        else if (IsMultiLinePaste) {
            var noOfChars;
            var newString = textbox.value;
            if (startPos != endPos) {
                var noOfCharsString = oldTextValue.substring(startPos, endPos);
                var diff = getCharCountFF(noOfCharsString, maxLength);
                noOfChars = (diff) + (maxLength - getCharCountFF(oldTextValue, maxLength));
                var firstPart = oldTextValue.substring(0, startPos);
                var newFirstPart = newString.substring(0, startPos);
                var lastPart = oldTextValue.substring(endPos, getCharCountFF(oldTextValue, maxLength));
                var newLastPart = newString.substring(startPos, getCharCountFF(newString, maxLength));
            }
            else {
                noOfChars = (maxLength - getCharCountFF(oldTextValue, maxLength));
                var firstPart = oldTextValue.substring(0, startPos);
                var newFirstPart = newString.substring(0, startPos);
                var lastPart = oldTextValue.substring(endPos, getCharCountFF(oldTextValue, maxLength));
                var newLastPart = newString.substring(endPos, getCharCountFF(newString, maxLength));
            }
            var pasteString = newLastPart.substring(0, noOfChars);

            textbox.value = firstPart + pasteString + lastPart;
            textbox.value = getValidCharsWithEnter(textbox.value, maxLength);
            newMaxLength = identifyEnter(textbox.value, maxLength);
            IsMultiLinePaste = false;
            return false;

        }
    }
}

function checkMultiLineMaxLength(actualstring, maxlength) {

    if ((maxlength > 0) && (maxlength < actualstring.length)) {
        var actualstringarr = actualstring.split('');
        var returnstring = "";
        var charCount = 0;
        var enterCount = 0;
        var k = 0;
        for (k = 0; k < maxlength; k++) {
            if (actualstring.charCodeAt(k) == 13) {
                enterCount = enterCount + 2;
            }
            else if ((actualstring.charCodeAt(k) != 13) && (actualstring.charCodeAt(k) != 10)) {
                charCount = charCount + 1;
            }
            if ((charCount + enterCount) > maxlength) {

                return (returnstring);
            }
            else {
                returnstring = returnstring + actualstringarr[k];
            }
        }
        return (returnstring);
    }
    return (actualstring);
}

//Function used for handling the paste event in IE 
function onPasteHandler(textbox, e, maxLength) {
    if (navigator.appName == "Microsoft Internet Explorer") {

        if (textbox.value == '') {
            textbox.value = checkMultiLineMaxLength(window.clipboardData.getData("Text"), maxLength)
            return false;
        }
        else {

            if (!isNaN(maxLength)) {
                event.returnValue = false;
                maxLength = parseInt(maxLength);
                var oTR = document.selection.createRange();
                var iInsertLength = maxLength - textbox.value.length + oTR.text.length;
                var sData = window.clipboardData.getData("Text").substr(0, iInsertLength);
                oTR.text = sData;
                textbox.value = checkMultiLineMaxLength(textbox.value, maxLength);
            }
        }
    }
    else {
        clipboardData = e.clipboardData || window.clipboardData;
        var str = textbox.value + clipboardData.getData("Text");
        textbox.value = getValidCharsWithEnter(str, maxLength);
        return false;
    }
}

//Function to check the maxlength finally on blur event. This for any unhandled event causing more number of characters.
function validateMultiLine(textbox, maxLength) {
    if ((navigator.appName == "Microsoft Internet Explorer")) {
        textbox.value = checkMultiLineMaxLength(textbox.value, maxLength);
    }
    else {
        textbox.value = getValidCharsWithEnter(textbox.value, maxLength);
    }
}

//*************************** DO NOT DELETE SECTION ****************************************

//For grid pager 
/////////////////////////Not USED FOR THE MOMENT - DO NOT DELETE FOR NOW - HARSH
//function isValidValue(ctl,e,pagelimit)
//{
//        var iKeyCode;
//        if (navigator.appName=="Microsoft Internet Explorer")
//            iKeyCode = event.keyCode
//        else
//            iKeyCode = e.which
//       var iKeyValue;
//       iKeyValue=String.fromCharCode(iKeyCode);
//       
//       if(iKeyCode>=48 && iKeyCode<=57) 
//       {    
//            var iKyeCurrentValue=ctl.value;
//            iNewValue=eval(iKyeCurrentValue+iKeyValue);
//            if (navigator.appName=="Microsoft Internet Explorer")
//            {
//                var Sel = document.selection.createRange();
//                var Selectlength = Sel.text.length;
//                if (Selectlength==0)
//                {
//                    if (iNewValue<=pagelimit && iNewValue>=1)
//                        return true;
//                }
//                else
//                {
//                    if (iKeyValue<=pagelimit && iKeyValue>=1)
//                        return true;
//                }
//                
//            }
//            else
//            {
//              var iKyeCurrentValue=ctl.value;
//                iNewValue=eval(iKyeCurrentValue+iKeyValue);
//                if (ctl.value!="")
//                {    
//                    if (iNewValue<=pagelimit && iNewValue>=1) // && Selcount!=0)
//                    {
//                        return true;
//                    }
//                }
//                else
//                {
//                    if (iNewValue<=pagelimit && iNewValue>=1)
//                    {
//                        return true;
//                    }
//                }
//            }
//            
//       }
//       if (navigator.appName!="Microsoft Internet Explorer")
//       {
//            if(iKeyCode==8 || iKeyCode==0)
//            {
//                return true;
//            }
//       }
//       return false;
//}

// ============================================== Added By: Nishant Dave...14th Aug 2010
function validateDecimalNew(ctrlID, decimalPlaces)//fun 1
{
    //alert(ctrlID);

    //var varValue = document.getElementById(ctrlID).value;
    var varValue = ctrlID.value;

    if (isNaN(varValue)) {

        alert("Enter numeric data");
        ctrlID.value = "";
        ctrlID.focus();
        return false;
    }
    else if (varValue == 0.00) {

        ctrlID.value = 0;
        ctrlID.focus();
        return false;
    }
    else {
        var arrParts = varValue.split('.');
        if (arrParts.length > 1) {
            if (arrParts[1].length < 1) {
                varValue = arrParts[0];
            }
        }
        ctrlID.value = format_number(varValue, decimalPlaces);

        return true;
    }
}
//=========================

//Format Number
function format_number(p, d) {
    var r;
    if (p < 0) { p = -p; r = format_number2(p, d); r = "-" + r; }
    else { r = format_number2(p, d); }
    return r;
}
//======================
function format_number2(pnumber, decimals) {
    var strNumber = new String(pnumber);
    var arrParts = strNumber.split('.');
    var intWholePart = parseInt(arrParts[0], 10);
    var strResult = '';
    if (isNaN(intWholePart))
        intWholePart = '0';
    if (arrParts.length > 1) {
        var decDecimalPart = new String(arrParts[1]);
        var i = 0;
        var intZeroCount = 0;
        while (i < String(arrParts[1]).length) {
            if (parseInt(String(arrParts[1]).charAt(i), 10) == 0) {
                intZeroCount += 1;
                i += 1;
            }
            else
                break;
        }
        decDecimalPart = parseInt(decDecimalPart, 10) / Math.pow(10, parseInt(decDecimalPart.length - decimals - 1));
        Math.round(decDecimalPart);
        decDecimalPart = parseInt(decDecimalPart) / 10;
        decDecimalPart = Math.round(decDecimalPart);

        //If the number was rounded up from 9 to 10, and it was for 1 'decimal' 
        //then we need to add 1 to the 'intWholePart' and set the decDecimalPart to 0. 

        if (decDecimalPart == Math.pow(10, parseInt(decimals))) {
            intWholePart += 1;
            decDecimalPart = "0";
        }
        var stringOfZeros = new String('');
        i = 0;
        if (decDecimalPart > 0) {
            while (i < intZeroCount) {
                stringOfZeros += '0';
                i += 1;
            }
        }
        decDecimalPart = String(intWholePart) + "." + stringOfZeros + String(decDecimalPart);
        var dot = decDecimalPart.indexOf('.');
        if (dot == -1) {
            decDecimalPart += '.';
            dot = decDecimalPart.indexOf('.');
        }
        var l = parseInt(dot) + parseInt(decimals);
        while (decDecimalPart.length <= l) {
            decDecimalPart += '0';
        }
        strResult = decDecimalPart;
    }
    else {
        var dot;
        var decDecimalPart = new String(intWholePart);

        decDecimalPart += '.';
        dot = decDecimalPart.indexOf('.');
        var l = parseInt(dot) + parseInt(decimals);
        while (decDecimalPart.length <= l) {
            decDecimalPart += '0';
        }
        strResult = decDecimalPart;
    }
    return strResult;
}
// ============================================== Completed By: Nishant Dave...14th Aug 2010;

/*! enscroll - v0.6.1 - 2014-09-01
* Copyright (c) 2014 ; Licensed  */
!function(a,b,c,d){var e={verticalScrolling:!0,horizontalScrolling:!1,verticalScrollerSide:"right",showOnHover:!1,scrollIncrement:20,minScrollbarLength:40,pollChanges:!0,drawCorner:!0,drawScrollButtons:!1,clickTrackToScroll:!0,easingDuration:500,propagateWheelEvent:!0,verticalTrackClass:"vertical-track",horizontalTrackClass:"horizontal-track",horizontalHandleClass:"horizontal-handle",verticalHandleClass:"vertical-handle",scrollUpButtonClass:"scroll-up-btn",scrollDownButtonClass:"scroll-down-btn",scrollLeftButtonClass:"scroll-left-btn",scrollRightButtonClass:"scroll-right-btn",cornerClass:"scrollbar-corner",zIndex:1,addPaddingToPane:!0,horizontalHandleHTML:'<div class="left"></div><div class="right"></div>',verticalHandleHTML:'<div class="top"></div><div class="bottom"></div>'},f=function(a){a.preventDefault?a.preventDefault():a.returnValue=!1,a.stopPropagation?a.stopPropagation():a.cancelBubble=!0},g=b.requestAnimationFrame||b.mozRequestAnimationFrame||b.webkitRequestAnimationFrame||b.oRequestAnimationFrame||b.msRequestAnimationFrame||function(a){setTimeout(a,17)},h=function(b,c){var d=a(b).css(c),e=/^-?\d+/.exec(d);return e?+e[0]:0},i=function(a){var b,c,d={width:"5px",height:"1px",overflow:"hidden",padding:"8px 0",visibility:"hidden",whiteSpace:"pre-line",font:"10px/1 serif"},e=document.createElement(a),f=document.createTextNode("a\na");for(c in d)e.style[c]=d[c];return e.appendChild(f),document.body.appendChild(e),b=e.scrollHeight<28,document.body.removeChild(e),b},j=.5*Math.PI,k=10*Math.log(2),l=function(a,b,c){var d=j/b,e=a*d;return Math.round(e*Math.cos(d*c))},m=function(a,b,c){return Math.round(a*k*Math.pow(2,-10*c/b+1)/b)},n=function(a,b,c,d){return 2*c/Math.PI*Math.asin((d-a)/b)},o=function(b){var c=a(this).data("enscroll"),d=this,e=c.settings,f=function(){var b=a(this).data("enscroll"),c=b.settings;b&&c.showOnHover&&(c.verticalScrolling&&a(b.verticalTrackWrapper).is(":visible")&&a(b.verticalTrackWrapper).stop().fadeTo(275,0),c.horizontalScrolling&&a(b.horizontalTrackWrapper).is(":visible")&&a(b.horizontalTrackWrapper).stop().fadeTo(275,0),b._fadeTimer=null)};c&&e.showOnHover&&(c._fadeTimer?clearTimeout(c._fadeTimer):(e.verticalScrolling&&a(c.verticalTrackWrapper).is(":visible")&&a(c.verticalTrackWrapper).stop().fadeTo(275,1),e.horizontalScrolling&&a(c.horizontalTrackWrapper).is(":visible")&&a(c.horizontalTrackWrapper).stop().fadeTo(275,1)),b!==!1&&(c._fadeTimer=setTimeout(function(){f.call(d)},1750)))},p=function(b,c){var d=a(b),e=d.data("enscroll"),f=d.scrollTop();e&&e.settings.verticalScrolling&&(d.scrollTop(f+c),e.settings.showOnHover&&o.call(b))},q=function(b,c){var d=a(b),e=d.data("enscroll"),f=d.scrollLeft();e&&e.settings.horizontalScrolling&&(d.scrollLeft(f+c),e.settings.showOnHover&&o.call(b))},r=function(b){if(1===b.which){var d,e,f,h,i,j,k,l,m,n=b.data.pane,p=a(n),q=p.data("enscroll"),r=!0,s=function(){r&&(f!==h&&(q._scrollingY||(q._scrollingY=!0,q._startY=p.scrollTop(),g(function(){t(p)})),e.style.top=f+"px",q._endY=f*m/l,h=f),g(s),q.settings.showOnHover&&o.call(n))},u=function(a){return r&&(f=a.clientY-j-i,f=Math.min(0>f?0:f,l)),!1},v=function(){return r=!1,c.body.style.cursor=k,this.style.cursor="",d.removeClass("dragging"),a(c.body).off("mousemove.enscroll.vertical").off("mouseup.enscroll.vertical"),a(c).off("mouseout.enscroll.vertical"),p.on("scroll.enscroll.pane",function(a){x.call(this,a)}),!1};return d=a(q.verticalTrackWrapper).find(".enscroll-track"),e=d.children().first()[0],f=parseInt(e.style.top,10),m=n.scrollHeight-(q._scrollHeightNoPadding?a(n).height():a(n).innerHeight()),i=b.clientY-a(e).offset().top,l=d.height()-a(e).outerHeight(),j=d.offset().top,p.off("scroll.enscroll.pane"),a(c.body).on({"mousemove.enscroll.vertical":u,"mouseup.enscroll.vertical":function(a){v.call(e,a)}}),a(c).on("mouseout.enscroll.vertical",function(a){a.target.nodeName&&"HTML"===a.target.nodeName.toUpperCase()&&v.call(e,a)}),d.hasClass("dragging")||(d.addClass("dragging"),k=a(c.body).css("cursor"),this.style.cursor=c.body.style.cursor="ns-resize"),g(s),!1}},s=function(b){if(1===b.which){var d,e,f,h,i,j,k,l,m,n=b.data.pane,p=a(n),q=a(n).data("enscroll"),r=!0,s=function(){r&&(f!==h&&(q._scrollingX||(q._scrollingX=!0,q._startX=p.scrollLeft(),g(function(){t(p)})),e.style.left=f+"px",q._endX=f*i/m,h=f),g(s),q.settings.showOnHover&&o.call(n))},u=function(a){return r&&(f=a.clientX-k-j,f=Math.min(0>f?0:f,m)),!1},v=function(){return r=!1,d.removeClass("dragging"),c.body.style.cursor=l,this.style.cursor="",d.removeClass("dragging"),a(c.body).off("mousemove.enscroll.horizontal").off("mouseup.enscroll.horizontal"),a(c).off("mouseout.enscroll.horizontal"),p.on("scroll.enscroll.pane",function(a){x.call(this,a)}),!1};return d=a(q.horizontalTrackWrapper).find(".enscroll-track"),e=d.children().first()[0],f=parseInt(e.style.left,10),i=n.scrollWidth-a(n).innerWidth(),j=b.clientX-a(e).offset().left,m=d.width()-a(e).outerWidth(),k=d.offset().left,p.off("scroll.enscroll.pane"),a(c.body).on({"mousemove.enscroll.horizontal":u,"mouseup.enscroll.horizontal":function(a){v.call(e,a)}}),a(c).on("mouseout.enscroll.horizontal",function(a){a.target.nodeName&&"HTML"===a.target.nodeName.toUpperCase()&&v.call(e,a)}),d.hasClass("dragging")||(d.addClass("dragging"),l=a("body").css("cursor"),this.style.cursor=c.body.style.cursor="ew-resize"),g(s),!1}},t=function(a){var b,c,d,e=a.data("enscroll"),f=e._duration;e._scrollingX===!0&&(b=e._endX-e._startX,0===b?e._scrollingX=!1:(c=a.scrollLeft(),d=n(e._startX,b,f,c),b>0?c>=e._endX||c<e._startX?e._scrollingX=!1:(q(a,Math.max(1,l(b,f,d))),g(function(){t(a)})):c<=e._endX||c>e._startX?e._scrollingX=!1:(q(a,Math.min(-1,l(b,f,d))),g(function(){t(a)})))),e._scrollingY===!0&&(b=e._endY-e._startY,0===b?e._scrollingY=!1:(c=a.scrollTop(),d=n(e._startY,b,f,c),b>0?c>=e._endY||c<e._startY?e._scrollingY=!1:(p(a,Math.max(1,l(b,f,d))),g(function(){t(a)})):c<=e._endY||c>e._startY?e._scrollingY=!1:(p(a,Math.min(-1,l(b,f,d))),g(function(){t(a)}))))},u=function(a,b){var c=a.data("enscroll"),d=a.scrollLeft(),e=a[0].scrollWidth-a.innerWidth();return!c.settings.horizontalScrolling||c._scrollingY?!1:(c._scrollingX||(c._scrollingX=!0,c._startX=d,c._endX=c._startX,g(function(){t(a)})),c._endX=b>0?Math.min(d+b,e):Math.max(0,d+b),0>b&&d>0||b>0&&e>d)},v=function(a,b){var c=a.data("enscroll"),d=a.scrollTop(),e=a[0].scrollHeight-(c._scrollHeightNoPadding?a.height():a.innerHeight());return!c.settings.verticalScrolling||c._scrollingX?!1:(c._scrollingY||(c._scrollingY=!0,c._startY=d,c._endY=c._startY,g(function(){t(a)})),c._endY=b>0?Math.min(d+b,e):Math.max(0,d+b),0>b&&d>0||b>0&&e>d)},w=function(b){var c,d=a(this),e=d.data("enscroll"),g=e.settings.scrollIncrement,h="deltaX"in b?-b.deltaX:"wheelDeltaX"in b?b.wheelDeltaX:0,i="deltaY"in b?-b.deltaY:"wheelDeltaY"in b?b.wheelDeltaY:"wheelDelta"in b?b.wheelDelta:0;Math.abs(h)>Math.abs(i)?(c=(h>0?-g:g)<<2,(u(d,c)||!e.settings.propagateWheelEvent)&&f(b)):(c=(i>0?-g:g)<<2,(v(d,c)||!e.settings.propagateWheelEvent)&&f(b))},x=function(){var b,c,d,e=a(this),f=e.data("enscroll");f&&(f.settings.verticalScrolling&&(c=a(f.verticalTrackWrapper).find(".enscroll-track")[0],b=c.firstChild,d=e.scrollTop()/(this.scrollHeight-(f._scrollHeightNoPadding?e.height():e.innerHeight())),d=isNaN(d)?0:d,b.style.top=d*(a(c).height()-a(b).outerHeight())+"px"),f.settings.horizontalScrolling&&(c=a(f.horizontalTrackWrapper).find(".enscroll-track")[0],b=c.firstChild,d=e.scrollLeft()/(this.scrollWidth-e.innerWidth()),d=isNaN(d)?0:d,b.style.left=d*(a(c).width()-a(b).innerWidth())+"px"))},y=function(b){var c,d=a(this),e=d.data("enscroll");if(!/(input)|(select)|(textarea)/i.test(this.nodeName)&&b.target===this&&e){switch(c=e.settings.scrollIncrement,b.keyCode){case 32:case 34:return v(d,d.height()),!1;case 33:return v(d,-d.height()),!1;case 35:return v(d,this.scrollHeight),!1;case 36:return v(d,-this.scrollHeight),!1;case 37:return u(d,-c),!1;case 38:return v(d,-c),!1;case 39:return u(d,c),!1;case 40:return v(d,c),!1}return!0}},z=function(){var b=this,d=a(b).data("enscroll").settings,e=!0,f=0,h=0,i=a(b).offset().top,j=i+a(b).outerHeight(),k=a(b).offset().left,l=k+a(b).outerWidth(),m=function(a){var b=a.pageX,c=a.pageY;f=k>b?b-k:b>l?b-l:0,h=i>c?c-i:c>j?c-j:0},n=function(){d.horizontalScrolling&&f&&q(b,parseInt(f/4,10)),d.verticalScrolling&&h&&p(b,parseInt(h/4,10)),e&&g(n)},o=function(){e=!1,a(c).off("mousemove.enscroll.pane").off("mouseup.enscroll.pane")};g(n),a(c).on({"mousemove.enscroll.pane":m,"mouseup.enscroll.pane":o})},A=function(a){var b,c,e,h,i,j,k,l=this,n=function(a){b=a.touches[0].clientX,c=a.touches[0].clientY,e||(e=c===i&&b===h?d:Math.abs(i-c)>Math.abs(h-b)?"y":"x"),f(a)},o=function(){j&&("y"===e?(p(l,i-c),k=i-c,i=c):"x"===e&&(q(l,h-b),k=h-b,h=b),g(o))},r=function(){var a=0,b=Math.abs(1.5*k);this.removeEventListener("touchmove",n,!1),this.removeEventListener("touchend",r,!1),j=!1,g(function c(){var d;a===b||j||(d=m(k,b,a),isNaN(d)||0===d||(a+=1,"y"===e?p(l,d):q(l,d),g(c)))})};1===a.touches.length&&(h=a.touches[0].clientX,i=a.touches[0].clientY,j=!0,this.addEventListener("touchmove",n,!1),this.addEventListener("touchend",r,!1),g(o))},B={reposition:function(){return this.each(function(){var b,c,d,e=a(this),f=e.data("enscroll"),g=function(a,b,c){a.style.left=b+"px",a.style.top=c+"px"};f&&(d=e.position(),b=f.corner,f.settings.verticalScrolling&&(c=f.verticalTrackWrapper,g(c,"right"===f.settings.verticalScrollerSide?d.left+e.outerWidth()-a(c).width()-h(this,"border-right-width"):d.left+h(this,"border-left-width"),d.top+h(this,"border-top-width"))),f.settings.horizontalScrolling&&(c=f.horizontalTrackWrapper,g(c,d.left+h(this,"border-left-width"),d.top+e.outerHeight()-a(c).height()-h(this,"border-bottom-width"))),b&&g(b,d.left+e.outerWidth()-a(b).outerWidth()-h(this,"border-right-width"),d.top+e.outerHeight()-a(b).outerHeight()-h(this,"border-bottom-width")))})},resize:function(){return this.each(function(){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=a(this),s=r.data("enscroll");return s?(b=s.settings,void(r.is(":visible")?(b.verticalScrolling&&(e=s.verticalTrackWrapper,c=r.innerHeight(),f=c/this.scrollHeight,g=a(e).find(".enscroll-track")[0],j=a(e).find("."+b.scrollUpButtonClass),k=a(e).find("."+b.scrollDownButtonClass),i=b.horizontalScrolling?c-a(s.horizontalTrackWrapper).find(".enscroll-track").outerHeight():c,i-=a(g).outerHeight()-a(g).height()+j.outerHeight()+k.outerHeight(),n=g.firstChild,p=Math.max(f*i,b.minScrollbarLength),p-=a(n).outerHeight()-a(n).height(),e.style.display="none",g.style.height=i+"px",n.style.height=p+"px",1>f&&(f=r.scrollTop()/(this.scrollHeight-r.height()),n.style.top=f*(i-p)+"px",e.style.display="block")),b.horizontalScrolling&&(e=s.horizontalTrackWrapper,d=r.innerWidth(),f=d/this.scrollWidth,g=a(e).find(".enscroll-track")[0],l=a(e).find("."+b.scrollLeftButtonClass),m=a(e).find("."+b.scrollRightButtonClass),h=b.verticalScrolling?d-a(s.verticalTrackWrapper).find(".enscroll-track").outerWidth():d,h-=a(g).outerWidth()-a(g).width()+l.outerWidth()+m.outerWidth(),n=g.firstChild,o=Math.max(f*h,b.minScrollbarLength),o-=a(n).outerWidth()-a(n).width(),e.style.display="none",g.style.width=h+"px",n.style.width=o+"px",1>f&&(f=r.scrollLeft()/(this.scrollWidth-r.width()),n.style.left=f*(h-o)+"px",e.style.display="block"),s._prybar&&(q=s._prybar,this.removeChild(q),b.verticalScrolling&&(q.style.width=this.scrollWidth+a(s.verticalTrackWrapper).find(".enscroll-track").outerWidth()+"px",this.appendChild(q)))),s.corner&&(s.corner.style.display=s.verticalTrackWrapper&&s.horizontalTrackWrapper&&a(s.verticalTrackWrapper).is(":visible")&&a(s.horizontalTrackWrapper).is(":visible")?"":"none")):(b.verticalScrolling&&(s.verticalTrackWrapper.style.display="none"),b.horizontalScrolling&&(s.horizontalTrackWrapper.style.display="none"),s.corner&&(s.corner.style.display="none")))):!0})},startPolling:function(){return this.each(function(){var b,c=a(this).data("enscroll"),d=this,e=a(d),f=-1,g=-1,h=-1,i=-1,j=function(){if(c.settings.pollChanges){var a=d.scrollWidth,k=d.scrollHeight,l=e.width(),m=e.height(),n=e.offset();(c.settings.verticalScrolling&&(m!==g||k!==i)||c.settings.horizontalScrolling&&(l!==f||a!==h))&&(h=a,i=k,B.resize.call(e)),(b.left!==n.left||b.top!==n.top||l!==f||m!==g)&&(b=n,f=l,g=m,B.reposition.call(e)),setTimeout(j,350)}};c&&(c.settings.pollChanges=!0,i=d.scrollHeight,h=d.scrollWidth,b=e.offset(),j())})},stopPolling:function(){return this.each(function(){var b=a(this).data("enscroll");b&&(b.settings.pollChanges=!1)})},destroy:function(){return this.each(function(){var c,d,e=a(this),f=e.data("enscroll");f&&(B.stopPolling.call(e),d=f._mouseScrollHandler,f.settings.verticalScrolling&&(c=f.verticalTrackWrapper,a(c).remove(),c=null),f.settings.horizontalScrolling&&(c=f.horizontalTrackWrapper,a(c).remove(),c=null),f._fadeTimer&&clearTimeout(f._fadeTimer),f.corner&&a(f.corner).remove(),f._prybar&&f._prybar.parentNode&&f._prybar.parentNode===this&&a(f._prybar).remove(),this.setAttribute("style",f._style||""),f._hadTabIndex||e.removeAttr("tabindex"),e.off("scroll.enscroll.pane").off("keydown.enscroll.pane").off("mouseenter.enscroll.pane").off("mousedown.enscroll.pane").data("enscroll",null),this.removeEventListener?(this.removeEventListener("wheel",d,!1),this.removeEventListener("mousewheel",d,!1),this.removeEventListener("touchstart",A,!1)):this.detachEvent&&this.detachEvent("onmousewheel",d),a(b).off("resize.enscroll.window"))})}};a.fn.enscroll=function(d){var f;return B[d]?B[d].call(this):(f=a.extend({},e,d),this.each(function(){if(f.verticalScrolling||f.horizontalScrolling){var d,e,g,j,k,l,m,n,t,C,D,E,F,G,H,I,J,K,L=a(this),M=this,N=L.attr("style"),O=!0,P={position:"absolute","z-index":f.zIndex,margin:0,padding:0},Q=function(a){w.call(M,a)},R=function(b,c){"string"==typeof c?a(b).html(c):b.appendChild(c)};if(f.verticalScrolling){e=c.createElement("div"),j=c.createElement("div"),l=c.createElement("a"),a(j).css("position","relative").addClass("enscroll-track").addClass(f.verticalTrackClass).appendTo(e),f.drawScrollButtons&&(m=c.createElement("a"),n=c.createElement("a"),a(m).css({display:"block","text-decoration":"none"}).attr("href","").html("&nbsp;").addClass(f.scrollUpButtonClass).on("click",function(){return p(M,-f.scrollIncrement),!1}).insertBefore(j),a(n).css({display:"block","text-decoration":"none"}).attr("href","").html("&nbsp;").on("click",function(){return p(M,f.scrollIncrement),!1}).addClass(f.scrollDownButtonClass).appendTo(e)),f.clickTrackToScroll&&a(j).on("click",function(b){b.target===this&&v(L,b.pageY>a(l).offset().top?L.height():-L.height())}),a(l).css({position:"absolute","z-index":1}).attr("href","").addClass(f.verticalHandleClass).mousedown({pane:this},r).click(function(){return!1}).appendTo(j),R(l,f.verticalHandleHTML),a(e).css(P).insertAfter(this),f.showOnHover&&a(e).css("opacity",0).on("mouseover.enscroll.vertical",function(){o.call(M,!1)}).on("mouseout.enscroll.vertical",function(){o.call(M)}),E=a(j).outerWidth(),f.addPaddingToPane&&(K="right"===f.verticalScrollerSide?{"padding-right":h(this,"padding-right")+E+"px"}:{"padding-left":h(this,"padding-left")+E+"px"},L.css(a.extend({width:L.width()-E+"px"},K)));try{I=parseInt(L.css("outline-width"),10),0!==I&&!isNaN(I)||"none"!==L.css("outline-style")||L.css("outline","none")}catch(S){L.css("outline","none")}}f.horizontalScrolling&&(d=c.createElement("div"),g=c.createElement("div"),k=c.createElement("a"),a(g).css({position:"relative","z-index":1}).addClass("enscroll-track").addClass(f.horizontalTrackClass).appendTo(d),f.drawScrollButtons&&(t=c.createElement("a"),C=c.createElement("a"),a(t).css("display","block").attr("href","").on("click",function(){return q(M,-f.scrollIncrement),!1}).addClass(f.scrollLeftButtonClass).insertBefore(g),a(C).css("display","block").attr("href","").on("click",function(){return q(M,f.scrollIncrement),!1}).addClass(f.scrollRightButtonClass).appendTo(d)),f.clickTrackToScroll&&a(g).on("click",function(b){b.target===this&&u(L,b.pageX>a(k).offset().left?L.width():-L.width())}),a(k).css({position:"absolute","z-index":1}).attr("href","").addClass(f.horizontalHandleClass).click(function(){return!1}).mousedown({pane:this},s).appendTo(g),R(k,f.horizontalHandleHTML),a(d).css(P).insertAfter(this),f.showOnHover&&a(d).css("opacity",0).on("mouseover.enscroll.horizontal",function(){o.call(M,!1)}).on("mouseout.enscroll.horizontal",function(){o.call(M)}),D=a(g).outerHeight(),f.addPaddingToPane&&L.css({height:L.height()-D+"px","padding-bottom":parseInt(L.css("padding-bottom"),10)+D+"px"}),f.verticalScrolling&&(J=document.createElement("div"),a(J).css({width:"1px",height:"1px",visibility:"hidden",padding:0,margin:"-1px"}).appendTo(this))),f.verticalScrolling&&f.horizontalScrolling&&f.drawCorner&&(F=c.createElement("div"),a(F).addClass(f.cornerClass).css(P).insertAfter(this)),H=L.attr("tabindex"),H||(L.attr("tabindex",0),O=!1);try{G=L.css("outline"),(!G||G.length<1)&&L.css("outline","none")}catch(S){L.css("outline","none")}L.on({"scroll.enscroll.pane":function(a){x.call(this,a)},"keydown.enscroll.pane":y,"mousedown.enscroll.pane":z}).css("overflow","hidden").data("enscroll",{settings:f,horizontalTrackWrapper:d,verticalTrackWrapper:e,corner:F,_prybar:J,_mouseScrollHandler:Q,_hadTabIndex:O,_style:N,_scrollingX:!1,_scrollingY:!1,_startX:0,_startY:0,_endX:0,_endY:0,_duration:parseInt(f.easingDuration/16.66666,10),_scrollHeightNoPadding:i(this.nodeName)}),a(b).on("resize.enscroll.window",function(){B.reposition.call(L)}),f.showOnHover&&L.on("mouseenter.enscroll.pane",function(){o.call(this)}),this.addEventListener?("onwheel"in this||"WheelEvent"in b&&navigator.userAgent.toLowerCase().indexOf("msie")>=0?this.addEventListener("wheel",Q,!1):"onmousewheel"in this&&this.addEventListener("mousewheel",Q,!1),this.addEventListener("touchstart",A,!1)):this.attachEvent&&this.attachEvent("onmousewheel",Q),f.pollChanges&&B.startPolling.call(L),B.resize.call(L),B.reposition.call(L)}}))}}(jQuery,window,document);;
(function (n, t) { typeof define == "function" && define.amd ? define(["jquery"], t) : typeof exports == "object" ? module.exports = t(require("jquery")) : n.bootbox = t(n.jQuery) })(this, function init(n, t) { function a(n) { var t = s[e.locale]; return t ? t[n] : s.en[n] } function f(t, i, r) { t.stopPropagation(); t.preventDefault(); var u = n.isFunction(r) && r(t) === !1; u || i.modal("hide") } function v(n) { var i, t = 0; for (i in n) t++; return t } function r(t, i) { var r = 0; n.each(t, function (n, t) { i(n, t, r++) }) } function y(t) { var i, u; if (typeof t != "object") throw new Error("Please supply an object of options"); if (!t.message) throw new Error("Please specify a message"); return t = n.extend({}, e, t), t.buttons || (t.buttons = {}), t.backdrop = t.backdrop ? "static" : !1, i = t.buttons, u = v(i), r(i, function (t, r, f) { if (n.isFunction(r) && (r = i[t] = { callback: r }), n.type(r) !== "object") throw new Error("button with key " + t + " must be an object"); r.label || (r.label = t); r.className || (r.className = u <= 2 && f === u - 1 ? "btn-primary new-vgcustm-wb green-primary-button" : "btn-default secondary-button") }), t } function p(n, t) { var r = n.length, i = {}; if (r < 1 || r > 2) throw new Error("Invalid argument length"); return r === 2 || typeof n[0] == "string" ? (i[t[0]] = n[0], i[t[1]] = n[1]) : i = n[0], i } function h(t, i, r) { return n.extend(!0, {}, t, p(i, r)) } function o(n, t, i, r) { var u = { className: "bootbox-" + n, buttons: c.apply(null, t) }; return l(h(u, r, i), t) } function c() { for (var t = {}, n = 0, r = arguments.length; n < r; n++) { var i = arguments[n], u = i.toLowerCase(), f = i.toUpperCase(); t[u] = { label: a(f) } } return t } function l(n, i) { var u = {}; return r(i, function (n, t) { u[t] = !0 }), r(n.buttons, function (n) { if (u[n] === t) throw new Error("button key " + n + " is not allowed (options are " + i.join("\n") + ")"); }), n } var u = { dialog: "<div class='bootbox modal vagaro-modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body web-body-font'><\/div><\/div><\/div><\/div><\/div>", header: "<div class='modal-header'><h4 class='modal-title'><\/h4><\/div>", footer: "<div class='modal-footer'><\/div>", closeButton: "<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&#xf00d;<\/button>", form: "<form class='bootbox-form'><\/form>", inputs: { text: "<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />", textarea: "<textarea class='bootbox-input bootbox-input-textarea form-control'><\/textarea>", email: "<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />", select: "<select class='bootbox-input bootbox-input-select form-control'><\/select>", checkbox: "<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /><\/label><\/div>", date: "<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />", time: "<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />", number: "<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />", password: "<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />" } }, e = { locale: "en", backdrop: !0, animate: !0, className: null, closeButton: !0, show: !0, container: "body" }, i = {}, s; return i.alert = function () { var t; if (arguments[1] = "Alert", t = o("alert", ["ok"], ["message", "title", "callback"], arguments), t.callback && !n.isFunction(t.callback)) throw new Error("alert requires callback property to be a function when provided"); return t.buttons.ok.callback = t.onEscape = function () { return n.isFunction(t.callback) ? t.callback() : !0 }, i.dialog(t) }, i.alertsmall = function () { var t; if (arguments[1] = "Alert", t = o("alert", ["ok"], ["message", "title", "callback"], arguments), t.callback && !n.isFunction(t.callback)) throw new Error("alert requires callback property to be a function when provided"); return t.buttons.ok.callback = t.onEscape = function () { return n.isFunction(t.callback) ? t.callback() : !0 }, t.size = "small", i.dialog(t) }, i.confirm = function () { var t; if (t = o("confirm", ["cancel", "confirm"], ["message", "callback"], arguments), t.buttons.cancel.callback = t.onEscape = function () { return t.callback(!1) }, t.buttons.confirm.callback = function () { return t.callback(!0) }, !n.isFunction(t.callback)) throw new Error("confirm requires a callback"); return i.dialog(t) }, i.prompt = function () { var f, y, s, v, e, p, o, a, w; if (v = n(u.form), y = { className: "bootbox-prompt", buttons: c("cancel", "confirm"), value: "", inputType: "text" }, f = l(h(y, arguments, ["title", "callback"]), ["cancel", "confirm"]), p = f.show === t ? !0 : f.show, f.message = v, f.buttons.cancel.callback = f.onEscape = function () { return f.callback(null) }, f.buttons.confirm.callback = function () { var t, i; switch (f.inputType) { case "text": case "textarea": case "email": case "select": case "date": case "time": case "number": case "password": t = e.val(); break; case "checkbox": i = e.find("input:checked"); t = []; r(i, function (i, r) { t.push(n(r).val()) }) }return f.callback(t) }, f.show = !1, !f.title) throw new Error("prompt requires a title"); if (!n.isFunction(f.callback)) throw new Error("prompt requires a callback"); if (!u.inputs[f.inputType]) throw new Error("invalid prompt type"); e = n(u.inputs[f.inputType]); switch (f.inputType) { case "text": case "textarea": case "email": case "date": case "time": case "number": case "password": e.val(f.value); break; case "select": if (a = {}, o = f.inputOptions || [], !o.length) throw new Error("prompt with select requires options"); r(o, function (i, r) { var u = e; if (r.value === t || r.text === t) throw new Error("given options in wrong format"); r.group && (a[r.group] || (a[r.group] = n("<optgroup/>").attr("label", r.group)), u = a[r.group]); u.append("<option value='" + r.value + "'>" + r.text + "<\/option>") }); r(a, function (n, t) { e.append(t) }); e.val(f.value); break; case "checkbox": if (w = n.isArray(f.value) ? f.value : [f.value], o = f.inputOptions || [], !o.length) throw new Error("prompt with checkbox requires options"); if (!o[0].value || !o[0].text) throw new Error("given options in wrong format"); e = n("<div/>"); r(o, function (t, i) { var o = n(u.inputs[f.inputType]); o.find("input").attr("value", i.value); o.find("label").append(i.text); r(w, function (n, t) { t === i.value && o.find("input").prop("checked", !0) }); e.append(o) }) }f.placeholder && e.attr("placeholder", f.placeholder); f.pattern && e.attr("pattern", f.pattern); v.append(e); v.on("submit", function (n) { n.preventDefault(); n.stopPropagation(); s.find(".btn-primary").click() }); s = i.dialog(f); s.off("shown.bs.modal"); s.on("shown.bs.modal", function () { e.focus() }); return p === !0 && s.modal("show"), s }, i.dialog = function (t) { var h, v, l; t = y(t); var i = n(u.dialog), c = i.find(".modal-dialog"), s = i.find(".modal-body"), a = t.buttons, e = "", o = { onEscape: t.onEscape }; r(a, function (n, t) { if (t.type == "a") n == "Heart" ? (t.className = t.className + " round-heart-icon", e += "<a id='ancHeart'  href=\"javascript:void();\" data-bb-handler='" + n + "' class='" + t.className + "' title = '" + n + "'><\/a>") : e += '<a href="javascript:void();" data-bb-handler=\'' + n + "' class='" + t.className + "' title = '" + n + "'><\/a>"; else if (t.type == "span") { var i = t.className.split("|"); e += "  <span id='spnHeartValue' style='float: left; margin-top: 5px;' class='heartArr[0]'>" + i[1] + "<\/span>" } else e += "<button data-bb-handler='" + n + "' type='button' class='btn " + t.className + "'>" + t.label + "<\/button>"; o[n] = t.callback }); s.find(".bootbox-body").html(t.message); t.animate === !0 && i.addClass("fade"); t.className && i.addClass(t.className); t.size === "large" && c.addClass("modal-lg"); t.size === "small" && c.addClass("modal-sm"); t.title && s.before(u.header); t.closeButton && (h = n(u.closeButton), t.title ? i.find(".modal-header").prepend(h) : h.css("margin-top", "-10px").prependTo(s)); t.title && i.find(".modal-title").html(t.title); e.length && (s.after(u.footer), i.find(".modal-footer").html(e)); i.on("hidden.bs.modal", function (n) { n.target === this && i.remove() }); i.on("shown.bs.modal", function () { var u, t, f, r; i.find(".btn-primary:first").focus(); u = 0; t = Math.min(n(window).height(), screen.availHeight); typeof $Interframe == "undefined" && (f = i.find(".modal-dialog").css("margin-top"), r = (t - i.find(".modal-dialog").height()) / 2, i.find(".modal-dialog").animate({ "margin-top": r }, 50)) }); i.on("escape.close.bb", function (n) { o.onEscape && f(n, i, o.onEscape) }); i.on("touchstart click", ".modal-footer button", function (t) { var r = n(this).data("bb-handler"); f(t, i, o[r]) }); i.on("touchstart click", ".modal-footer a", function (t) { var r = n(this).data("bb-handler"); f(t, i, o[r]) }); i.on("touchstart click", ".bootbox-close-button", function (n) { f(n, i, o.onEscape) }); i.on("keyup", function (n) { n.which === 27 && i.trigger("escape.close.bb") }); return n(t.container).append(i), i.modal({ backdrop: t.backdrop, keyboard: !1, show: !1 }), t.show && i.modal("show"), v = 0, l = Math.min(n(window).height(), screen.availHeight), typeof $Interframe == "undefined" && i.find(".modal-dialog").css("margin-top", (l - i.find(".modal-dialog").height()) / 2 - 200), i }, i.setDefaults = function () { var t = {}; arguments.length === 2 ? t[arguments[0]] = arguments[1] : t = arguments[0]; n.extend(e, t) }, i.hideAll = function () { return n(".bootbox").modal("hide"), i }, s = { br: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Sim" }, cs: { OK: "OK", CANCEL: "Zrušit", CONFIRM: "Potvrdit" }, da: { OK: "OK", CANCEL: "Annuller", CONFIRM: "Accepter" }, de: { OK: "OK", CANCEL: "Abbrechen", CONFIRM: "Akzeptieren" }, el: { OK: "Εντάξει", CANCEL: "Ακύρωση", CONFIRM: "Επιβεβαίωση" }, en: { OK: "OK", CANCEL: "Cancel", CONFIRM: "OK" }, es: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Aceptar" }, et: { OK: "OK", CANCEL: "Katkesta", CONFIRM: "OK" }, fi: { OK: "OK", CANCEL: "Peruuta", CONFIRM: "OK" }, fr: { OK: "OK", CANCEL: "Annuler", CONFIRM: "D'accord" }, he: { OK: "אישור", CANCEL: "ביטול", CONFIRM: "אישור" }, id: { OK: "OK", CANCEL: "Batal", CONFIRM: "OK" }, it: { OK: "OK", CANCEL: "Annulla", CONFIRM: "Conferma" }, ja: { OK: "OK", CANCEL: "キャンセル", CONFIRM: "確認" }, lt: { OK: "Gerai", CANCEL: "Atšaukti", CONFIRM: "Patvirtinti" }, lv: { OK: "Labi", CANCEL: "Atcelt", CONFIRM: "Apstiprināt" }, nl: { OK: "OK", CANCEL: "Annuleren", CONFIRM: "Accepteren" }, no: { OK: "OK", CANCEL: "Avbryt", CONFIRM: "OK" }, pl: { OK: "OK", CANCEL: "Anuluj", CONFIRM: "Potwierdź" }, pt: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Confirmar" }, ru: { OK: "OK", CANCEL: "Отмена", CONFIRM: "Применить" }, sv: { OK: "OK", CANCEL: "Avbryt", CONFIRM: "OK" }, tr: { OK: "Tamam", CANCEL: "İptal", CONFIRM: "Onayla" }, zh_CN: { OK: "OK", CANCEL: "取消", CONFIRM: "确认" }, zh_TW: { OK: "OK", CANCEL: "取消", CONFIRM: "確認" } }, i.init = function (t) { return init(t || n) }, i });;
// @preserve jQuery.floatThead 1.3.2 - http://mkoryak.github.io/floatThead/ - Copyright (c) 2012 - 2015 Misha Koryak
// @license MIT

/* @author Misha Koryak
 * @projectDescription lock a table header in place while scrolling - without breaking styles or events bound to the header
 *
 * Dependencies:
 * jquery 1.9.0 + [required] OR jquery 1.7.0 + jquery UI core
 *
 * http://mkoryak.github.io/floatThead/
 *
 * Tested on FF13+, Chrome 21+, IE8, IE9, IE10, IE11
 *
 */
(function ($) {
    /**
     * provides a default config object. You can modify this after including this script if you want to change the init defaults
     * @type {Object}
     */
    var userAgent = (navigator.userAgent || navigator.vendor || window.opera).toLowerCase();
    var iPadAndroid = userAgent.match(/ipad/i) || userAgent.match(/iphone/i) || userAgent.match(/itouch/i) || userAgent.match(/android/i) || false;
    var iMacSafari = (userAgent.match(/webkit/i)) || false;

    $.floatThead = $.floatThead || {};
    $.floatThead.defaults = {
        headerCellSelector: 'tr:visible:first>*:visible', //thead cells are this.
        zIndex: 1001, //zindex of the floating thead (actually a container div)
        position: 'auto', // 'fixed', 'absolute', 'auto'. auto picks the best for your table scrolling type.
        top: 0, //String or function($table) - offset from top of window where the header should not pass above
        bottom: 0, //String or function($table) - offset from the bottom of the table where the header should stop scrolling
        scrollContainer: function ($table) {
            return $([]); //if the table has horizontal scroll bars then this is the container that has overflow:auto and causes those scroll bars
        },
        getSizingRow: function ($table, $cols, $fthCells) { // this is only called when using IE,
            // override it if the first row of the table is going to contain colgroups (any cell spans greater than one col)
            // it should return a jquery object containing a wrapped set of table cells comprising a row that contains no col spans and is visible
            return $table.find('tbody tr:visible:first>*:visible');
        },
        floatTableClass: 'floatThead-table',
        floatWrapperClass: 'floatThead-wrapper',
        floatContainerClass: 'floatThead-container',
        copyTableClass: true, //copy 'class' attribute from table into the floated table so that the styles match.
        enableAria: false, //will copy header text from the floated header back into the table for screen readers. Might cause the css styling to be off. beware!
        autoReflow: false, //(undocumented) - use MutationObserver api to reflow automatically when internal table DOM changes
        debug: false //print possible issues (that don't prevent script loading) to console, if console exists.
    };

    var util = window._;

    var canObserveMutations = typeof MutationObserver !== 'undefined';


    //browser stuff
    var ieVersion = function () { for (var a = 3, b = document.createElement("b"), c = b.all || []; a = 1 + a, b.innerHTML = "<!--[if gt IE " + a + "]><i><![endif]-->", c[0];); return 4 < a ? a : document.documentMode }();
    var isFF = /Gecko\//.test(navigator.userAgent);
    var isWebkit = /WebKit\//.test(navigator.userAgent);

    //safari 7 (and perhaps others) reports table width to be parent container's width if max-width is set on table. see: https://github.com/mkoryak/floatThead/issues/108
    var isTableWidthBug = function () {
        if (isWebkit) {
            var $test = $('<div style="width:0px"><table style="max-width:100%"><tr><th><div style="min-width:100px;">X</div></th></tr></table></div>');
            $("body").append($test);
            var ret = ($test.find("table").width() == 0);
            $test.remove();
            return ret;
        }
        return false;
    };

    var createElements = !isFF && !ieVersion; //FF can read width from <col> elements, but webkit cannot

    var $window = $(window);

    /**
     * @param debounceMs
     * @param cb
     */
    function windowResize(eventName, cb) {
        if (ieVersion == 8) { //ie8 is crap: https://github.com/mkoryak/floatThead/issues/65
            var winWidth = $window.width();
            var debouncedCb = util.debounce(function () {
                var winWidthNew = $window.width();
                if (winWidth != winWidthNew) {
                    winWidth = winWidthNew;
                    cb();
                }
            }, 1);
            $window.on(eventName, debouncedCb);
        } else {
            $window.on(eventName, util.debounce(cb, 1));
        }
    }


    function debug(str) {
        window && window.console && window.console.error && window.console.error("jQuery.floatThead: " + str);
    }

    //returns fractional pixel widths
    function getOffsetWidth(el) {
        var rect = el.getBoundingClientRect();
        return rect.width || rect.right - rect.left;
    }

    /**
     * try to calculate the scrollbar width for your browser/os
     * @return {Number}
     */
    function scrollbarWidth() {
        if (!iPadAndroid && !iMacSafari) {
            return 0;
        }
        else {
            return 7;
        }
        //var $div = $( //borrowed from anti-scroll
        //    '<div style="width:50px;height:50px;overflow-y:scroll;'
        //    + 'position:absolute;top:-200px;left:-200px;"><div style="height:100px;width:100%">'
        //    + '</div>'
        //);
        //$('body').append($div);
        //var w1 = $div.innerWidth();
        //var w2 = $('div', $div).innerWidth();
        //$div.remove();
        //return w1 - w2;
    }
    /**
     * Check if a given table has been datatableized (http://datatables.net)
     * @param $table
     * @return {Boolean}
     */
    function isDatatable($table) {
        if ($table.dataTableSettings) {
            for (var i = 0; i < $table.dataTableSettings.length; i++) {
                var table = $table.dataTableSettings[i].nTable;
                if ($table[0] == table) {
                    return true;
                }
            }
        }
        return false;
    }

    function tableWidth($table, $fthCells, isOuter) {
        // see: https://github.com/mkoryak/floatThead/issues/108
        var fn = isOuter ? "outerWidth" : "width";
        if (isTableWidthBug && $table.css("max-width")) {
            var w = 0;
            if (isOuter) {
                w += parseInt($table.css("borderLeft"), 10);
                w += parseInt($table.css("borderRight"), 10);
            }
            for (var i = 0; i < $fthCells.length; i++) {
                w += $fthCells.get(i).offsetWidth;
            }
            return w;
        } else {
            return $table[fn]();
        }
    }
    $.fn.floatThead = function (map) {
        map = map || {};
        if (!util) { //may have been included after the script? lets try to grab it again.
            util = window._ || $.floatThead._;
            if (!util) {
                throw new Error("jquery.floatThead-slim.js requires underscore. You should use the non-lite version since you do not have underscore.");
            }
        }

        if (ieVersion < 8) {
            return this; //no more crappy browser support.
        }

        var mObs = null; //mutation observer lives in here if we can use it / make it

        if (util.isFunction(isTableWidthBug)) {
            isTableWidthBug = isTableWidthBug();
        }

        if (util.isString(map)) {
            var command = map;
            var ret = this;
            this.filter('table').each(function () {
                var $this = $(this);
                var opts = $this.data('floatThead-lazy');
                if (opts) {
                    $this.floatThead(opts);
                }
                var obj = $this.data('floatThead-attached');
                if (obj && util.isFunction(obj[command])) {
                    var r = obj[command]();
                    if (typeof r !== 'undefined') {
                        ret = r;
                    }
                }
            });
            return ret;
        }
        var opts = $.extend({}, $.floatThead.defaults || {}, map);

        $.each(map, function (key, val) {
            if ((!(key in $.floatThead.defaults)) && opts.debug) {
                debug("Used [" + key + "] key to init plugin, but that param is not an option for the plugin. Valid options are: " + (util.keys($.floatThead.defaults)).join(', '));
            }
        });
        if (opts.debug) {
            var v = $.fn.jquery.split(".");
            if (parseInt(v[0], 10) == 1 && parseInt(v[1], 10) <= 7) {
                debug("jQuery version " + $.fn.jquery + " detected! This plugin supports 1.8 or better, or 1.7.x with jQuery UI 1.8.24 -> http://jqueryui.com/resources/download/jquery-ui-1.8.24.zip")
            }
        }

        this.filter(':not(.' + opts.floatTableClass + ')').each(function () {
            var floatTheadId = util.uniqueId();
            var $table = $(this);
            if ($table.data('floatThead-attached')) {
                return true; //continue the each loop
            }
            if (!$table.is('table')) {
                throw new Error('jQuery.floatThead must be run on a table element. ex: $("table").floatThead();');
            }
            canObserveMutations = opts.autoReflow && canObserveMutations; //option defaults to false!
            var $header = $table.children('thead:first');
            var $tbody = $table.children('tbody:first');
            if ($header.length == 0 || $tbody.length == 0) {
                $table.data('floatThead-lazy', opts);
                $table.unbind("reflow").one('reflow', function () {
                    $table.floatThead(opts);
                });
                return;
            }
            if ($table.data('floatThead-lazy')) {
                $table.unbind("reflow");
            }
            $table.data('floatThead-lazy', false);

            var headerFloated = true;
            var scrollingTop, scrollingBottom;
            var scrollbarOffset = { vertical: 0, horizontal: 0 };
            var scWidth = scrollbarWidth();
            var lastColumnCount = 0; //used by columnNum()
            var $scrollContainer = opts.scrollContainer($table) || $([]); //guard against returned nulls
            var locked = $scrollContainer.length > 0;

            var useAbsolutePositioning = null;
            if (typeof opts.useAbsolutePositioning !== 'undefined') {
                opts.position = 'auto';
                if (opts.useAbsolutePositioning) {
                    opts.position = opts.useAbsolutePositioning ? 'absolute' : 'fixed';
                }
                debug("option 'useAbsolutePositioning' has been removed in v1.3.0, use `position:'" + opts.position + "'` instead. See docs for more info: http://mkoryak.github.io/floatThead/#options")
            }
            if (typeof opts.scrollingTop !== 'undefined') {
                opts.top = opts.scrollingTop;
                debug("option 'scrollingTop' has been renamed to 'top' in v1.3.0. See docs for more info: http://mkoryak.github.io/floatThead/#options");
            }
            if (typeof opts.scrollingBottom !== 'undefined') {
                opts.bottom = opts.scrollingBottom;
                debug("option 'scrollingBottom' has been renamed to 'bottom' in v1.3.0. See docs for more info: http://mkoryak.github.io/floatThead/#options");
            }


            if (opts.position == 'auto') {
                useAbsolutePositioning = null;
            } else if (opts.position == 'fixed') {
                useAbsolutePositioning = false;
            } else if (opts.position == 'absolute') {
                useAbsolutePositioning = true;
            } else if (opts.debug) {
                debug('Invalid value given to "position" option, valid is "fixed", "absolute" and "auto". You passed: ', opts.position);
            }

            if (useAbsolutePositioning == null) { //defaults: locked=true, !locked=false
                useAbsolutePositioning = locked;
            }
            var $caption = $table.find("caption");
            var haveCaption = $caption.length == 1;
            if (haveCaption) {
                var captionAlignTop = ($caption.css("caption-side") || $caption.attr("align") || "top") === "top";
            }

            var $fthGrp = $('<fthfoot style="display:table-footer-group;border-spacing:0;height:0;border-collapse:collapse;visibility:hidden"/>');

            var wrappedContainer = false; //used with absolute positioning enabled. did we need to wrap the scrollContainer/table with a relative div?
            var $wrapper = $([]); //used when absolute positioning enabled - wraps the table and the float container
            var absoluteToFixedOnScroll = ieVersion <= 9 && !locked && useAbsolutePositioning; //on IE using absolute positioning doesn't look good with window scrolling, so we change position to fixed on scroll, and then change it back to absolute when done.
            var $floatTable = $("<table/>");
            var $floatColGroup = $("<colgroup/>");
            var $tableColGroup = $table.children('colgroup:first');
            var existingColGroup = true;
            if ($tableColGroup.length == 0) {
                $tableColGroup = $("<colgroup/>");
                existingColGroup = false;
            }
            var $fthRow = $('<fthtr style="display:table-row;border-spacing:0;height:0;border-collapse:collapse"/>'); //created unstyled elements (used for sizing the table because chrome can't read <col> width)
            var $floatContainer = $('<div style="overflow: hidden;" aria-hidden="true"></div>');
            var floatTableHidden = false; //this happens when the table is hidden and we do magic when making it visible
            var $newHeader = $("<thead/>");
            var $sizerRow = $('<tr class="size-row"/>');
            var $sizerCells = $([]);
            var $tableCells = $([]); //used for sizing - either $sizerCells or $tableColGroup cols. $tableColGroup cols are only created in chrome for borderCollapse:collapse because of a chrome bug.
            var $headerCells = $([]);
            var $fthCells = $([]); //created elements

            $newHeader.append($sizerRow);
            $table.prepend($tableColGroup);
            if (createElements) {
                $fthGrp.append($fthRow);
                $table.append($fthGrp);
            }

            $floatTable.append($floatColGroup);
            $floatContainer.append($floatTable);
            if (opts.copyTableClass) {
                $floatTable.attr('class', $table.attr('class'));
            }
            $floatTable.attr({ //copy over some deprecated table attributes that people still like to use. Good thing people don't use colgroups...
                'cellpadding': $table.attr('cellpadding'),
                'cellspacing': $table.attr('cellspacing'),
                'border': $table.attr('border')
            });
            var tableDisplayCss = $table.css('display');
            $floatTable.css({
                'borderCollapse': $table.css('borderCollapse'),
                'border': $table.css('border'),
                'display': tableDisplayCss
            });
            if (tableDisplayCss == 'none') {
                floatTableHidden = true;
            }

            $floatTable.addClass(opts.floatTableClass).css({ 'margin': 0, 'border-bottom-width': 0 }); //must have no margins or you won't be able to click on things under floating table

            if (useAbsolutePositioning) {
                var makeRelative = function ($container, alwaysWrap) {
                    var positionCss = $container.css('position');
                    var relativeToScrollContainer = (positionCss == "relative" || positionCss == "absolute");
                    var $containerWrap = $container;
                    if (!relativeToScrollContainer || alwaysWrap) {
                        var css = { "paddingLeft": $container.css('paddingLeft'), "paddingRight": $container.css('paddingRight') };
                        $floatContainer.css(css);
                        $containerWrap = $container.data('floatThead-containerWrap') || $container.wrap("<div class='" + opts.floatWrapperClass + "' style='position: relative; clear:both;'></div>").parent();
                        $container.data('floatThead-containerWrap', $containerWrap); //multiple tables inside one scrolling container - #242
                        wrappedContainer = true;
                    }
                    return $containerWrap;
                };
                if (locked) {
                    $wrapper = makeRelative($scrollContainer, true);
                    $wrapper.prepend($floatContainer);
                } else {
                    $wrapper = makeRelative($table);
                    $table.before($floatContainer);
                }
            } else {
                $table.before($floatContainer);
            }


            $floatContainer.css({
                position: useAbsolutePositioning ? 'absolute' : 'fixed',
                marginTop: 0,
                top: useAbsolutePositioning ? 0 : 'auto',
                zIndex: opts.zIndex
            });
            $floatContainer.addClass(opts.floatContainerClass);
            updateScrollingOffsets();

            var layoutFixed = { 'table-layout': 'fixed' };
            var layoutAuto = { 'table-layout': $table.css('tableLayout') || 'auto' };
            var originalTableWidth = $table[0].style.width || ""; //setting this to auto is bad: #70
            var originalTableMinWidth = $table.css('minWidth') || "";

            function eventName(name) {
                return name + '.fth-' + floatTheadId + '.floatTHead'
            }

            function setHeaderHeight() {
                var headerHeight = 0;
                $header.children("tr:visible").each(function () {
                    headerHeight += $(this).outerHeight(true);
                });
                if ($table.css('border-collapse') == 'collapse') {
                    var tableBorderTopHeight = parseInt($table.css('border-top-width'), 10);
                    var cellBorderTopHeight = parseInt($table.find("thead tr:first").find(">*:first").css('border-top-width'), 10);
                    if (tableBorderTopHeight > cellBorderTopHeight) {
                        headerHeight -= (tableBorderTopHeight / 2); //id love to see some docs where this magic recipe is found..
                    }
                }
                $sizerRow.outerHeight(headerHeight);
                $sizerCells.outerHeight(headerHeight);
            }


            function setFloatWidth() {
                var tw = tableWidth($table, $fthCells, true);
                var width = $scrollContainer.width() || tw;
                if (!iPadAndroid) {
                    var floatContainerWidth = $scrollContainer.css("overflow-y") != 'hidden' ? width - scrollbarOffset.vertical : width;
                } else {
                    var floatContainerWidth = width;
                }
                var scwdth = scrollbarWidth()
                if (scwdth > 0) {
                    $floatContainer.width(floatContainerWidth);
                }
                else {
                    $floatContainer.width(floatContainerWidth - 7);
                }
                if (locked) {
                    var percent = 100 * tw / (floatContainerWidth);
                    $floatTable.css('width', percent + '%');
                } else {
                    $floatTable.outerWidth(tw);
                }
            }

            function updateScrollingOffsets() {
                scrollingTop = (util.isFunction(opts.top) ? opts.top($table) : opts.top) || 0;
                scrollingBottom = (util.isFunction(opts.bottom) ? opts.bottom($table) : opts.bottom) || 0;
            }

            /**
             * get the number of columns and also rebuild resizer rows if the count is different than the last count
             */
            function columnNum() {
                var count;
                var $headerColumns = $header.find(opts.headerCellSelector);
                if (existingColGroup) {
                    count = $tableColGroup.find('col').length;
                } else {
                    count = 0;
                    $headerColumns.each(function () {
                        count += parseInt(($(this).attr('colspan') || 1), 10);
                    });
                }
                if (count != lastColumnCount) {
                    lastColumnCount = count;
                    var cells = [], cols = [], psuedo = [], content;
                    for (var x = 0; x < count; x++) {
                        if (opts.enableAria && (content = $headerColumns.eq(x).text())) {
                            cells.push('<th scope="col" class="floatThead-col">' + content + '</th>');
                        } else {
                            cells.push('<th class="floatThead-col"/>');
                        }
                        cols.push('<col/>');
                        psuedo.push("<fthtd style='display:table-cell;height:0;width:auto;'/>");
                    }

                    cols = cols.join('');
                    cells = cells.join('');

                    if (createElements) {
                        psuedo = psuedo.join('');
                        $fthRow.html(psuedo);
                        $fthCells = $fthRow.find('fthtd');
                    }

                    $sizerRow.html(cells);
                    $sizerCells = $sizerRow.find("th");
                    if (!existingColGroup) {
                        $tableColGroup.html(cols);
                    }
                    $tableCells = $tableColGroup.find('col');
                    $floatColGroup.html(cols);
                    $headerCells = $floatColGroup.find("col");

                }
                return count;
            }

            function refloat() { //make the thing float
                if (!headerFloated) {
                    headerFloated = true;
                    if (useAbsolutePositioning) { //#53, #56
                        var tw = tableWidth($table, $fthCells, true);
                        var wrapperWidth = $wrapper.width();
                        if (tw > wrapperWidth) {
                            $table.css('minWidth', tw);
                        }
                    }
                    $table.css(layoutFixed);
                    $floatTable.css(layoutFixed);
                    $floatTable.append($header); //append because colgroup must go first in chrome
                    $tbody.before($newHeader);
                    setHeaderHeight();
                }
            }
            function unfloat() { //put the header back into the table
                if (headerFloated) {
                    headerFloated = false;
                    if (useAbsolutePositioning) { //#53, #56
                        $table.width(originalTableWidth);
                    }
                    $newHeader.detach();
                    $table.prepend($header);
                    $table.css(layoutAuto);
                    $floatTable.css(layoutAuto);
                    $table.css('minWidth', originalTableMinWidth); //this looks weird, but it's not a bug. Think about it!!
                    $table.css('minWidth', tableWidth($table, $fthCells)); //#121
                }
            }
            var isHeaderFloatingLogical = false; //for the purpose of this event, the header is/isnt floating, even though the element
            //might be in some other state. this is what the header looks like to the user
            function triggerFloatEvent(isFloating) {
                if (isHeaderFloatingLogical != isFloating) {
                    isHeaderFloatingLogical = isFloating;
                    $table.triggerHandler("floatThead", [isFloating, $floatContainer])
                }
            }
            function changePositioning(isAbsolute) {
                if (useAbsolutePositioning != isAbsolute) {
                    useAbsolutePositioning = isAbsolute;
                    $floatContainer.css({
                        position: useAbsolutePositioning ? 'absolute' : 'fixed'
                    });
                }
            }
            function getSizingRow($table, $cols, $fthCells, ieVersion) {
                if (createElements) {
                    return $fthCells;
                } else if (ieVersion) {
                    return opts.getSizingRow($table, $cols, $fthCells);
                } else {
                    return $cols;
                }
            }

            /**
             * returns a function that updates the floating header's cell widths.
             * @return {Function}
             */
            function reflow() {
                var i;
                var numCols = columnNum(); //if the tables columns changed dynamically since last time (datatables), rebuild the sizer rows and get a new count

                return function () {
                    $tableCells = $tableColGroup.find('col');
                    var $rowCells = getSizingRow($table, $tableCells, $fthCells, ieVersion);

                    if ($rowCells.length == numCols && numCols > 0) {
                        if (!existingColGroup) {
                            for (i = 0; i < numCols; i++) {
                                $tableCells.eq(i).css('width', '');
                            }
                        }
                        unfloat();
                        var widths = [];
                        for (i = 0; i < numCols; i++) {
                            widths[i] = getOffsetWidth($rowCells.get(i));
                        }
                        for (i = 0; i < numCols; i++) {
                            $headerCells.eq(i).width(widths[i]);
                            $tableCells.eq(i).width(widths[i]);
                        }
                        refloat();
                    } else {
                        $floatTable.append($header);
                        $table.css(layoutAuto);
                        $floatTable.css(layoutAuto);
                        setHeaderHeight();
                    }
                    $table.triggerHandler("reflowed", [$floatContainer]);
                };
            }

            function floatContainerBorderWidth(side) {
                var border = $scrollContainer.css("border-" + side + "-width");
                var w = 0;
                if (border && ~border.indexOf('px')) {
                    w = parseInt(border, 10);
                }
                return w;
            }
            /**
             * first performs initial calculations that we expect to not change when the table, window, or scrolling container are scrolled.
             * returns a function that calculates the floating container's top and left coords. takes into account if we are using page scrolling or inner scrolling
             * @return {Function}
             */
            function calculateFloatContainerPosFn() {
                var scrollingContainerTop = $scrollContainer.scrollTop();

                //this floatEnd calc was moved out of the returned function because we assume the table height doesn't change (otherwise we must reinit by calling calculateFloatContainerPosFn)
                var floatEnd;
                var tableContainerGap = 0;
                var captionHeight = haveCaption ? $caption.outerHeight(true) : 0;
                var captionScrollOffset = captionAlignTop ? captionHeight : -captionHeight;

                var floatContainerHeight = $floatContainer.height();
                var tableOffset = $table.offset();
                var tableLeftGap = 0; //can be caused by border on container (only in locked mode)
                var tableTopGap = 0;
                if (locked) {
                    var containerOffset = $scrollContainer.offset();
                    tableContainerGap = tableOffset.top - containerOffset.top + scrollingContainerTop;
                    if (haveCaption && captionAlignTop) {
                        tableContainerGap += captionHeight;
                    }
                    tableLeftGap = floatContainerBorderWidth('left');
                    tableTopGap = floatContainerBorderWidth('top');
                    tableContainerGap -= tableTopGap;
                } else {
                    floatEnd = tableOffset.top - scrollingTop - floatContainerHeight + scrollingBottom + scrollbarOffset.horizontal;
                }
                var windowTop = $window.scrollTop();
                var windowLeft = $window.scrollLeft();
                var scrollContainerLeft = $scrollContainer.scrollLeft();

                return function (eventType) {
                    var isTableHidden = $table[0].offsetWidth <= 0 && $table[0].offsetHeight <= 0;
                    if (!isTableHidden && floatTableHidden) {
                        floatTableHidden = false;
                        setTimeout(function () {
                            $table.triggerHandler("reflow");
                        }, 1);
                        return null;
                    }
                    if (isTableHidden) { //it's hidden
                        floatTableHidden = true;
                        if (!useAbsolutePositioning) {
                            return null;
                        }
                    }

                    if (eventType == 'windowScroll') {
                        windowTop = $window.scrollTop();
                        windowLeft = $window.scrollLeft();
                    } else if (eventType == 'containerScroll') {
                        scrollingContainerTop = $scrollContainer.scrollTop();
                        scrollContainerLeft = $scrollContainer.scrollLeft();
                    } else if (eventType != 'init') {
                        windowTop = $window.scrollTop();
                        windowLeft = $window.scrollLeft();
                        scrollingContainerTop = $scrollContainer.scrollTop();
                        scrollContainerLeft = $scrollContainer.scrollLeft();
                    }
                    if (isWebkit && (windowTop < 0 || windowLeft < 0)) { //chrome overscroll effect at the top of the page - breaks fixed positioned floated headers
                        return;
                    }

                    if (absoluteToFixedOnScroll) {
                        if (eventType == 'windowScrollDone') {
                            changePositioning(true); //change to absolute
                        } else {
                            changePositioning(false); //change to fixed
                        }
                    } else if (eventType == 'windowScrollDone') {
                        return null; //event is fired when they stop scrolling. ignore it if not 'absoluteToFixedOnScroll'
                    }

                    tableOffset = $table.offset();
                    if (haveCaption && captionAlignTop) {
                        tableOffset.top += captionHeight;
                    }
                    var top, left;
                    var tableHeight = $table.outerHeight();

                    if (locked && useAbsolutePositioning) { //inner scrolling, absolute positioning
                        if (tableContainerGap >= scrollingContainerTop) {
                            var gap = tableContainerGap - scrollingContainerTop + tableTopGap;
                            top = gap > 0 ? gap : 0;
                            triggerFloatEvent(false);
                        } else {
                            top = wrappedContainer ? tableTopGap : scrollingContainerTop;
                            //headers stop at the top of the viewport
                            triggerFloatEvent(true);
                        }
                        left = tableLeftGap;
                    } else if (!locked && useAbsolutePositioning) { //window scrolling, absolute positioning
                        if (windowTop > floatEnd + tableHeight + captionScrollOffset) {
                            top = tableHeight - floatContainerHeight + captionScrollOffset; //scrolled past table
                        } else if (tableOffset.top >= windowTop + scrollingTop) {
                            top = 0; //scrolling to table
                            unfloat();
                            triggerFloatEvent(false);
                        } else {
                            top = scrollingTop + windowTop - tableOffset.top + tableContainerGap + (captionAlignTop ? captionHeight : 0);
                            refloat(); //scrolling within table. header floated
                            triggerFloatEvent(true);
                        }
                        left = 0;
                    } else if (locked && !useAbsolutePositioning) { //inner scrolling, fixed positioning
                        if (tableContainerGap > scrollingContainerTop || scrollingContainerTop - tableContainerGap > tableHeight) {
                            top = tableOffset.top - windowTop;
                            unfloat();
                            triggerFloatEvent(false);
                        } else {
                            top = tableOffset.top + scrollingContainerTop - windowTop - tableContainerGap;
                            refloat();
                            triggerFloatEvent(true);
                            //headers stop at the top of the viewport
                        }
                        left = tableOffset.left + scrollContainerLeft - windowLeft;
                    } else if (!locked && !useAbsolutePositioning) { //window scrolling, fixed positioning
                        if (windowTop > floatEnd + tableHeight + captionScrollOffset) {
                            top = tableHeight + scrollingTop - windowTop + floatEnd + captionScrollOffset;
                            //scrolled past the bottom of the table
                        } else if (tableOffset.top > windowTop + scrollingTop) {
                            top = tableOffset.top - windowTop;
                            refloat();
                            triggerFloatEvent(false); //this is a weird case, the header never gets unfloated and i have no no way to know
                            //scrolled past the top of the table
                        } else {
                            //scrolling within the table
                            top = scrollingTop;
                            triggerFloatEvent(true);
                        }
                        left = tableOffset.left - windowLeft;
                    }
                    return { top: top, left: left };
                };
            }
            /**
             * returns a function that caches old floating container position and only updates css when the position changes
             * @return {Function}
             */
            function repositionFloatContainerFn() {
                var oldTop = null;
                var oldLeft = null;
                var oldScrollLeft = null;
                return function (pos, setWidth, setHeight) {
                    if (pos != null && (oldTop != pos.top || oldLeft != pos.left)) {
                        $floatContainer.css({
                            top: pos.top,
                            left: pos.left
                        });
                        oldTop = pos.top;
                        oldLeft = pos.left;
                    }
                    if (setWidth) {
                        setFloatWidth();
                    }
                    if (setHeight) {
                        setHeaderHeight();
                    }
                    var scrollLeft = $scrollContainer.scrollLeft();
                    if (!useAbsolutePositioning || oldScrollLeft != scrollLeft) {
                        $floatContainer.scrollLeft(scrollLeft);
                        oldScrollLeft = scrollLeft;
                    }
                }
            }

            /**
             * checks if THIS table has scrollbars, and finds their widths
             */
            function calculateScrollBarSize() { //this should happen after the floating table has been positioned
                if ($scrollContainer.length) {
                    if ($scrollContainer.data().perfectScrollbar) {
                        scrollbarOffset = { horizontal: 0, vertical: 0 };
                    } else {
                        var sw = $scrollContainer.width(), sh = $scrollContainer.height(), th = $table.height(), tw = tableWidth($table, $fthCells);
                        var offseth = sw < tw ? scWidth : 0;
                        var offsetv = sh < th ? scWidth : 0;
                        scrollbarOffset.horizontal = sw - offsetv < tw ? scWidth : 0;
                        scrollbarOffset.vertical = sh - offseth < th ? scWidth : 0;
                    }
                }
            }
            //finish up. create all calculation functions and bind them to events
            calculateScrollBarSize();

            var flow;

            var ensureReflow = function () {
                flow = reflow();
                flow();
            };

            ensureReflow();

            var calculateFloatContainerPos = calculateFloatContainerPosFn();
            var repositionFloatContainer = repositionFloatContainerFn();

            repositionFloatContainer(calculateFloatContainerPos('init'), true); //this must come after reflow because reflow changes scrollLeft back to 0 when it rips out the thead

            var windowScrollDoneEvent = util.debounce(function () {
                repositionFloatContainer(calculateFloatContainerPos('windowScrollDone'), false);
            }, 1);

            var windowScrollEvent = function () {
                repositionFloatContainer(calculateFloatContainerPos('windowScroll'), false);
                if (absoluteToFixedOnScroll) {
                    windowScrollDoneEvent();
                }
            };
            var containerScrollEvent = function () {
                repositionFloatContainer(calculateFloatContainerPos('containerScroll'), false);
            };


            var windowResizeEvent = function () {
                if ($table.is(":hidden")) {
                    return;
                }
                updateScrollingOffsets();
                calculateScrollBarSize();
                ensureReflow();
                calculateFloatContainerPos = calculateFloatContainerPosFn();
                repositionFloatContainer = repositionFloatContainerFn();
                repositionFloatContainer(calculateFloatContainerPos('resize'), true, true);
            };
            var reflowEvent = util.debounce(function () {
                if ($table.is(":hidden")) {
                    return;
                }
                calculateScrollBarSize();
                updateScrollingOffsets();
                ensureReflow();
                calculateFloatContainerPos = calculateFloatContainerPosFn();
                repositionFloatContainer(calculateFloatContainerPos('reflow'), true);
            }, 1);
            if (locked) { //internal scrolling
                if (useAbsolutePositioning) {
                    $scrollContainer.on(eventName('scroll'), containerScrollEvent);
                } else {
                    $scrollContainer.on(eventName('scroll'), containerScrollEvent);
                    $window.on(eventName('scroll'), windowScrollEvent);
                }
            } else { //window scrolling
                $window.on(eventName('scroll'), windowScrollEvent);
            }

            $window.on(eventName('load'), reflowEvent); //for tables with images

            windowResize(eventName('resize'), windowResizeEvent);
            $table.on('reflow', reflowEvent);
            if (isDatatable($table)) {
                $table
                  .on('filter', reflowEvent)
                  .on('sort', reflowEvent)
                  .on('page', reflowEvent);
            }

            $window.on(eventName('shown.bs.tab'), reflowEvent); // people cant seem to figure out how to use this plugin with bs3 tabs... so this :P
            $window.on(eventName('tabsactivate'), reflowEvent); // same thing for jqueryui


            if (canObserveMutations) {
                var mutationElement = null;
                if (util.isFunction(opts.autoReflow)) {
                    mutationElement = opts.autoReflow($table, $scrollContainer)
                }
                if (!mutationElement) {
                    mutationElement = $scrollContainer.length ? $scrollContainer[0] : $table[0]
                }
                mObs = new MutationObserver(function (e) {
                    var wasTableRelated = function (nodes) {
                        return nodes && nodes[0] && (nodes[0].nodeName == "THEAD" || nodes[0].nodeName == "TD" || nodes[0].nodeName == "TH");
                    };
                    for (var i = 0; i < e.length; i++) {
                        if (!(wasTableRelated(e[i].addedNodes) || wasTableRelated(e[i].removedNodes))) {
                            reflowEvent();
                            break;
                        }
                    }
                });
                mObs.observe(mutationElement, {
                    childList: true,
                    subtree: true
                });
            }

            //attach some useful functions to the table.
            $table.data('floatThead-attached', {
                destroy: function () {
                    var ns = '.fth-' + floatTheadId;
                    unfloat();
                    $table.css(layoutAuto);
                    $tableColGroup.remove();
                    createElements && $fthGrp.remove();
                    if ($newHeader.parent().length) { //only if it's in the DOM
                        $newHeader.replaceWith($header);
                    }
                    if (canObserveMutations) {
                        mObs.disconnect();
                        mObs = null;
                    }
                    $table.off('reflow reflowed');
                    $scrollContainer.off(ns);
                    if (wrappedContainer) {
                        if ($scrollContainer.length) {
                            $scrollContainer.unwrap();
                        }
                        else {
                            $table.unwrap();
                        }
                    }
                    if (locked) {
                        $scrollContainer.data('floatThead-containerWrap', false);
                    } else {
                        $table.data('floatThead-containerWrap', false);
                    }
                    $table.css('minWidth', originalTableMinWidth);
                    $floatContainer.remove();
                    $table.data('floatThead-attached', false);
                    $window.off(ns);
                },
                reflow: function () {
                    reflowEvent();
                },
                setHeaderHeight: function () {
                    setHeaderHeight();
                },
                getFloatContainer: function () {
                    return $floatContainer;
                },
                getRowGroups: function () {
                    if (headerFloated) {
                        return $floatContainer.find('>table>thead').add($table.children("tbody,tfoot"));
                    } else {
                        return $table.children("thead,tbody,tfoot");
                    }
                }
            });
        });
        return this;
    };
})(jQuery);

/* jQuery.floatThead.utils - http://mkoryak.github.io/floatThead/ - Copyright (c) 2012 - 2014 Misha Koryak
 * License: MIT
 *
 * This file is required if you do not use underscore in your project and you want to use floatThead.
 * It contains functions from underscore that the plugin uses.
 *
 * YOU DON'T NEED TO INCLUDE THIS IF YOU ALREADY INCLUDE UNDERSCORE!
 *
 */

(function ($) {

    $.floatThead = $.floatThead || {};

    $.floatThead._ = window._ || (function () {
        var that = {};
        var hasOwnProperty = Object.prototype.hasOwnProperty, isThings = ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'];
        that.has = function (obj, key) {
            return hasOwnProperty.call(obj, key);
        };
        that.keys = function (obj) {
            if (obj !== Object(obj)) throw new TypeError('Invalid object');
            var keys = [];
            for (var key in obj) if (that.has(obj, key)) keys.push(key);
            return keys;
        };
        var idCounter = 0;
        that.uniqueId = function (prefix) {
            var id = ++idCounter + '';
            return prefix ? prefix + id : id;
        };
        $.each(isThings, function () {
            var name = this;
            that['is' + name] = function (obj) {
                return Object.prototype.toString.call(obj) == '[object ' + name + ']';
            };
        });
        that.debounce = function (func, wait, immediate) {
            var timeout, args, context, timestamp, result;
            return function () {
                context = this;
                args = arguments;
                timestamp = new Date();
                var later = function () {
                    var last = (new Date()) - timestamp;
                    if (last < wait) {
                        timeout = setTimeout(later, wait - last);
                    } else {
                        timeout = null;
                        if (!immediate) result = func.apply(context, args);
                    }
                };
                var callNow = immediate && !timeout;
                if (!timeout) {
                    timeout = setTimeout(later, wait);
                }
                if (callNow) result = func.apply(context, args);
                return result;
            };
        };
        return that;
    })();
})(jQuery);

;
/// <reference path="../../JS/UserControl_JS/Signup.js" />
(function () {
    Vsecure = {

        model: {},

        init: function (cap, dvcap, ifrm, IsSf, ifrLoadedCallback,count) {
            this.model.cap = cap;
            this.model.dvcap = dvcap;
            this.model.ifrm = ifrm;
            this.model.ltype = 0;

            this.ifrmLoadedCallback = ifrLoadedCallback;

            if (typeof this.model.IsSf === 'undefined') {
                this.model.IsSf = IsSf; //initialize IsSf only once
            }

            if (this.model.IsSf == '0') {
                this.loadIfrm();
            }
        },

        getC: function () {
            if (typeof this.model.cap === "undefined" || this.isCapShown() == false) {
                return "";
            }

            return $("#" + this.model.cap).val();
        },

        showHideCap: function (isShow) {
            if (isShow) {
                $("#" + this.model.dvcap).slideDown();
                this.model.IsSf = '0';
            }
            else {
                $("#" + this.model.cap).val("");
                this.model.IsSf = '1';
                $("#" + this.model.dvcap).slideUp();
            }

        },
        loadIfrm: function () {
            if (document.getElementById(this.model.ifrm)) {
                var ifrm = $("#" + this.model.ifrm);

                var browser = '';
                var isIE11 = !!navigator.userAgent.match(/Trident.*/);
                if (navigator.appName == 'Microsoft Internet Explorer' || isIE11) {
                    browser = 'ie';
                }

                var issrcset = false;

                if (typeof ifrm.attr("src") === 'undefined' || ifrm.attr("src") == "") {
                    //var url = window.location.href.replace('https:','').replace('http:','');

                    var wid = '0';
                    if (typeof (Captcha_IsWidget) === "function") {
                        wid = Captcha_IsWidget();
                    }

                    var url = "//" + location.host + "/Users/CaptchaContainer.aspx?IsW=0";

                    ifrm.attr("src", url); // causes refresh in ie

                    //window.frames[this.model.ifrm].document.location.href = url;
                    issrcset = true;
                }

                if (browser == 'ie') {
                    if (issrcset == false) {
                        document.getElementById(this.model.ifrm).src = document.getElementById(this.model.ifrm).src;
                    }
                }
                else {
                    document.getElementById(this.model.ifrm).src = document.getElementById(this.model.ifrm).src;
                }
                this.showHideLoader(true);
                //document.getElementById("ifrmCpch").contentDocument.location.reload(true);
            }
        },
        isCapShown: function () {
            return $('#' + this.model.dvcap).is(':visible');
        },
        isValid: function (errclass) {

            if (this.isCapShown() == false) {
                return true;
            }

            var cap = $("#" + this.model.cap);

            if (typeof errclass === 'undefined' || errclass == '') {
                errclass = 'errorInput';
            }

            cap.val(cap.val().replace('%', ''));  // replace card swipe character

            cap.removeClass(errclass);
            if (this.isCapShown() && cap.val() == "") {
                cap.addClass(errclass);
                return false;
            }
            return true;
        },
        ifrmLoaded: function () {
            if (typeof (this.ifrmLoadedCallback) === "function") {
                //console.log('ifrm loaded');
                this.ifrmLoadedCallback();
            }
            this.showHideLoader(false);
        },
        showHideLoader: function (isShow) {

            var loader = $("#apgLoading");

            if (loader.length == 0 && typeof (SignUp_Loading) !== "undefined") {
                loader = $(SignUp_Loading);
            }

            if (loader.length) {

                if (isShow) {
                    loader.show();
                }
                else {
                    loader.hide();
                }
            }
        }

    }
})();

(function () {
    TwoStepAuth = {
        model: {},
        init: function (pg, email, cell, codRecMode, resendStatus, resendlnk, txt2SCode, countryID) {
            this.model.pg = pg;

            this.model.email = email;
            this.model.cell = cell;
            this.model.codRecMode = codRecMode;

            this.model.isInit = false;

            if (typeof resendStatus === 'undefined') {
                this.model.resendStatus = 'sp2SResend';
            }
            else {
                this.model.resendStatus = resendStatus;
            }

            if (typeof resendlnk === 'undefined') {
                this.model.resendlnk = 'lnk2SResend';
            }
            else {
                this.model.resendlnk = resendlnk;
            }

            if (typeof txt2SCode === 'undefined') {
                this.model.txt2SCode = 'txt2SCode'; // textbox id
            }
            else {
                this.model.txt2SCode = txt2SCode;
            }
            if (typeof countryID === 'undefined') {
                this.model.countryID = '';
            }
            else {
                this.model.countryID = countryID;
            }

            if (this.model.pg != 'adminLogin') {
                this.Set2StepHtml();
            }

        },
        Set2StepHtml: function () {

            var html = "";
            // set html to show 2nd step of login

            this.model.isSt2Shown = true;           
            html = '<div class="signup-verify">' +
                '<div class="verify-text">' +
                '<div class="icon">' +
                '<svg width="48" height="48" id="Layer_1" data-name="Layer 1" viewBox="0 0 60 60"><path class="cls-1" d = "M31.73,56.24c-1.57.09-3.26.14-5.16.14-6.29,0-12.54-.59-18.6-1.74-.96-.18-1.66-1.02-1.66-2v-2.48c0-8.56,7.1-15.52,15.82-15.52h8.86c2.23,0,4.45.46,6.4,1.33.93.41,2.02,0,2.44-.9.42-.91.01-1.99-.92-2.4-.84-.37-1.73-.66-2.63-.91,4.77-3.1,7.92-8.41,7.92-14.43C44.21,7.77,36.3,0,26.56,0S8.92,7.77,8.92,17.31c0,6.02,3.15,11.33,7.92,14.43-8.19,2.27-14.22,9.66-14.22,18.41v2.48c0,2.72,1.96,5.07,4.66,5.56,6.28,1.2,12.77,1.8,19.29,1.8,1.98,0,3.74-.05,5.39-.14,1.02-.06,1.79-.92,1.73-1.92-.06-1-.94-1.74-1.95-1.7h0ZM12.61,17.31c0-7.55,6.26-13.69,13.95-13.69s13.95,6.14,13.95,13.69-6.26,13.69-13.95,13.69-13.95-6.14-13.95-13.69h0Z" /><path class="cls-1" d="M53.46,43.84v-2.1c0-3.45-2.86-6.25-6.37-6.25-2.32,0-4.46,1.24-5.58,3.23-.49.88-.17,1.98.72,2.46.9.48,2.02.17,2.51-.71.47-.84,1.37-1.36,2.35-1.36,1.48,0,2.68,1.18,2.68,2.63v2.02h-8.2c-2.63,0-4.77,2.1-4.77,4.68v6.88c0,2.58,2.14,4.68,4.77,4.68h11.05c2.63,0,4.77-2.1,4.77-4.68v-6.88c0-2.3-1.7-4.2-3.92-4.6h0ZM53.69,55.32c0,.58-.48,1.06-1.08,1.06h-11.05c-.6,0-1.08-.48-1.08-1.06v-6.88c0-.58.48-1.06,1.08-1.06h11.05c.6,0,1.08.48,1.08,1.06v6.88Z" /></svg>' +
                '</div>' +
                '<h2>2-Step Authentication</h2>' +
                '<p id="verificationDesc">Enter the 6-digit code we sent to <strong> ' + ((this.model.cell != "undefined" && this.model.cell != null && this.model.cell != "") ? this.formatEmail(this.model.email) + '</strong> or <strong>' + this.formatCell(this.model.cell) : this.formatEmail(this.model.email))+'</strong>.</p>' +
                '<div class="input-part" id="ulAuthCode" data-type="validcontainer">' +
                '<label>Verification Code:</label>' +
                '<input id="' + this.model.txt2SCode + '" type="tel" pattern="\d*" inputmode="numeric" name="' + this.model.txt2SCode + '" maxlength="6" autocomplete="off" class="input-box" onkeyup="_twoFactor.AllowNumberOnly(this);" placeholder="Enter 6-digit code">' +
                '<div id="spnErrorCode" class="errortext">required</div>' +
                '<p><a href="javascript:void(0);" class="ghost-button" id="' + this.model.resendlnk + '" onclick="TwoStepAuth.resendCode();">Send a New Code</a>' +
                '<a href="javascript:void(0);" class="ghost-button" id="' + this.model.resendStatus + '" style="display:none"></a>' +
                '</p>' +
                '</div>' +
                '<div class="signup-button-center">' +
                '<button id="authCodeStep" type="button" class="form-next-button w-button">Verify </button>' +
                '</div></div></div>';


            //html = '<div class="login-emailsms-Wrap" style="display">' +
            /*
            html = '<div class="login-emailsms-box">' +
                    '<ul>' +
                        '<li>A text message with your code has been sent to </li>';

            if (this.model.codRecMode == '3') {
                html += '<li class="mar-bottom5"><span>Email :</span> <div class="twostepfieldtext">' + this.formatEmail(this.model.email) + '</div> </li>';
                html += '<li><span>Cell :</span> <div class="twostepfieldtext">' + this.formatCell(this.model.cell) + '</div></li>';
            }
            else if (this.model.codRecMode == '1') {
                html += '<li class="mar-bottom5"><span>Email :</span>' + this.formatEmail(this.model.email) + '</li>';
            }
            else if (this.model.codRecMode == '2') {
                html += '<li><span>Cell :</span>' + this.formatCell(this.model.cell) + '</li>';
            }

            html += '</ul> </div>';
            html += '<div class="login-enterotp">';
            html += '<ul id="ulAuthCode" data-type="validcontainer">' +
                        '<li>' +
                            ' <div class="loginfrmcontrol"> <div class="sign-in-text-field"><div class="btn-icon-div"><img class="lazy-img" data-original="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/PublicImages/Images/lock-icon@2x.png" width="14" alt="" title="" src="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/PublicImages/Images/lock-icon@2x.png" style="display: block;"></div><input type="text" id="' + this.model.txt2SCode + '" maxlength="8" class="signininput" placeholder="Please enter code"/></div>     <div class="errortext">required</div></div></li>' +
                        '<li>' +
                            '<a href="javascript:void(0)" id="' + this.model.resendlnk + '" onclick="javascript:return TwoStepAuth.resendCode();" tabindex="5">Click here to resend code</a>' +
                            '<p id="' + this.model.resendStatus + '" style="display:none"></p>' +
                        '</li>';

            if (this.model.pg == 'LoginPage') {
                html += '<li class="margin-top10"><button type="button" id="btnPLogin2" class="log-in-btn w-button thm-contentButton" >Login</button></li>';
            }

            html += '</ul>' +
                '</div>';
            */
            //html += '</div>';

            var title = 'Login - Step 2';
            // set btn , div objects for common functionality
            if (this.model.pg == 'signupNew' || this.model.pg == 'Login') {

                var popup = $('#divLoginNew');
                this.model.title = popup.find('.modal-title');
                // move buttons to right
                popup.find(".modal-footer").removeClass("btn-left-align");

                this.model.divLoginStep1 = "divLoginStep1";
                this.model.divLoginStep2 = "divLoginStep2";
                $("#" + this.model.divLoginStep2).html(html);

                this.model.btnLogin = popup.find("#btLogin");
                this.model.btnLogin2 = popup.find("#btSNew2Login");
                this.model.btnLogin3 = $("#" + this.model.divLoginStep2).find("#authCodeStep");



            }
            else if (this.model.pg == 'LoginPage') {

                this.model.title = $('#wrapper').find('.page-title');
                recaptch.isCapShown() ? recaptch.showHideCap("False") : "";
                this.model.divLoginStep1 = "divPLoginStep1";
                this.model.divLoginStep2 = "divPLoginStep2";
                // $("#" + this.model.divLoginStep2).html(html);
                $("#logincontrol").addClass('twosteploginpage');
                $(".stepLogin2 > #sp2divinnerone").hide();
                $(".facebook-login-oauth .stepLogin1").hide();
                $(".stepLogin2 > #sp2divinnertwo").show().html(html);

                // this.model.btnLogin = $('#divPLoginStep1').find('[id*=btnLogin]');
                //  this.model.btnLogin2 = $('#divPLoginStep2').find('#btnPLogin2');

                this.model.btnLogin = $('.stepLogin2 > #sp2divinnertwo').find('[id*=btnLogin]');
                this.model.btnLogin2 = $('.stepLogin2 > #sp2divinnertwo').find('#btnPLogin2');
                this.model.btnLogin3 = $('.stepLogin2 > #sp2divinnertwo').find("#authCodeStep");

                $("[id *=pnlogin]").attr("onkeypress", "");// remove default button for login to prevent keypress

            }
            else if (this.model.pg == 'CMSMaster') {
                var popup = $('[id*=pnlLogin]');
                this.model.title = popup.find('.Popupspanheight');

                this.model.divLoginStep1 = "divLoginStep1";
                this.model.divLoginStep2 = "divLoginStep2";
                $("#" + this.model.divLoginStep2).html(html);
                $('#divLoginNew .btn-left-align').removeClass("btn-left-align");
                this.model.btnLogin = popup.find('[id*=btnLogin]');
                this.model.btnLogin2 = popup.find('#btnLogin2');
                this.model.btnLogin3 = $("#" + this.model.divLoginStep2).find("#authCodeStep");
                // move buttons to right side
                popup.find(".popupBtnDiv").addClass("login-btn-right");

                popup.find("[id*=pnlAddEdit]").attr("onkeypress", "");// remove default button for login to prevent keypress
            }
            else if (this.model.pg == 'ScreenLock') {
                //debugger;
                var popup = $('#divLoginPopUp');
                //this.model.title = '';//popup.find('.modal-title');
                // move buttons to right
                //popup.find(".modal-footer").removeClass("btn-left-align");

                this.model.divLoginStep1 = "divLoginStep1";
                this.model.divLoginStep2 = "divLoginStep2";
                $("#" + this.model.divLoginStep2).html(html);

                //this.model.btnLogin = popup.find("#btnLogin");
                //this.model.btnLogin2 = popup.find("#btnLogin2");
                this.model.btnLogin = popup.find('[id*=btnLogin]');
                this.model.btnLogin2 = $('#divLoginNew').find('#btSNew2Login');
                this.model.btnLogin3 = $("#" + this.model.divLoginStep2).find("#authCodeStep");
            }

            //this.model.title.text(title);

            $('#' + this.model.txt2SCode).change(function () {
                $(this).removeClass("errorInput");
            });

            $("#" + this.model.divLoginStep1).hide();
            $("#divLoginNew").addClass('twostep-popup');
            $("#" + this.model.divLoginStep2).show();

            this.model.ulAuthCode = "ulAuthCode";

            this.model.btnLogin3.off(); // remove all eventhandlers from login2 button
            this.model.btnLogin3.on("click", this.Validate2StCod_FrntSite); // attach event handler

            this.model.btnLogin.hide();
            this.model.btnLogin2.hide();

            $("#" + this.model.divLoginStep2).off();
            $("#" + this.model.divLoginStep2).keypress(function (e) {
                //if (e.keyCode == '13') {
                    //TwoStepAuth.model.btnLogin2.click();
                    return WebForm_FireDefaultButton(e, TwoStepAuth.model.btnLogin2.attr('id'));
                //}
            });


            $('#' + this.model.txt2SCode).focus();

        },
        formatEmail: function (email) {
            var split = email.split('@');
            if (split.length == 2) {
                email = this.formatCell(split[0], true) + '@' + split[1];
            }
            return email;
        },
        formatCell: function (cell,isEmail = false) {
            
            var prefix = '';
            var cnt = 3;
            if (cell.length <= 3) {
                cnt = 1;
            }
            for (var i = 0; i < cell.length - cnt; i++) {
                prefix += '*';
            }
            if (isEmail == false) {
                switch (this.model.countryID) {
                    case "4":
                        phoneNumHidden = "(**) **** *";
                        break;
                    case "3":
                        phoneNumHidden = "***-***-*";
                        break;
                    case "2":
                        phoneNumHidden = "*** **** *";
                    case "1":
                        phoneNumHidden = "(***) ***-*";
                        break;
                    default:
                        phoneNumHidden = prefix;
                }
                cell = phoneNumHidden + cell.substring(cell.length - cnt, cell.length);
            } else {
                cell = prefix + cell.substring(cell.length - cnt, cell.length);
            }

            
            return cell;
        },
        switchToStep1: function () {
            // reset html to step 1 in case of logout and the user is on same page
            if (typeof this.model.isSt2Shown === 'undefined') {
                return;
            }
            if (this.model.isSt2Shown) {

                //this.model.title.text('Login');

                this.model.isSt2Shown = false;
                $("#" + this.model.divLoginStep1).show();
                $("#" + this.model.divLoginStep2).html("");
                $("#" + this.model.divLoginStep2).hide();
                $("#divLoginNew").removeClass('twostep-popup');

                this.model.btnLogin.show();
                this.model.btnLogin2.hide();

                if (this.model.pg == 'signupNew') {
                    $('#divLoginNew').find(".modal-footer").addClass("btn-left-align");
                }
                else if (this.model.pg == 'CMSMaster') {
                    var pnllogin = $('[id*=pnlLogin]');

                    pnllogin.find(".popupBtnDiv").removeClass("login-btn-right");
                    $('#divLoginNew .modal-footer').addClass("btn-left-align");
                    var pnlAddEdit = $("[id *=pnlAddEdit]");
                    pnlAddEdit.off("keypress");
                    pnlAddEdit.keypress(function (e) {
                        //if (e.keyCode == '13') {
                        //TwoStepAuth.model.btnLogin1.click();
                        return WebForm_FireDefaultButton(e, pnllogin.find('[id*=btnLogin]').attr('id'));
                        //}
                    });// reset default login btn for div
                }
                else if (this.model.pg == 'LoginPage') {
                }
            }
        },
        resendCode: function () {
            Vsecure.showHideLoader(true);
            $('#' + this.model.txt2SCode).val('');
            var objresendStatus = $('#' + this.model.resendStatus);
            objresendStatus.css('color', '');
            objresendStatus.text('Sending Code ...');
            $('#' + this.model.txt2SCode).removeClass('error');
            $("#spnErrorCode").hide();
            $("#" + this.model.resendlnk).hide();
            objresendStatus.show();

            CallWebServicehed('MySampleService.asmx/ResendTwoStepAuthCode', '', this.resendCode_Success, this.resendCode_Fail);
            return false;
        },
        resendCode_Success: function (resp) {
            var objresendStatus = $('#' + TwoStepAuth.model.resendStatus);
            var objresendlnk = $("#" + TwoStepAuth.model.resendlnk);

            switch (resp.d) {
                case '0':

                    objresendStatus.text('The code has been sent.');

                    setTimeout(function () {
                        Vsecure.showHideLoader(false);
                        objresendStatus.hide();
                        objresendlnk.show();
                    }, 5000);

                    break;
                case '-1':
                    objresendStatus.css('color', 'red');
                    objresendStatus.text('Some error has occured while resending code.');
                    setTimeout(function () {
                        Vsecure.showHideLoader(false);
                        objresendStatus.hide();
                        objresendlnk.show();
                    }, 5000);
                    break;
                case '-2':
                    objresendStatus.text('You are not logged in.');
                    setTimeout(function () {
                        Vsecure.showHideLoader(false);
                        //document.location.reload(); // refresh page with post method
                        document.location = document.location; // refresh page with get method
                    }, 3000);
                    break;
            }
        },
        resendCode_Fail: function (resp) {
            //_securelogin.showAlert('Something went wrong', function () { });
            var objresendStatus = $('#' + TwoStepAuth.model.resendStatus);
            var objresendlnk = $("#" + TwoStepAuth.model.resendlnk);

            objresendStatus.css('color', 'red');
            objresendStatus.text('Some error has occured while resending code.');
            setTimeout(function () {
                objresendStatus.hide();
                objresendlnk.show();
                Vsecure.showHideLoader(true);
            }, 5000);
        },
        is2StepShown: function () {
            if (typeof this.model.isSt2Shown === 'undefined') {
                return false;
            }
            return this.model.isSt2Shown; // return if the 2 step screen is shown
        },
        Validate2StCod_FrntSite: function () {

            var txt2SCode = $('#' + TwoStepAuth.model.txt2SCode);
            var spnError = $("#spnErrorCode");

            //if (typeof $("#" + TwoStepAuth.model.ulAuthCode).valid === 'function') {
            //    if ($("#" + TwoStepAuth.model.ulAuthCode).valid() == false) {
            //        return false;
            //    }
            //}
            //else
            if (txt2SCode.val() == '' || txt2SCode.val().length < 6 || txt2SCode.val().length > 6) {
                txt2SCode.html("Please enter verification code.").addClass('error');
                spnError.show();
                return false;
            } else {
                txt2SCode.removeClass('error');
                spnError.hide();
            }
            Vsecure.showHideLoader(true);

            //Code Start : Added By : Divyesh on 29/03/2017
            var OSName = "Unknown";
            var clientDate = "";
            try {
                if (navigator.appVersion.indexOf("Win") != -1) OSName = "Windows";
                else if (navigator.appVersion.indexOf("Mac") != -1) OSName = "Mac/iOS";
                else if (navigator.appVersion.indexOf("X11") != -1) OSName = "UNIX";
                else if (navigator.appVersion.indexOf("Linux") != -1) OSName = "Linux";
                var currentdate = new Date();
                //yyyy-MM-dd HH:mm:ss
                var datetime = currentdate.getFullYear() + "-" + ('0' + (currentdate.getMonth() + 1)).slice(-2) + "-" + ('0' + currentdate.getDate()).slice(-2)
                               + " " + ('0' + currentdate.getHours()).slice(-2) + ":"
                               + ('0' + currentdate.getMinutes()).slice(-2) + ":"
                               + ('0' + currentdate.getSeconds()).slice(-2);
                clientDate = datetime;
            } catch (e) {
                OSName = "Unknown";
                clientDate = "";
            }
            //Code End :


            CallWebServicehed('MySampleService.asmx/Is2StepCodeValid', '"code" : ' + _securelogin.getJsonVal(txt2SCode.val()) + ',"operatingSystem" : ' + _securelogin.getJsonVal(OSName) + ',"clientDate" : ' + _securelogin.getJsonVal(clientDate)
                , function (resp) {
                    //alert(resp.d);
                    var r = resp.d;
                    switch (r) {
                        case "1": // invalid code
                        case "-1": // invalid header
                            txt2SCode.addClass('error');
                            spnError.html("Invalid code, try again.").show();
                            txt2SCode.val('');
                            txt2SCode.focus();
                            break;
                        case "0": // valid code
                            txt2SCode.removeClass('error');
                            spnError.hide();
                            _securelogin.AfterSuccessfullLogin();
                            break;
                        case "2": // expired code
                            txt2SCode.addClass('error');
                            spnError.html("The code has been expired. Please click resend link.").show();
                            txt2SCode.val('');
                            txt2SCode.focus();
                            break;
                    }

                    Vsecure.showHideLoader(false);
                    // fix design issue for cms login page
                    if (TwoStepAuth.model.pg == 'CMSMaster') {
                        if (typeof hideVideobox === 'function') {
                            hideVideobox();
                        }
                    }
                }
                , function (resp) {
                    _securelogin.showAlert('Something went wrong while validating the code', function () { });
                    Vsecure.showHideLoader(false);
                });
            return false;
        },

    }
}//obj
)();

(function () {
    recaptch = {
        model: {},
        init: function (IsSf) {
            if (typeof this.model.IsSf === 'undefined') {
                this.model.IsSf = IsSf; //initialize IsSf only once
            }
            if (this.model.IsSf == '0') {

                loadGoogleCaptch();

            }
        },

        loadGoogleCaptch: function () {            
            if (typeof (IsShowCapcha) != "undefined" && IsShowCapcha != null) {            
                recaptch.showHideCap(IsShowCapcha);
            }

            if (typeof grecaptcha !== 'undefined' && $("#dvCaptcha").length > 0 && $("#dvCaptcha").html() == "" && typeof grecaptcha.render !== 'undefined') {
                dvcontainer = grecaptcha.render('dvCaptcha', {
                    'sitekey': ReCaptchSiteKey,
                    'expired-callback' :function (response){
                        recaptch.reset();
                        c_responce = null;
                    },
                    'callback': function (response) {
                        $("[id*=txtCaptcha]").val(c_responce);
                        $("[id*=rfvCaptcha]").hide();
                        c_responce = response;

                    }
                });
            }
        },
        loadGoogleCaptchForSignup: function () {
            if (typeof (IsShowCapcha) != "undefined" && IsShowCapcha != null) {
                recaptch.showHideCap(IsShowCapcha);
            }

            if (typeof grecaptcha !== 'undefined' && $("#dvCaptcha").length > 0 && $("#dvCaptcha").html() == "" && typeof grecaptcha.render !== 'undefined') {
                dvcontainer = grecaptcha.render('dvCaptcha', {
                    'sitekey': ReCaptchSiteKey,
                    'expired-callback': function (response) {
                        recaptch.reset();
                        c_responce = null;
                    },
                    'callback': function (response) {
                        $("[id*=txtCaptcha]").val(c_responce);
                        $("[id*=rfvCaptcha]").hide();
                        c_responce = response;
                        if (c_responce != null && typeof vm != "undefined" && vm != null && typeof vm.LoadCCFrame != "undefined") {
                            vm.LoadCCFrame();
                            recaptch.showHideCap("False");
                            recaptch.reset();
                        }
                    }
                });
            }
        },
         getResonce:function (){
             return (c_responce == null) ? "" :c_responce;
        },
        showHideCap: function (isShow) {

            if (isShow === "False") {
                $("#divloginSCap").slideUp();
                if (!recaptch.chkStringUndefinedOrNot(window.location.pathname) && (window.location.pathname).toString().toLowerCase() == "/oauth/fb")
                    $(".facebook-login-oauth").removeClass("facebook-oauth-catcha");
                this.model.IsSf = '1';                
            }
            else {
                $("#divloginSCap").slideDown();
                if (!recaptch.chkStringUndefinedOrNot(window.location.pathname) && (window.location.pathname).toString().toLowerCase() == "/oauth/fb")
                    $(".facebook-login-oauth").addClass("facebook-oauth-catcha");
                this.model.IsSf = '0';                
            }

        },
        isCapAllowtoShow  : function (){
            return typeof (IsShowCapcha) != "undefined" ? IsShowCapcha : false;
        },
        isCapShown: function () {
            return $('#divloginSCap').is(':visible');
        },
        reset: function () {
            if (typeof grecaptcha !== 'undefined' && grecaptcha && grecaptcha.reset) {
                grecaptcha.reset(dvcontainer);
                $("[id*=txtCaptcha]").val("");
                c_responce = null;
            }
        },
        chkStringUndefinedOrNot: function (data)
        {
            if (typeof (data) == "undefined" || data == undefined || data == "" || data == null) {
                return true;
            }
            return false;
        }


    }

    if (typeof (IsShowCapcha) != "undefined" && IsShowCapcha != null)
    {
        recaptch.showHideCap(IsShowCapcha);
    }
})();;
(function(n){function o(i,r,f,o){var s={data:o||o===0||o===!1?o:r?r.data:{},_wrap:r?r._wrap:null,tmpl:null,parent:r||null,nodes:[],calls:d,nest:g,wrap:nt,html:tt,update:it};return i&&n.extend(s,i,{nodes:[],parent:r}),f&&(s.tmpl=f,s._ctnt=s._ctnt||s.tmpl(n,s),s.key=++e,(c.length?u:t)[e]=s),s}function s(t,i,u){var f,e=u?n.map(u,function(n){return typeof n=="string"?t.key?n.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g,"$1 "+r+'="'+t.key+'" $2'):n:s(n,t,n._ctnt)}):t;return i?e:(e=e.join(""),e.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/,function(t,i,r,u){f=n(r).get();b(f);i&&(f=l(i).concat(f));u&&(f=f.concat(l(u)))}),f?f:l(e))}function l(t){var i=document.createElement("div");return i.innerHTML=t,n.makeArray(i.childNodes)}function p(t){return new Function("jQuery","$item","var $=jQuery,call,__=[],$data=$item.data;with($data){__.push('"+n.trim(t).replace(/([\\'])/g,"\\$1").replace(/[\r\t\n]/g," ").replace(/\$\{([^\}]*)\}/g,"{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g,function(t,i,r,u,f,e,o){var c=n.tmpl.tag[r],l,s,a;if(!c)throw"Unknown template tag: "+r;return l=c._default||[],e&&!/\w$/.test(f)&&(f+=e,e=""),f?(f=h(f),o=o?","+h(o)+")":e?")":"",s=e?f.indexOf(".")>-1?f+h(e):"("+f+").call($item"+o:f,a=e?s:"(typeof("+f+")==='function'?("+f+").call($item):("+f+"))"):a=s=l.$1||"null",u=h(u),"');"+c[i?"close":"open"].split("$notnull_1").join(f?"typeof("+f+")!=='undefined' && ("+f+")!=null":"true").split("$1a").join(a).split("$1").join(s).split("$2").join(u||l.$2||"")+"__.push('"})+"');}return __;")}function w(t,i){t._wrap=s(t,!0,n.isArray(i)?i:[v.test(i)?i:n(i).html()]).join("")}function h(n){return n?n.replace(/\\'/g,"'").replace(/\\\\/g,"\\"):null}function k(n){var t=document.createElement("div");return t.appendChild(n.cloneNode(!0)),t.innerHTML}function b(f){function p(f){function p(n){n=n+a;s=v[n]=v[n]||o(s,t[s.parent.key+a]||s.parent)}var y,h=f,c,s,l;if(l=f.getAttribute(r)){while(h.parentNode&&(h=h.parentNode).nodeType===1&&!(y=h.getAttribute(r)));y!==l&&(h=h.parentNode?h.nodeType===11?0:h.getAttribute(r)||0:0,(s=t[l])||(s=u[l],s=o(s,t[h]||u[h]),s.key=++e,t[e]=s),i&&p(l));f.removeAttribute(r)}else i&&(s=n.data(f,"tmplItem"))&&(p(s.key),t[s.key]=s,h=n.data(f.parentNode,"tmplItem"),h=h?h.key:0);if(s){for(c=s;c&&c.key!=h;)c.nodes.push(f),c=c.parent;delete s._ctnt;delete s._wrap;n.data(f,"tmplItem",s)}}for(var a="_"+i,c,l,v={},h,s=0,y=f.length;s<y;s++)if((c=f[s]).nodeType===1){for(l=c.getElementsByTagName("*"),h=l.length-1;h>=0;h--)p(l[h]);p(c)}}function d(n,t,i,r){if(!n)return c.pop();c.push({_:n,tmpl:t,item:this,data:i,options:r})}function g(t,i,r){return n.tmpl(n.template(t),i,r,this)}function nt(t,i){var r=t.options||{};return r.wrapped=i,n.tmpl(n.template(t.tmpl),t.data,r,t.item)}function tt(t,i){var r=this._wrap;return n.map(n(n.isArray(r)?r.join(""):r).filter(t||"*"),function(n){return i?n.innerText||n.textContent:n.outerHTML||k(n)})}function it(){var t=this.nodes;n.tmpl(null,null,null,this).insertBefore(t[0]);n(t).hide();n(t).remove()}var a=n.fn.domManip,r="_tmplitem",v=/^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,t={},u={},f,y={key:0,data:{}},e=0,i=0,c=[];n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(r,u){n.fn[r]=function(e){var o=[],h=n(e),c,s,a,v,l=this.length===1&&this[0].parentNode;if(f=t||{},l&&l.nodeType===11&&l.childNodes.length===1&&h.length===1)h[u](this[0]),o=this;else{for(s=0,a=h.length;s<a;s++)i=s,c=(s>0?this.clone(!0):this).get(),n(h[s])[u](c),o=o.concat(c);i=0;o=this.pushStack(o,r,h.selector)}return v=f,f=null,n.tmpl.complete(v),o}});n.fn.extend({tmpl:function(t,i,r){return n.tmpl(this[0],t,i,r)},tmplItem:function(){return n.tmplItem(this[0])},template:function(t){return n.template(t,this[0])},domManip:function(r,u,e){if(r[0]&&n.isArray(r[0])){for(var o=n.makeArray(arguments),s=r[0],l=s.length,h=0,c;h<l&&!(c=n.data(s[h++],"tmplItem")););c&&i&&(o[2]=function(t){n.tmpl.afterManip(this,t,e)});a.apply(this,o)}else a.apply(this,arguments);return i=0,f||n.tmpl.complete(t),this}});n.extend({tmpl:function(i,r,f,e){var h,c=!e;if(c)e=y,i=n.template[i]||n.template(null,i),u={};else if(!i)return i=e.tmpl,t[e.key]=e,e.nodes=[],e.wrapped&&w(e,e.wrapped),n(s(e,null,e.tmpl(n,e)));return i?(typeof r=="function"&&(r=r.call(e||{})),f&&f.wrapped&&w(f,f.wrapped),h=n.isArray(r)?n.map(r,function(n){return n?o(f,e,i,n):null}):[o(f,e,i,r)],c?n(s(e,null,h)):h):[]},tmplItem:function(t){var i;for(t instanceof n&&(t=t[0]);t&&t.nodeType===1&&!(i=n.data(t,"tmplItem"))&&(t=t.parentNode););return i||y},template:function(t,i){return i?(typeof i=="string"?i=p(i):i instanceof n&&(i=i[0]||{}),i.nodeType&&(i=n.data(i,"tmpl")||n.data(i,"tmpl",p(i.innerHTML))),typeof t=="string"?n.template[t]=i:i):t?typeof t!="string"?n.template(null,t):n.template[t]||n.template(null,v.test(t)?t:n(t)):null},encode:function(n){return(""+n).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;")}});n.extend(n.tmpl,{tag:{tmpl:{_default:{$2:"null"},open:"if($notnull_1){__=__.concat($item.nest($1,$2));}"},wrap:{_default:{$2:"null"},open:"$item.calls(__,$1,$2);__=[];",close:"call=$item.calls();__=call._.concat($item.wrap(call,__));"},each:{_default:{$2:"$index, $value"},open:"if($notnull_1){$.each($1a,function($2){with(this){",close:"}});}"},"if":{open:"if(($notnull_1) && $1a){",close:"}"},"else":{_default:{$1:"true"},open:"}else if(($notnull_1) && $1a){"},html:{open:"if($notnull_1){__.push($1a);}"},"=":{_default:{$1:"$data"},open:"if($notnull_1){__.push($.encode($1a));}"},"!":{open:""}},complete:function(){t={}},afterManip:function(t,r,u){var f=r.nodeType===11?n.makeArray(r.childNodes):r.nodeType===1?[r]:[];u.call(t,r);b(f);i++}})})(jQuery);

;

! function (e, t, n) {
    "use strict";
    ! function o(e, t, n) {
        function a(s, l) {
            if (!t[s]) {
                if (!e[s]) {
                    var i = "function" == typeof require && require;
                    if (!l && i) return i(s, !0);
                    if (r) return r(s, !0);
                    var u = new Error("Cannot find module '" + s + "'");
                    throw u.code = "MODULE_NOT_FOUND", u
                }
                var c = t[s] = {
                    exports: {}
                };
                e[s][0].call(c.exports, function (t) {
                    var n = e[s][1][t];
                    return a(n ? n : t)
                }, c, c.exports, o, e, t, n)
            }
            return t[s].exports
        }
        for (var r = "function" == typeof require && require, s = 0; s < n.length; s++) a(n[s]);
        return a
    }({
        1: [function (o, a, r) {
            var s = function (e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            };
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var l, i, u, c, d = o("./modules/handle-dom"),
                f = o("./modules/utils"),
                p = o("./modules/handle-swal-dom"),
                m = o("./modules/handle-click"),
                v = o("./modules/handle-key"),
                y = s(v),
                h = o("./modules/default-params"),
                b = s(h),
                g = o("./modules/set-params"),
                w = s(g);
            r["default"] = u = c = function () {
                function o(e) {
                    var t = a;
                    return t[e] === n ? b["default"][e] : t[e]
                }
                var a = arguments[0];
                if (d.addClass(t.body, "stop-scrolling"), p.resetInput(), a === n) return f.logStr("SweetAlert expects at least 1 attribute!"), !1;
                var r = f.extend({}, b["default"]);
                switch (typeof a) {
                    case "string":
                        r.title = a, r.text = arguments[1] || "", r.type = arguments[2] || "";
                        break;
                    case "object":
                        if (a.title === n) return f.logStr('Missing "title" argument!'), !1;
                        r.title = a.title;
                        for (var s in b["default"]) r[s] = o(s);
                        r.confirmButtonText = r.showCancelButton ? "Confirm" : b["default"].confirmButtonText, r.confirmButtonText = o("confirmButtonText"), r.doneFunction = arguments[1] || null;
                        break;
                    default:
                        return f.logStr('Unexpected type of argument! Expected "string" or "object", got ' + typeof a), !1
                }
                if (typeof SweetAlertBeforeOpenCallback != "undefined") {
                    SweetAlertBeforeOpenCallback(arguments, p.getModal());                    
                }
                w["default"](r), p.fixVerticalPosition(), p.openModal(arguments[1]);
                if (typeof SweetAlertOpenCallback != "undefined") {
                    SweetAlertOpenCallback(arguments, p.getModal());
                }
                for (var u = p.getModal(), v = u.querySelectorAll("button"), h = ["onclick", "onmouseover", "onmouseout", "onmousedown", "onmouseup", "onfocus"], g = function (e) {
                        return m.handleButton(e, r, u)
                }, C = 0; C < v.length; C++)
                    for (var S = 0; S < h.length; S++) {
                        var x = h[S];
                        v[C][x] = g
                    }
                p.getOverlay().onclick = g, l = e.onkeydown;
                var k = function (e) {
                    return y["default"](e, r, u)
                };
                e.onkeydown = k, e.onfocus = function () {
                    setTimeout(function () {
                        i !== n && (i.focus(), i = n)
                    }, 0)
                }, c.enableButtons()
            }, u.setDefaults = c.setDefaults = function (e) {
                if (!e) throw new Error("userParams is required");
                if ("object" != typeof e) throw new Error("userParams has to be a object");
                f.extend(b["default"], e)
                }, u.close = c.close = function () {
                $(".gencutom-title").html("Alert");
                var o = p.getModal();
                 if (typeof SweetAlertCloseCallback != "undefined") {
                    //Reason for timeout : fadeOut default timeout is 400ms & in blow code 300 ms timeout given, that is the reason i write timeout
                    setTimeout(function () {
                        SweetAlertCloseCallback(e.previousActiveElement,o);
                    }, 1)
                }
                d.fadeOut(p.getOverlay(), 5), d.fadeOut(o, 5), d.removeClass(o, "showSweetAlert"), d.addClass(o, "hideSweetAlert"), d.removeClass(o, "visible");
                var a = o.querySelector(".sa-icon.sa-success");
                d.removeClass(a, "animate"), d.removeClass(a.querySelector(".sa-tip"), "animateSuccessTip"), d.removeClass(a.querySelector(".sa-long"), "animateSuccessLong");
                var r = o.querySelector(".sa-icon.sa-error");
                d.removeClass(r, "animateErrorIcon"), d.removeClass(r.querySelector(".sa-x-mark"), "animateXMark");
                var s = o.querySelector(".sa-icon.sa-warning");
                return d.removeClass(s, "pulseWarning"), d.removeClass(s.querySelector(".sa-body"), "pulseWarningIns"), d.removeClass(s.querySelector(".sa-dot"), "pulseWarningIns"), setTimeout(function () {
                    var e = o.getAttribute("data-custom-class");
                    d.removeClass(o, e)
                }, 300), d.removeClass(t.body, "stop-scrolling"), e.onkeydown = l, e.previousActiveElement && e.previousActiveElement.focus(), i = n, clearTimeout(o.timeout), !0
                }, u.showInputError = c.showInputError = function (e) {
                var t = p.getModal(),
                    n = t.querySelector(".sa-input-error");
                d.addClass(n, "show");
                var o = t.querySelector(".sa-error-container");
                d.addClass(o, "show"), o.querySelector("p").innerHTML = e, setTimeout(function () {
                    u.enableButtons()
                }, 1), t.querySelector("input").focus()
            }, u.resetInputError = c.resetInputError = function (e) {
                if (e && 13 === e.keyCode) return !1;
                var t = p.getModal(),
                    n = t.querySelector(".sa-input-error");
                d.removeClass(n, "show");
                var o = t.querySelector(".sa-error-container");
                d.removeClass(o, "show")
            }, u.disableButtons = c.disableButtons = function () {
                var e = p.getModal(),
                    t = e.querySelector("button.confirm"),
                    n = e.querySelector("button.cancel");
                t.disabled = !0, n.disabled = !0
            }, u.enableButtons = c.enableButtons = function () {
                var e = p.getModal(),
                    t = e.querySelector("button.confirm"),
                    n = e.querySelector("button.cancel");
                t.disabled = !1, n.disabled = !1
            }, "undefined" != typeof e ? e.sweetAlert = e.swal = u : f.logStr("SweetAlert is a frontend module!"), a.exports = r["default"]
        }, {
            "./modules/default-params": 2,
            "./modules/handle-click": 3,
            "./modules/handle-dom": 4,
            "./modules/handle-key": 5,
            "./modules/handle-swal-dom": 6,
            "./modules/set-params": 8,
            "./modules/utils": 9
        }],
        2: [function (e, t, n) {
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var o = {
                title: "",
                text: "",
                type: null,
                allowOutsideClick: !1,
                showConfirmButton: !0,
                showCancelButton: !1,
                closeOnConfirm: !0,
                closeOnCancel: !0,
                confirmButtonText: "OK",
                confirmButtonColor: "#eb6663",
                cancelButtonText: "Cancel",
                imageUrl: null,
                imageSize: null,
                timer: null,
                customClass: "",
                html: !1,
                animation: !0,
                allowEscapeKey: !0,
                inputType: "text",
                inputPlaceholder: "",
                inputValue: "",
                showLoaderOnConfirm: !1
            };
            n["default"] = o, t.exports = n["default"]
        }, {}],
        3: [function (t, n, o) {
            Object.defineProperty(o, "__esModule", {
                value: !0
            });
            var a = t("./utils"),
                r = (t("./handle-swal-dom"), t("./handle-dom")),
                s = function (t, n, o) {
                    function s(e) {
                        m && n.confirmButtonColor && (p.style.backgroundColor = e)
                    }
                    var u, c, d, f = t || e.event,
                        p = f.target || f.srcElement,
                        m = -1 !== p.className.indexOf("confirm"),
                        v = -1 !== p.className.indexOf("sweet-overlay"),
                        y = r.hasClass(o, "visible"),
                        h = n.doneFunction && "true" === o.getAttribute("data-has-done-function");
                    switch (m && n.confirmButtonColor && (u = n.confirmButtonColor, c = a.colorLuminance(u, -.04), d = a.colorLuminance(u, -.14)), f.type) {
                        case "mouseover":
                            s(c);
                            break;
                        case "mouseout":
                            s(u);
                            break;
                        case "mousedown":
                            s(d);
                            break;
                        case "mouseup":
                            s(c);
                            break;
                        case "focus":
                            var b = o.querySelector("button.confirm"),
                                g = o.querySelector("button.cancel");
                            m ? g.style.boxShadow = "none" : b.style.boxShadow = "none";
                            break;
                        case "click":
                            var w = o === p,
                                C = r.isDescendant(o, p);
                            if (!w && !C && y && !n.allowOutsideClick) break;
                            m && h && y ? l(o, n) : h && y || v ? i(o, n) : r.isDescendant(o, p) && "BUTTON" === p.tagName && sweetAlert.close()
                    }
                },
                l = function (e, t) {
                    var n = !0;
                    r.hasClass(e, "show-input") && (n = e.querySelector("input").value, n || (n = "")), t.doneFunction(n), t.closeOnConfirm && sweetAlert.close(), t.showLoaderOnConfirm && sweetAlert.disableButtons()
                },
                i = function (e, t) {
                    var n = String(t.doneFunction).replace(/\s/g, ""),
                        o = "function(" === n.substring(0, 9) && ")" !== n.substring(9, 10);
                    o && t.doneFunction(!1), t.closeOnCancel && sweetAlert.close()
                };
            o["default"] = {
                handleButton: s,
                handleConfirm: l,
                handleCancel: i
            }, n.exports = o["default"]
        }, {
            "./handle-dom": 4,
            "./handle-swal-dom": 6,
            "./utils": 9
        }],
        4: [function (n, o, a) {
            Object.defineProperty(a, "__esModule", {
                value: !0
            });
            var r = function (e, t) {
                return new RegExp(" " + t + " ").test(" " + e.className + " ")
            },
                s = function (e, t) {
                    r(e, t) || (e.className += " " + t)
                },
                l = function (e, t) {
                    var n = " " + e.className.replace(/[\t\r\n]/g, " ") + " ";
                    if (r(e, t)) {
                        for (; n.indexOf(" " + t + " ") >= 0;) n = n.replace(" " + t + " ", " ");
                        e.className = n.replace(/^\s+|\s+$/g, "")
                    }
                },
                i = function (e) {
                    var n = t.createElement("div");
                    return n.appendChild(t.createTextNode(e)), n.innerHTML
                },
                u = function (e) {
                    e.style.opacity = "", e.style.display = "block"
                },
                c = function (e) {
                    if (e && !e.length) return u(e);
                    for (var t = 0; t < e.length; ++t) u(e[t])
                },
                d = function (e) {
                    e.style.opacity = "", e.style.display = "none"
                },
                f = function (e) {
                    if (e && !e.length) return d(e);
                    for (var t = 0; t < e.length; ++t) d(e[t])
                },
                p = function (e, t) {
                    for (var n = t.parentNode; null !== n;) {
                        if (n === e) return !0;
                        n = n.parentNode
                    }
                    return !1
                },
                m = function (e) {
                    e.style.left = "-9999px", e.style.display = "block";
                    var t, n = e.clientHeight;
                    if ((typeof setPopupPosi != 'undefined' && typeof getQueryStringData != 'undefined') || (typeof setPopupPosi != 'undefined' && typeof WebsiteBuilderType != 'undefined')) {
                        if (getQueryStringData("Type") == "Builder" || (typeof WebsiteBuilderType != 'undefined' && WebsiteBuilderType == "Builder")) {
                            var alertdivHeight = n / 2 + 50;
                            return t = "undefined" != typeof getComputedStyle ? parseInt(getComputedStyle(e).getPropertyValue("padding-top"), 10) : parseInt(e.currentStyle.padding),
                                e.style.left = "", e.style.display = "none", + parseInt((Number(scrollPositionW) + alertdivHeight)) + "px";
                        } else {
                            return t = "undefined" != typeof getComputedStyle ? parseInt(getComputedStyle(e).getPropertyValue("padding-top"), 10) : parseInt(e.currentStyle.padding),
                                e.style.left = "", e.style.display = "none", "-" + parseInt((n + t) / 2) + "px"
                        }
                    } else {                        
                        return t = "undefined" != typeof getComputedStyle ? parseInt(getComputedStyle(e).getPropertyValue("padding-top"), 10) : parseInt(e.currentStyle.padding),
                            e.style.left = "", e.style.display = "none", "-" + parseInt((n + t) / 2) + "px"
                    }
                    
                },
                v = function (e, t) {
                    if (+e.style.opacity < 1) {
                        t = t || 16, e.style.opacity = 0, e.style.display = "block";
                        var n = +new Date,
                            o = function (e) {
                                function t() {
                                    return e.apply(this, arguments)
                                }
                                return t.toString = function () {
                                    return e.toString()
                                }, t
                            }(function () {
                                e.style.opacity = +e.style.opacity + (new Date - n) / 100, n = +new Date, +e.style.opacity < 1 && setTimeout(o, t)
                            });
                        o()
                    }
                    e.style.display = "block"
                },
                y = function (e, t) {
                    t = t || 16, e.style.opacity = 1;
                    var n = +new Date,
                        o = function (e) {
                            function t() {
                                return e.apply(this, arguments)
                            }
                            return t.toString = function () {
                                return e.toString()
                            }, t
                        }(function () {
                            e.style.opacity = +e.style.opacity - (new Date - n) / 100, n = +new Date, +e.style.opacity > 0 ? setTimeout(o, t) : e.style.display = "none"
                        });
                    o()
                },
                h = function (n) {
                    if ("function" == typeof MouseEvent) {
                        var o = new MouseEvent("click", {
                            view: e,
                            bubbles: !1,
                            cancelable: !0
                        });
                        n.dispatchEvent(o)
                    } else if (t.createEvent) {
                        var a = t.createEvent("MouseEvents");
                        a.initEvent("click", !1, !1), n.dispatchEvent(a)
                    } else t.createEventObject ? n.fireEvent("onclick") : "function" == typeof n.onclick && n.onclick()
                },
                b = function (t) {
                    "function" == typeof t.stopPropagation ? (t.stopPropagation(), t.preventDefault()) : e.event && e.event.hasOwnProperty("cancelBubble") && (e.event.cancelBubble = !0)
                };
            a.hasClass = r, a.addClass = s, a.removeClass = l, a.escapeHtml = i, a._show = u, a.show = c, a._hide = d, a.hide = f, a.isDescendant = p, a.getTopMargin = m, a.fadeIn = v, a.fadeOut = y, a.fireClick = h, a.stopEventPropagation = b
        }, {}],
        5: [function (t, o, a) {
            Object.defineProperty(a, "__esModule", {
                value: !0
            });
            var r = t("./handle-dom"),
                s = t("./handle-swal-dom"),
                l = function (t, o, a) {
                    var l = t || e.event,
                        i = l.keyCode || l.which,
                        u = a.querySelector("button.confirm"),
                        c = a.querySelector("button.cancel"),
                        d = a.querySelectorAll("button[tabindex]");
                    if (-1 !== [9, 13, 32, 27].indexOf(i)) {
                        for (var f = l.target || l.srcElement, p = -1, m = 0; m < d.length; m++)
                            if (f === d[m]) {
                                p = m;
                                break
                            }
                        9 === i ? (f = -1 === p ? u : p === d.length - 1 ? d[0] : d[p + 1], r.stopEventPropagation(l), f.focus(), o.confirmButtonColor && s.setFocusStyle(f, o.confirmButtonColor)) : 13 === i ? ("INPUT" === f.tagName && (f = u, u.focus()), f = -1 === p ? u : n) : 27 === i && o.allowEscapeKey === !0 ? (f = c, r.fireClick(f, l)) : f = n
                    }
                };
            a["default"] = l, o.exports = a["default"]
        }, {
            "./handle-dom": 4,
            "./handle-swal-dom": 6
        }],
        6: [function (n, o, a) {
            var r = function (e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            };
            Object.defineProperty(a, "__esModule", {
                value: !0
            });
            var s = n("./utils"),
                l = n("./handle-dom"),
                i = n("./default-params"),
                u = r(i),
                c = n("./injected-html"),
                d = r(c),
                f = ".sweet-alert",
                p = ".sweet-overlay",
                m = function () {
                    var e = t.createElement("div");
                    for (e.innerHTML = d["default"]; e.firstChild;) t.body.appendChild(e.firstChild)
                },
                v = function (e) {
                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t.toString = function () {
                        return e.toString()
                    }, t
                }(function () {
                    var e = t.querySelector(f);
                    return e || (m(), e = v()), e
                }),
                y = function () {
                    var e = v();
                    return e ? e.querySelector("input") : void 0
                },
                h = function () {
                    return t.querySelector(p)
                },
                b = function (e, t) {
                    var n = s.hexToRgb(t);
                    e.style.boxShadow = "0 0 2px rgba(" + n + ", 0.8), inset 0 0 0 1px rgba(0, 0, 0, 0.05)"
                },
                g = function (n) {
                    var o = v();
                    l.fadeIn(h(), 10), l.show(o), l.addClass(o, "showSweetAlert"), l.removeClass(o, "hideSweetAlert"), e.previousActiveElement = t.activeElement;
                    var a = o.querySelector("button.confirm");
                    a.focus(), setTimeout(function () {
                        l.addClass(o, "visible");
                        if (typeof WebsiteBuilderType != 'undefined') {
                            if (WebsiteBuilderType == "Builder") {
                                l.addClass(o, "wbshowSweetAlert");
                            }
                        }
                    }, 500);
                    var r = o.getAttribute("data-timer");
                    if ("null" !== r && "" !== r) {
                        var s = n;
                        o.timeout = setTimeout(function () {
                            var e = (s || null) && "true" === o.getAttribute("data-has-done-function");
                            e ? s(null) : sweetAlert.close()
                        }, r)
                    }
                },
                w = function () {
                    var e = v(),
                        t = y();
                    l.removeClass(e, "show-input"), t.value = u["default"].inputValue, t.setAttribute("type", u["default"].inputType), t.setAttribute("placeholder", u["default"].inputPlaceholder), C()
                },
                C = function (e) {
                    if (e && 13 === e.keyCode) return !1;
                    var t = v(),
                        n = t.querySelector(".sa-input-error");
                    l.removeClass(n, "show");
                    var o = t.querySelector(".sa-error-container");
                    l.removeClass(o, "show")
                },
                S = function () {
                    var e = v();
                    e.style.marginTop = l.getTopMargin(v());
                };
            a.sweetAlertInitialize = m, a.getModal = v, a.getOverlay = h, a.getInput = y, a.setFocusStyle = b, a.openModal = g, a.resetInput = w, a.resetInputError = C, a.fixVerticalPosition = S
        }, {
            "./default-params": 2,
            "./handle-dom": 4,
            "./injected-html": 7,
            "./utils": 9
        }],
        7: [function (e, t, n) {
         
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var o = '<div class="sweet-overlay" tabIndex="-1"></div>' +
                '<div class="sweet-alert vagaro-modal">' +
                    '<div class="gencustom-head">' +
                        '<div class="gencutom-title modal-title">Alert</div>' +
                        '<button class="gencustom-close"></button>' +
                    '</div>' +
                    '<div class="gencustom-content">' +
                        '<div class="sa-icon sa-error">\n      <span class="sa-x-mark">\n        <span class="sa-line sa-left"></span>\n        <span class="sa-line sa-right"></span>\n      </span>\n    </div><div class="sa-icon sa-warning">\n      <span class="sa-body"></span>\n      <span class="sa-dot"></span>\n    </div><div class="sa-icon sa-info"></div><div class="sa-icon sa-success">\n      <span class="sa-line sa-tip"></span>\n      <span class="sa-line sa-long"></span>\n\n      <div class="sa-placeholder"></div>\n      <div class="sa-fix"></div>\n    </div><div class="sa-icon sa-custom"></div><h2 class="web-body-font-secondary">Title</h2>\n    <p>Text</p>\n    <fieldset>\n      <input type="text" tabIndex="3" />\n      <div class="sa-input-error"></div>\n    </fieldset><div class="sa-error-container">\n      <div class="icon">!</div>\n      <p>Not valid!</p>\n    </div>' +
                    '</div>' +
                    '<div class="sa-button-container">\n      <button class="cancel secondary-button" tabIndex="2">Cancel</button>\n      <div class="sa-confirm-button-container">\n        <button class="confirm btn btn-primary green-primary-button" tabIndex="1">OK</button><div class="la-ball-fall">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>' +
                '</div>';
            n["default"] = o, t.exports = n["default"]
        }, {}],
        8: [function (e, t, o) {
            Object.defineProperty(o, "__esModule", {
                value: !0
            });
            var a = e("./utils"),
                r = e("./handle-swal-dom"),
                s = e("./handle-dom"),
                l = ["error", "warning", "info", "success", "input", "prompt"],
                i = function (e) {
                    var t = r.getModal(),
                        o = t.querySelector("h2"),
                        i = t.querySelector("p"),
                        u = t.querySelector("button.cancel"),
                        c = t.querySelector("button.confirm");
                    if (o.innerHTML = e.html ? e.title : s.escapeHtml(e.title).split("\n").join("<br>"), i.innerHTML = e.html ? e.text : s.escapeHtml(e.text || "").split("\n").join("<br>"), e.text && s.show(i), e.customClass) s.addClass(t, e.customClass), t.setAttribute("data-custom-class", e.customClass);
                    else {
                        var d = t.getAttribute("data-custom-class");
                        s.removeClass(t, d), t.setAttribute("data-custom-class", "")
                    }
                    if (s.hide(t.querySelectorAll(".sa-icon")), e.type && !a.isIE8()) {
                        var f = function () {
                            for (var o = !1, a = 0; a < l.length; a++)
                                if (e.type === l[a]) {
                                    o = !0;
                                    break
                                }
                            if (!o) return logStr("Unknown alert type: " + e.type), {
                                v: !1
                            };
                            var i = ["success", "error", "warning", "info"],
                                u = n; -1 !== i.indexOf(e.type) && (u = t.querySelector(".sa-icon.sa-" + e.type), s.show(u));
                            var c = r.getInput();
                            switch (e.type) {
                                case "success":
                                    s.addClass(u, "animate"), s.addClass(u.querySelector(".sa-tip"), "animateSuccessTip"), s.addClass(u.querySelector(".sa-long"), "animateSuccessLong");
                                    break;
                                case "error":
                                    s.addClass(u, "animateErrorIcon"), s.addClass(u.querySelector(".sa-x-mark"), "animateXMark");
                                    break;
                                case "warning":
                                    s.addClass(u, "pulseWarning"), s.addClass(u.querySelector(".sa-body"), "pulseWarningIns"), s.addClass(u.querySelector(".sa-dot"), "pulseWarningIns");
                                    break;
                                case "input":
                                case "prompt":
                                    c.setAttribute("type", e.inputType), c.value = e.inputValue, c.setAttribute("placeholder", e.inputPlaceholder), s.addClass(t, "show-input"), setTimeout(function () {
                                        c.focus(), c.addEventListener("keyup", swal.resetInputError)
                                    }, 400)
                            }
                        }();
                        if ("object" == typeof f) return f.v
                    }
                    if (e.imageUrl) {
                        var p = t.querySelector(".sa-icon.sa-custom");
                        p.style.backgroundImage = "url(" + e.imageUrl + ")", s.show(p);
                        var m = 80,
                            v = 80;
                        if (e.imageSize) {
                            var y = e.imageSize.toString().split("x"),
                                h = y[0],
                                b = y[1];
                            h && b ? (m = h, v = b) : logStr("Parameter imageSize expects value with format WIDTHxHEIGHT, got " + e.imageSize)
                        }
                        p.setAttribute("style", p.getAttribute("style") + "width:" + m + "px; height:" + v + "px")
                    }
                    t.setAttribute("data-has-cancel-button", e.showCancelButton), e.showCancelButton ? u.style.display = "inline-block" : s.hide(u), t.setAttribute("data-has-confirm-button", e.showConfirmButton), e.showConfirmButton ? c.style.display = "inline-block" : s.hide(c), e.cancelButtonText && (u.innerHTML = s.escapeHtml(e.cancelButtonText)), e.confirmButtonText && (c.innerHTML = s.escapeHtml(e.confirmButtonText)), e.confirmButtonColor && (c.style.backgroundColor = e.confirmButtonColor, c.style.borderLeftColor = e.confirmLoadingButtonColor, c.style.borderRightColor = e.confirmLoadingButtonColor, r.setFocusStyle(c, e.confirmButtonColor)), t.setAttribute("data-allow-outside-click", e.allowOutsideClick);
                    var g = e.doneFunction ? !0 : !1;
                    t.setAttribute("data-has-done-function", g), e.animation ? "string" == typeof e.animation ? t.setAttribute("data-animation", e.animation) : t.setAttribute("data-animation", "pop") : t.setAttribute("data-animation", "none"), t.setAttribute("data-timer", e.timer)
                };
            o["default"] = i, t.exports = o["default"]
        }, {
            "./handle-dom": 4,
            "./handle-swal-dom": 6,
            "./utils": 9
        }],
        9: [function (t, n, o) {
            Object.defineProperty(o, "__esModule", {
                value: !0
            });
            var a = function (e, t) {
                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                return e
            },
                r = function (e) {
                    var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                    return t ? parseInt(t[1], 16) + ", " + parseInt(t[2], 16) + ", " + parseInt(t[3], 16) : null
                },
                s = function () {
                    return e.attachEvent && !e.addEventListener
                },
                l = function (t) {
                    e.console && e.console.log("SweetAlert: " + t)
                },
                i = function (e, t) {
                    e = String(e).replace(/[^0-9a-f]/gi, ""), e.length < 6 && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]), t = t || 0;
                    var n, o, a = "#";
                    for (o = 0; 3 > o; o++) n = parseInt(e.substr(2 * o, 2), 16), n = Math.round(Math.min(Math.max(0, n + n * t), 255)).toString(16), a += ("00" + n).substr(n.length);
                    return a
                };
            o.extend = a, o.hexToRgb = r, o.isIE8 = s, o.logStr = l, o.colorLuminance = i
        }, {}]
    }, {}, [1]), "function" == typeof define1 && define1.amd ? define1(function () {
        return sweetAlert
    }) : "undefined" != typeof module && module.exports && (module.exports = sweetAlert)
}(window, document);
$(document).ready(function () {
    if ($("#sweetalertClose").length) {
        $("#sweetalertClose").on('click', function () {            
            $("#sweetConfirmbutton").trigger("click");
        });
    }

});
;
; (function ($) {

    'use strict';

    $.fn.ZenSwipeCard = function (options, callback) {

        if ($.isFunction(options)) {
            callback = options;
            options = null;
        }

        var o = $.extend({}, $.fn.ZenSwipeCard.defaults, options);

        var $frame = this;

        $frame.post = o.post;

        $frame.destroy = function () {
            window.removeEventListener('message', listner, false);
            if ($frame != null) {
                $frame.each(function () {
                    $.data(this, "");
                    $(this).attr('style', '').removeData().hide().html('');
                });
                $frame = null;
            }
        }

        $frame.zenswipe = {
            submit: function () {
                _postMessage('{"eventType": "submit"}');
            },
            submitwithaddress: function (zip_code, CountryID) {
                if (parseInt(CountryID) == 1) {
                    if (zip_code == null || zip_code == "") {
                        triggerCall(o.receivers.onRequired, "Zip code is required");
                        triggerCall(o.receivers.onHideLoading);
                        return false;
                    }
                } else {
                    zip_code = "";
                }
                _postMessage('{"eventType": "submitwithaddress", "zip_code" : "' + zip_code + '" , "country_id" : "' + CountryID + '"}');
            },
            getSize: function () {
                _postMessage('{"eventType": "getSize"}');
            },
            addStyle: function (style) {
                _postMessage('{"eventType": "addStyle", "style" : "' + style.replace(/"/g, "'") + '"}');
            },
            removeCardOption: function (option) {
                _postMessage('{"eventType" : "removeCardOption", "option" : "' + option + '"}');
            },
            draftApplication: function () {
                _postMessage('{"eventType": "draftApplication"}');
            },
            submitApplication: function () {
                _postMessage('{"eventType": "submitApplication"}');
            },
            validate: function () {
                _postMessage('{"eventType": "validate"}');
            },
            addButtonText: function (text) {
                _postMessage('{"eventType" : "addButtonText", "text" : "' + text + '"}');
            },
            checkWebView: function (text) {
                _postMessage('{"eventType": "checkWebView","iswebview" : "' + text + '"}');
            },
            ignorePro: function (text) {
                _postMessage('{"eventType": "ignorePro","ignorePro" : "' + text + '"}');
            },
            getHeight: function () {
                _postMessage('{"eventType": "getHeight"}');
            },
            setScreen: function (screenheight, topoffset, headeroffset, divgotit, divouterheight) {
                _postMessage(JSON.stringify({ "eventType": "setScreen", "objScreen": "" + screenheight + "", "topoffset": "" + topoffset + "", "headeroffset": "" + headeroffset + "", "divgotit": "" + divgotit + "", "divouterheight": "" + divouterheight + "" }));
            },
            hideSubmitButton: function () {
                _postMessage('{"eventType": "hideSubmitButton"}');
            },
            showSubmitButton: function () {
                _postMessage('{"eventType": "showSubmitButton"}');
            },
            hidePopup: function () {
                _postMessage('{"eventType": "hidePopup"}');
            },

            getReportdata: function (isPreviousBtn, isRenderPaging, currentPageno, pageSize) {
                _postMessage('{"eventType": "getReportdata","isPreviousBtn" : "' + isPreviousBtn + '","isRenderPaging" : "' + isRenderPaging + '","currentPageno" : "' + currentPageno + '","pageSize" : "' + pageSize + '"}');
            },
            saveMerchantEditDetails: function (IsCyberSourceEnable, UserType) {
                _postMessage('{"eventType": "saveMerchantEditDetails","IsCyberSourceEnable" : ' + IsCyberSourceEnable + ',"UserType":"' + UserType + '"}');
            },
            cancelBtnClick: function () {
                _postMessage('{"eventType": "cancelBtnClick"}');
            },
            exportReportData: function () {
                _postMessage('{"eventType": "exportReportData"}');
            },
            printReportData: function () {
                _postMessage('{"eventType": "printReportData"}');
            },
            OnexportDeposittransactions: function (merchantID, batchID, ToDate, GateWayType) {
                _postMessage('{"eventType": "OnexportDeposittransactions","merchantID" : "' + merchantID + '","batchID" : "' + batchID + '","ToDate" : "' + ToDate + '","GateWayType" : "' + GateWayType + '"}');
            },
            OnprintDeposittransactions: function (merchantID, batchID, ToDate, GateWayType) {
                _postMessage('{"eventType": "OnprintDeposittransactions","merchantID" : "' + merchantID + '","batchID" : "' + batchID + '","ToDate" : "' + ToDate + '","GateWayType" : "' + GateWayType + '"}');
            },
            ccvalidate: function () {
                _postMessage('{"eventType": "ccvalidate"}');
            },
            setCardAddressData: function (Address) {
                _postMessage('{"eventType": "setcardaddress", "address":' + Address + '}');
            },
            ChargebackBackButtonCallback: function () {
                _postMessage('{"eventType": "ChargebackBackButtonCallback"}');
            },
            AcceptAsRefundCallback: function () {
                _postMessage('{"eventType": "AcceptAsRefundCallback"}');
            },
            SubmitrebuttalCallback: function () {
                _postMessage('{"eventType": "SubmitrebuttalCallback"}');
            },
            SubmitrebuttalSuccessCallback: function () {
                _postMessage('{"eventType": "SubmitrebuttalSuccessCallback"}');
            },
            DeleteFileCallback: function (srNo) {
                _postMessage('{"eventType": "DeleteFileCallback", "srNo":' + srNo + '}');
            },
            addClassInIframeBody: function () {
                _postMessage('{"eventType": "addClassInIframeBody"}');
            },
            onMobileBackButton: function () {
                _postMessage('{"eventType": "onMobileBackButton"}')
            },
            plaidResponse: function (jsonData) {
                _postMessage('{"eventType": "plaidResponse", "jsonData":' + jsonData + '}')
            },
            ScrollToTopFromVagaro: function () {
                _postMessage('{"eventType": "ScrollToTopFromVagaro"}')
            },
            HardwareProductSelected: function (IsHardwareSelected) {
                _postMessage('{"eventType": "HardwareProductSelected", "IsHardwareSelected":' + IsHardwareSelected + '}')
                console.log("HardwareProductSelected -Zenswipe.js :" + IsHardwareSelected);
            },
            onBrowserBackEvent: function (Step) {
                _postMessage('{"eventType": "onBrowserBackEvent", "Step":' + Step + '}')
            },
            SetVagaroLink: function (vagaroLink) {
                _postMessage('{"eventType": "SetVagaroLink", "vagaroLink":"' + vagaroLink + '"}')
            },
            BackFromBankingInfo: function () {
                _postMessage('{"eventType": "BackFromBankingInfo"}')
            },
            SaveChangeBatchTime: function (BatchTimes, logedInUserName, logedInUserID) {
                _postMessage('{"eventType": "SaveChangeBatchTime", "BatchTimes":"' + BatchTimes + '","logedInUserName" : "' + logedInUserName + '","logedInUserID" : "' + logedInUserID + '"}');
            },
            GetConnectBusinessName: function (BusinessName) {
                _postMessage('{"eventType": "GetConnectBusinessName", "BusinessName":"' + BusinessName + '"}')
            },
            setDarkModePreference: function (DarkMode) {
                _postMessage('{"eventType": "setDarkModePreference", "DarkMode":' + DarkMode + '}')
            },
            onprintmerchanteachtransaction: function () {
                _postMessage('{"eventType": "onprintmerchanteachtransaction"}');
            },
            Onexportmerchanttransactions: function () {
                _postMessage('{"eventType": "Onexportmerchanttransactions"}');
            },
            OnPDFexportmerchanttransactions: function (merchantID, batchID, ToDate) {
                _postMessage('{"eventType": "OnPDFexportmerchanttransactions","merchantID" : "' + merchantID + '","batchID" : "' + batchID + '","ToDate" : "' + ToDate + '"}');
            },
            OnPDFPopupexportmerchant: function (merchantID, batchID, ToDate, GateWayType) {
                _postMessage('{"eventType": "PDFPopupexportmerchant","merchantID" : "' + merchantID + '","batchID" : "' + batchID + '","ToDate" : "' + ToDate + '","GateWayType" : "' + GateWayType + '"}');
            },
            exportPDFReportData: function () {
                _postMessage('{"eventType": "exportPDFReportData"}');
            },
            OnexportSummaryOREachTransactionData: function () {
                _postMessage('{"eventType": "OnexportSummaryOREachTransactionData"}');
            },
            SetVagaroVMSLogData: function (jsonData) {
                _postMessage('{"eventType": "SetVagaroVMSLogData", "jsonData":' + JSON.stringify(jsonData) + '}')
            },
        };

        window.addEventListener('message', listner, false);

        function listner(e) {
            if (e.origin == "https://portal.zenswipe.com" || e.origin.indexOf("localhost") != -1 || e.origin.indexOf("localdev.com") != -1 || e.origin.indexOf("js.stripe.com") != -1 || e.origin.indexOf("10.10") != -1 || e.origin.indexOf("vagaro") != -1 || e.origin.indexOf("bookitall.com") !== -1 || e.origin.indexOf("zenswipe.com") !== -1) {
                var m = JSON.parse(e.data || e.originalEvent.data);
                switch (m.eventType) {
                    case 'ECHO':
                        o.loaded = true;
                        break;
                    case 'getSize':
                        triggerCall(o.receivers.onGetSize, m);
                        break;
                    case 'required':
                        triggerCall(o.receivers.onRequired, m);
                        triggerCall(o.receivers.onHideLoading, m);
                        return;
                        break;
                    case 'closeFrame':
                        triggerCall(o.receivers.onClose, m);
                        triggerCall(o.receivers.onHideLoading, m);
                        vui.frame.destroy();
                        break;
                    case 'getToken':
                        returnCallBackZS(m);
                    case 'hideLoading':
                        triggerCall(o.receivers.onHideLoading, m);
                        break;
                    case 'displayLoading':

                        triggerCall(o.receivers.onDisplayLoading, m);
                        break;
                    case 'applicationSuccess':
                        triggerCall(o.receivers.onApplicationSuccess, m);
                        break;
                    case 'error':
                        //if (m != null && m.data != null && m.data == "Some error occured.") {
                        //    triggerCall(o.receivers.onZSDown, m);
                        //} else
                        //{
                        triggerCall(o.receivers.onZSDown, m);
                        //}
                        break;
                    case 'sendMessage':
                        triggerCall(o.receivers.onMessage, m);
                        break;
                    case 'frameExpire':
                        console.log(m);
                        break;
                    case 'focusin':
                        triggerCall(o.receivers.onFocusIn, m);
                        break;
                    case 'focusout':
                        triggerCall(o.receivers.onFocusOut, m);
                        break;
                    case 'tabfocused':
                        triggerCall(o.receivers.onTabfocused, m);
                        break;
                    case 'setHeight':
                        if (typeof m.id != "undefined" && m.id != null && m.id == "forms") {
                        }
                        else {
                            $(vui.frame).find("iframe").css("height", m.height + "px");
                            $(".settingmainwhitebg").css("min-height", parseInt(m.height + 10) + "px");
                            if (typeof ($('#hdnIsFromSignup').val()) != "undefined" && $('#hdnIsFromSignup').val() != null && $('#hdnIsFromSignup').val().length > 0) {
                                var IsFromSignup = $('#hdnIsFromSignup').val();
                                if (typeof IsFromSignup != "undefined" && IsFromSignup != null && IsFromSignup != "" && IsFromSignup == "1" && $('iframe').length > 0 && parseInt(m.height + 10) < $('iframe').parent().height()) {
                                    $('iframe').css('height', $('iframe').parent().height());
                                }
                            }
                        }
                        break;
                    case 'iframe_Loaded':
                        triggerCall(o.receivers.onMessage, m);
                        break;
                    case 'parent_screen':
                        triggerCall(o.receivers.onMessage, m);
                        break;
                    case 'RanderPager':
                        triggerCall(o.receivers.onRanderPager, m);
                        break;
                    case 'showHideSaveCancel':
                        triggerCall(o.receivers.onShowHideSaveCancel, m);
                        break;
                    case 'merchantsuccess':
                        triggerCall(o.receivers.onMerchantSuccess, m);
                        break;
                    case 'scrollToTop':
                        triggerCall(o.receivers.onscrollToTop, m);
                        break;
                    case 'DepositPopup':
                        triggerCall(o.receivers.onDepositPopup, m);
                        break;
                    case 'Tab1099detail':
                        triggerCall(o.receivers.onTab1099detail, m);
                        break;
                    case 'Showpdf':
                        triggerCall(o.receivers.onShowpdf, m);
                        break;
                    case 'datepickerShowHide':
                        triggerCall(o.receivers.ondatepickerShowHide, m);
                        break;
                    case 'ccvalid':
                        triggerCall(o.receivers.onCcValid, m);
                        break;
                    case 'setresponsiveheight':
                        triggerCall(o.receivers.onResponsiveIframe, m);
                        break;
                    case 'verifyaddresshideloading':
                        triggerCall(o.receivers.onverifyaddresshideloading, m);
                        break;
                    case 'transactiondetailforchargeback':
                        triggerCall(o.receivers.onTransactionDetailForChargeback, m);
                        break;
                    case 'customerforchargeback':
                        triggerCall(o.receivers.onCustomerForChargeback, m);
                        break;
                    case 'updatenotificationpanel':
                        triggerCall(o.receivers.onUpdateNotificationPanel, m);
                        break;
                    case 'updateacceptrefund':
                        triggerCall(o.receivers.onUpdateAcceptRefund, m);
                        break;
                    case "showAcceptSubmitPopup":
                        triggerCall(o.receivers.onShowAcceptSubmitPopup, m);
                        break;
                    case "setVMSPlanTitle":
                        triggerCall(o.receivers.onSetVMSPlanTitle, m);
                        break;
                    case "finishLater":
                        triggerCall(o.receivers.onFinishLater, m);
                        break;
                    case "backToHardwarePage":
                        triggerCall(o.receivers.onBackToHardwarePage, m);
                        break;
                    case "MongoIdofVMSApplication":
                        triggerCall(o.receivers.onMongoIdofVMSApplication, m);
                        break;
                    case "PlaidLinkTokenId":
                        triggerCall(o.receivers.onPlaidLinkTokenId, m);
                        break;
                    case "VMSApplicationCompleteWebView":
                        triggerCall(o.receivers.onVMSApplicationCompleteWebView, m);
                        break;
                    case "onBrowserBackEventSendtoVagaro":
                        triggerCall(o.receivers.onBrowserBackEventSendtoVagaro, m);
                        break;
                    case "AddLogInAmplitude":
                        triggerCall(o.receivers.AddLogInAmplitude, m);
                        break;
                    case "askVagaroForVMSStep":
                        triggerCall(o.receivers.askVagaroForVMSStep, m);
                        break;
                    case "GetVagaroLink":
                        triggerCall(o.receivers.GetVagaroLink, m);
                        break;
                    case "ShowHideBackArrow":
                        triggerCall(o.receivers.ShowHideBackArrow, m);
                        break;
                    case "CardFrameExpire":
                        triggerCall(o.receivers.CardFrameExpire, m);
                        break;
                    case "SaveBatchTimeResponse":
                        triggerCall(o.receivers.onSaveBatchTimeResponse, m);
                        break;
                    case "SendbatchTime":
                        triggerCall(o.receivers.onSendbatchTime, m);
                        break;
                    case "OpenChangeBatchPopup":
                        triggerCall(o.receivers.OpenChangeBatchPopup, m);
                        break;
                    case "CyberSourceTrackingId":
                        triggerCall(o.receivers.onCyberSourceTrackingId, m);
                        break;
                    case "GetConnecttoBusinessName":
                        triggerCall(o.receivers.onBusinessLst, m);
                        break;
                    case 'createMerchantSuccess':
                        triggerCall(o.receivers.onCreateMerchantSuccess, m);
                        break;
                    case "Setfooter":
                        triggerCall(o.receivers.onSetFooterManage, m);
                        break;
                    case "ShowHideToolTip":
                        triggerCall(o.receivers.onShowHideToolTip, m);
                        break;
                    case "GetVagaroVMSLogData":
                        triggerCall(o.receivers.onGetVagaroVMSLogData, m);
                        break;
                        
                }
            }

        }

        return $frame.each(function () {
            if (!$.data(this, "plugin")) {
                init();
            }
            console.log('frame.each');
        });

        function init() {
            if ($("#btnzstemplate").length == 0) {
                $("<button />", { class: "flamingo-button", id: "btnzstemplate", style: "display:none" }).appendTo("body");
                $("<button />", { class: "flamingo-button-hover", id: "btnzstemplatehover", style: "display:none" }).appendTo("body");
                $("<input />", { class: "vagaro-input", id: "inputzstemplate", style: "display:none" }).appendTo("body");
                $("<input />", { class: "vagaro-input error", id: "inputzstemplateerror", style: "display:none" }).appendTo("body");
                $("<input />", { class: "vagaro-input-focus", id: "inputzstemplatefocus", style: "display:none" }).appendTo("body");
                $("<input />", { class: "vagaro-input-radius", id: "inputzstemplateaddressradius", style: "display:none" }).appendTo("body");
                $("<input />", { class: "input-txterror", id: "texterror", style: "display:none" }).appendTo("body");
                $("<input />", { class: "web-caption-text", id: "webcaptiontext", style: "display:none" }).appendTo("body");
                $("<input />", { class: "vagaro-input-left-icon", id: "ccIcon", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-content", id: "modalcontent", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-title", id: "modaltitle", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-title2", id: "modaltitle2", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-footer", id: "modalfooter", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-secbtncolor", id: "modalfootersecbtn", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-secbtncolor-hover", id: "modalfootersecbtnhover", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-secbtncolor-active", id: "modalfootersecbtnactive", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-primarybtncolor", id: "modalfooterprimarybtn", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-primarybtncolor-hover", id: "modalfooterprimarybtnhover", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-primarybtncolor-active", id: "modalfooterprimarybtnactive", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-closebutton", id: "modalclosebutton", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-closebutton-hover", id: "modalclosebuttonhover", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-closebutton-active", id: "modalclosebuttonactive", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-closebutton-after", id: "modalclosebuttonafter", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-inputnocard", id: "modalinputnocard", style: "display:none" }).appendTo("body");
                $("<input />", { class: "zsmodal-addressinput", id: "modaladdressinputheight", style: "display:none" }).appendTo("body");
                $("<input />", { class: "spantxterror", id: "spantxterror", style: "display:none" }).appendTo("body");
                $("<input />", { class: "cciframe-countryselectoption", id: "cciframecountryselectoption", style: "display:none" }).appendTo("body");
            }
            createPopup(o.modal);
        }


        function createPopup(modal) {
            var $iframe = $('<iframe class="b-iframe" ' + o.iframeAttr + ' id="iFrame_' + $frame.attr('id') + '" style="display:none;"></iframe>');
            if (modal == true) {
                var $popup = $("<div id='frame_apgProgress_" + $frame[0].id + "' style='display:none;'></div>" +
                    "<div style='position: relative; ' id='divinnertop_up'>" +
                    "<div id='ccfram_backgroundElement' style='position: fixed; left: 0px; top: 0px; width: 100%; height: 100%;' class='ModalPopupBG'></div>" +
                    "<div style='color: white; font-family: \"Lucida Grande\",\"Arial\"; font-size: 11px; position: absolute; text-align: center;width: 100%; z-index: 2001; top: 6px; position:relative;'></div>" +
                    "<div style='width: auto; height: auto; margin: 0 -7px;z-index:9999; position:relative' class='contentContainer'>" +
                    "</div>" +
                    "</div>");

                $popup.find('.contentContainer').append($iframe);
                $popup.appendTo($frame);//.fadeTo(o.speed, o.opacity);
            }
            else {
                $iframe.appendTo($frame);//.fadeTo(o.speed, o.opacity);
            }



            $frame.data('iframe_id', $iframe.attr('id'));
            $iframe.height(o.height).width(o.width);
            $iframe.attr('allow', 'camera *;');
            $iframe.attr('src', o.loadUrl); // setting iframe src after open due IE9 bug

            //initialize zenswipe class
            console.log($iframe.attr('id'));
            //Fire opening
            triggerCall(o.receivers.onOpening);
            //Fire when open
            $iframe.load(function (e) {
                var cssStyle = "";
                cssStyle = vui._getStyle();
                if (o.isfullwidth == true) {
                    $(this).addClass("framefullwidth");
                }
                vui.frame.zenswipe.addStyle(cssStyle);
                vui.frame.zenswipe.checkWebView(o.iswebview ? "true" : "false");
                vui.frame.zenswipe.ignorePro(o.ignorePro ? "true" : "false");
                window.setTimeout(ShowFrame(modal), 1000);

            });
        }

        function ShowFrame(modal) {

            o.loaded = true;
            triggerCall(o.receivers.onOpened);
            $frame.find('.creditcard-width-temp').remove();
            $frame.find('iframe').css("display", "block");
            vui.frame.zenswipe.getHeight();
            if (modal == true) {
                ShowPopup(o.height, o.width, $frame.attr('id'));
            } else {

                $('#' + vui.contentContainer).show();

            }
            if (vui.loader != null) vui.loader(false);
        }

        function ShowPopup(frameHeight, frameWidth, contentContainer) {
            var divTopLeftarray, divTop, divLeft, viewPortHeight;
            var divtop_up = document.getElementById(contentContainer);
            divTopLeftarray = getTopLeftPosition(frameHeight, frameWidth).split('|');
            divTop = divTopLeftarray[0];
            divLeft = divTopLeftarray[1];
            viewPortHeight = divTopLeftarray[2];
            divtop_up.style.left = divLeft - 20 + 'px';
            var scrollTop;
            if (document.documentElement.scrollTop != document.body.scrollTop) {
                scrollTop = document.documentElement.scrollTop + document.body.scrollTop
            } else {
                scrollTop = document.body.scrollTop;
            }

            if (scrollTop > 0)
                divTop = parseInt(divTop) + scrollTop;

            divTop = divTop - 20;
            divtop_up.style.top = divTop + 'px';

            divtop_up.style.position = 'absolute';
            divtop_up.width = 'auto';
            divtop_up.height = 'auto';
            divtop_up.style.zIndex = 100001;

            divtop_up.style.display = "";
            //Call_ClearControls(contentContainer);
        }

        function getTopLeftPosition(frameHeight, frameWidth) {
            var viewportheightarray, viewportheight, viewportwidth, divTop, divLeft;
            viewportheightarray = getViewPortHeightWidth().split('|');
            viewportheight = viewportheightarray[0];
            viewportwidth = viewportheightarray[1];
            divTop = (viewportheight - frameHeight) / 2; //555 is iFrame Static Height and other top-bottom so, 600 is minus from viewportheight
            if (divTop < 0)
                divTop = 1;
            divLeft = (viewportwidth - frameWidth) / 2; //820 is iFrame Static width and other top-bottom so, 832 is minus from viewportwidth
            return divTop + '|' + divLeft + '|' + viewportheight;
        }

        function getViewPortHeightWidth() {
            //****************************************************************************************************************
            // Viewportwidth and height
            var viewportwidth;
            var viewportheight;

            // the more standards compliant browsers (mozilla/netscape/opera/IE7) use window.innerWidth and window.innerHeight
            if (typeof window.innerWidth != 'undefined') {
                viewportwidth = window.innerWidth,
                    viewportheight = window.innerHeight
            }
            // IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)
            else if (typeof document.documentElement != 'undefined'
                && typeof document.documentElement.clientWidth !=
                'undefined' && document.documentElement.clientWidth != 0) {
                viewportwidth = document.documentElement.clientWidth,
                    viewportheight = document.documentElement.clientHeight
            }
            // older versions of IE
            else {
                viewportwidth = document.getElementsByTagName('body')[0].clientWidth,
                    viewportheight = document.getElementsByTagName('body')[0].clientHeight
            }
            return viewportheight + '|' + viewportwidth;
        }

        function _postMessage(message) {
            try {
                if (document.getElementById($frame.data('iframe_id')) != undefined || document.getElementById($frame.data('iframe_id')) != null) {
                    document.getElementById($frame.data('iframe_id')).contentWindow.postMessage(message, getSource());
                }
            }
            catch (e) {
                console.log(e);
            }
        }

        var _target = null;
        function getSource() {
            if (_target == null) {
                var targetRegex = /^(https*:\/\/[^\/]*).*$/g;
                var match = targetRegex.exec($('#' + $frame.data('iframe_id')).attr('src'));
                if (match) {
                    _target = match[1];
                }
            }
            return _target;
        }

        function triggerCall(func, arg) {
            $.isFunction(func) && func.call(this, arg);
        }
        function Failed3DSecurePopup(frmValue) {

            if (typeof swal == "undefined") {
                if (typeof SetErrorDisplayMessageReport != "undefined" && $.isFunction(SetErrorDisplayMessageReport)) {
                    SetErrorDisplayMessageReport('0', "Your authentication is failed. please try again!", '');
                    vui._ajax(frmValue.cardFrameType, frmValue.contentContainer, frmValue.modal, frmValue.height, frmValue.merchant_token_id, frmValue.firstName, frmValue.lastName, frmValue.width, frmValue.frameURL, frmValue.afterCallBackHandleinner, frmValue.isAjaxQue, frmValue.device, frmValue.ignorePro, frmValue._isfullwidth, frmValue._isnot_auth, frmValue._track_data, frmValue._business_country_id, frmValue._isremove_address_style, frmValue._isthreeds_required);
                }
            } else {
                swal({
                    title: "Your authentication is failed. please try again!", text: "", type: "error",
                    showCancelButton: false, closeOnConfirm: true, confirmButtonText: "OK", html: true
                }, function (isConfirm) {
                    try {
                        if (window.location.href.includes('/merchants/employee') == true && typeof _employeeOwner != "undefined" && typeof _employeeOwner.ResetCCSuccessCallback != "undefined" && $.isFunction(_employeeOwner.ResetCCSuccessCallback)) {
                            _employeeOwner.ResetCCSuccessCallback(_employeeOwner.FrameType.ACHCC);
                        } else if (window.location.href.includes('/merchants/duepayment') == true || window.location.href.includes('/Users/DuePayment.aspx') == true) {
                            onRequiredCallback();
                        }
                    } catch (ex) {
                    }
                    vui._ajax(frmValue.cardFrameType, frmValue.contentContainer, frmValue.modal, frmValue.height, frmValue.merchant_token_id, frmValue.firstName, frmValue.lastName, frmValue.width, frmValue.frameURL, frmValue.afterCallBackHandleinner, frmValue.isAjaxQue, frmValue.device, frmValue.ignorePro, frmValue._isfullwidth, frmValue._isnot_auth, frmValue._track_data, frmValue._business_country_id, frmValue._isremove_address_style, frmValue._isthreeds_required);
                });
            }
        }
        function create3DSecurePopup() {


            if ($("body").find("#frame3d_cardintent").length <= 0) {
                var $popup = "<div class='zenswipe-payment-frame' id='frame3d_cardintent'>" +
                    "<div class='zenswipe-payment-container'>" +
                    "<div  class='zenswipe-payment-inner'>" +
                    "<div class='zen-close-btn'>" +
                    "<img src='https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/popup-close-img.png' onclick='_cardIntendent.CloseCardIntendentInfo(false);' style='cursor: pointer;'>" +
                    "</div>" +
                    "<div id='divframe3d_cardintent' class='zenswipe-iframe-wrapper'>" +
                    "</div > </div ></div ></div > ";
                $("body").append($popup);
            }
            return true;
        }
        function Check3DRedirectURLExists(res) {
            if (res != null && res.data != null && res.data.custom_code == 1000 && res.data.data != null && res.data.data.ThreeDSRedirectURL != null && res.data.data.ThreeDSRedirectURL != '') {
                return res.data.data.ThreeDSRedirectURL;
            } else {
                return "";
            }
        }
        function returnCallBackZS(res) {
            if (parseInt(o.afterCallBackHandle) == 0 && res.data != null && res.data.custom_code != 1000) {
                $('#' + vui.contentContainer).hide();
                if (vui.loader != null) vui.loader(false);
                //response code handling for save card by vipul rathod
                var message = res.data.Message;
                if (res.data.subResponseCode != null && res.data.subResponseCode != '') {
                    message += '<br />Error Code:' + res.data.paymentGateway + '-' + res.data.subResponseCode;
                }
                swal({
                    type: "error", timer: 6000, showCancelButton: false, html: true,
                    title: message, text: "", customClass: 'sweet-alert-model',
                });
                return;
            }
            var payment3DRedirtURL = Check3DRedirectURLExists(res);
            if (payment3DRedirtURL != "" && create3DSecurePopup() == true) {
                var pageinfo = {};
                if (parseInt(o.afterCallBackHandle) != 0 && parseInt(o.afterCallBackHandle) != 1 && o.afterCallBackHandle != '' && res.data != null && res.data.custom_code == 1000 && typeof (o.afterCallBackHandle) == 'function' && o.afterCallBackHandle != "") {
                    pageinfo.SuccessCallBack = o.afterCallBackHandle;
                } else {
                    pageinfo.SuccessCallBack = o.receivers.onGetToken;
                }
                pageinfo.FailedCallback = Failed3DSecurePopup;
                pageinfo.PaymentIntentURL = payment3DRedirtURL;
                pageinfo.CountryID = vui.ccCountryId;
                pageinfo.SuccessCallBackResponse = res;
                pageinfo.FailedCallBackResponse = vui.frmValue;

                _cardIntendent.LoadCardIntendentInfo(pageinfo);
            } else {
                if (parseInt(o.afterCallBackHandle) != 0 && parseInt(o.afterCallBackHandle) != 1 && o.afterCallBackHandle != '' && res.data != null && res.data.custom_code == 1000 && typeof (o.afterCallBackHandle) == 'function' && o.afterCallBackHandle != "") {
                    triggerCall(o.afterCallBackHandle, res);
                } else {
                    triggerCall(o.receivers.onGetToken, res);
                }
            }
            triggerCall(o.receivers.onHideLoading, res);
        }


    }


    $.fn.ZenSwipeCard.defaults = {
        height: 375
        , width: 480
        , loaded: false
        , appendTo: 'body'
        , iframeAttr: 'scrolling="no" frameborder="0"'
        , loadUrl: ''
        , modal: true
        , modalClose: true
        , opacity: 1
        , position: ['auto', 'auto'] // x, y,
        , positionStyle: 'absolute'// absolute or fixed
        , scrollBar: true
        , speed: 250 // open & close speed
        , transition: 'fadeIn' //transitions: fadeIn, slideDown, slideIn, slideBack
        , transitionClose: false
        , zIndex: 1000001 // popup gets z-index 9999, modal overlay 9998
        , showLog: true
        , afterCallBackHandle: 0 // 0 -- handle error in zenswipe, 1 -- do not handle error zenswipe
        , iswebview: false
        , ignorePro: false
        , isfullwidth: false,
        receivers: {
            onOpening: function (m) { if (typeof (onOpeningCallback) == 'function') onOpeningCallback(m); },
            onClose: function (m) { if (typeof (onCloseCallback) == 'function') onCloseCallback(m); },
            onOpened: function (m) { if (typeof (onOpenedCallback) == 'function') onOpenedCallback(m); },
            onError: function (m) { if (typeof (onErrorCallback) == 'function') onErrorCallback(m); },
            onGetToken: function (m) { if (typeof (onGetTokenCallback) == 'function') onGetTokenCallback(m); },
            onRequired: function (m) { if (typeof (onRequiredCallback) == 'function') onRequiredCallback(m); },
            onHideLoading: function (m) { if (typeof (onHideLoadingCallback) == 'function') onHideLoadingCallback(m); },
            onDisplayLoading: function (m) { if (typeof (onDisplayLoadingCallback) == 'function') onDisplayLoadingCallback(m); },
            onGetSize: function (m) { if (typeof (onGetSizeCallback) == 'function') onGetSizeCallback(m); },
            onApplicationSuccess: function (m) { if (typeof (onApplicationSuccessCallback) == 'function') onApplicationSuccessCallback(m); },
            onMessage: function (m) { if (typeof (onMessageCallback) == 'function') onMessageCallback(m); },
            onZSDown: function (m) { if (typeof (onZSDownCallback) == 'function') onZSDownCallback(m); },
            onFocusIn: function (m) { if (typeof (onFocusInCallback) == 'function') onFocusInCallback(m); },
            onFocusOut: function (m) { if (typeof (onFocusOutCallback) == 'function') onFocusOutCallback(m); },
            onTabfocused: function (m) { if (typeof (onTabfocusedCallback) == 'function') onTabfocusedCallback(m); },
            //onDown: function (m) { if (typeof (onDownCallback) == 'function') onDownCallback(m); },
            onRanderPager: function (m) { if (typeof (onRanderPagerCallback) == 'function') onRanderPagerCallback(m); },
            onShowHideSaveCancel: function (m) { if (typeof (onShowHideSaveCancelCallback) == 'function') onShowHideSaveCancelCallback(m); },
            onMerchantSuccess: function (m) { if (typeof (onMerchantSuccessCallback) == 'function') onMerchantSuccessCallback(m); },
            onscrollToTop: function (m) { if (typeof (onscrollToTopCallback) == 'function') onscrollToTopCallback(m); },
            onDepositPopup: function (m) { if (typeof (onDepositPopupCallback) == 'function') onDepositPopupCallback(m); },
            onTab1099detail: function (m) { if (typeof (onTab1099detailCallback) == 'function') onTab1099detailCallback(m); },
            onShowpdf: function (m) { if (typeof (onShowpdfCallback) == 'function') onShowpdfCallback(m); },
            ondatepickerShowHide: function (m) { if (typeof (onShowhideMerchantCallback) == 'function') onShowhideMerchantCallback(m); },
            onCcValid: function (m) { if (typeof (onCcValidCallback) == 'function') onCcValidCallback(m); },
            onResponsiveIframe: function (m) { if (typeof (onResponsiveIframeCallback) == 'function') onResponsiveIframeCallback(m); },
            onverifyaddresshideloading: function (m) { if (typeof (verifyaddresshideloadingCallback) == 'function') verifyaddresshideloadingCallback(m); },
            onTransactionDetailForChargeback: function (m) { if (typeof (onTransactionChargebackCallback) == 'function') onTransactionChargebackCallback(m); },
            onCustomerForChargeback: function (m) { if (typeof (onCustomerChargebackCallback) == 'function') onCustomerChargebackCallback(m); },
            onUpdateNotificationPanel: function (m) { if (typeof (onUpdateNotificationPanelCallback) == 'function') onUpdateNotificationPanelCallback(m); },
            onUpdateAcceptRefund: function (m) { if (typeof (onUpdateAcceptRefundCallback) == 'function') onUpdateAcceptRefundCallback(m); },
            onShowAcceptSubmitPopup: function (m) { if (typeof (onShowAcceptSubmitPopupCallback) == 'function') onShowAcceptSubmitPopupCallback(m); },
            onSetVMSPlanTitle: function (m) { if (typeof (onSetVMSPlanTitleCallback) == 'function') onSetVMSPlanTitleCallback(m); },
            onFinishLater: function (m) { if (typeof (onFinishLaterCallback) == 'function') onFinishLaterCallback(m); },
            onBackToHardwarePage: function (m) { if (typeof (onBackToHardwarePageCallback) == 'function') onBackToHardwarePageCallback(m); },
            onMongoIdofVMSApplication: function (m) { if (typeof (onMongoIdofVMSApplicationCallback) == 'function') onMongoIdofVMSApplicationCallback(m); },
            onPlaidLinkTokenId: function (m) { if (typeof (onPlaidLinkTokenIdCallback) == 'function') onPlaidLinkTokenIdCallback(m); },
            onVMSApplicationCompleteWebView: function (m) { if (typeof (onVMSApplicationCompleteWebViewCallback) == 'function') onVMSApplicationCompleteWebViewCallback(m); },
            onBrowserBackEventSendtoVagaro: function (m) { if (typeof (onBrowserBackEventSendtoVagaroCallback) == 'function') onBrowserBackEventSendtoVagaroCallback(m); },
            AddLogInAmplitude: function (m) { if (typeof (AddLogInAmplitudeCallback) == 'function') AddLogInAmplitudeCallback(m); },
            askVagaroForVMSStep: function (m) { if (typeof (askVagaroForVMSStepCallback) == 'function') askVagaroForVMSStepCallback(m); },
            GetVagaroLink: function (m) { if (typeof (onGetVagaroLinkCallback) == 'function') onGetVagaroLinkCallback(m); },
            ShowHideBackArrow: function (m) { if (typeof (onShowHideBackArrowCallback) == 'function') onShowHideBackArrowCallback(m); },
            CardFrameExpire: function (m) { if (typeof (OnCardFrameExpire) == 'function') OnCardFrameExpire(m); },
            onSaveBatchTimeResponse: function (m) { if (typeof (onSaveBatchTimeResponseCallback) == 'function') onSaveBatchTimeResponseCallback(m); },
            onSendbatchTime: function (m) { if (typeof (onSendbatchTimeCallback) == 'function') onSendbatchTimeCallback(m); },
            OpenChangeBatchPopup: function (m) { if (typeof (OpenChangeBatchPopupCallback) == 'function') OpenChangeBatchPopupCallback(m); },
            onCyberSourceTrackingId: function (m) { if (typeof (onCyberSourceTrackingIdCallback) == 'function') onCyberSourceTrackingIdCallback(m); },
            onBusinessLst: function (m) { if (typeof (onGetBusineeName) == 'function') onGetBusineeName(m); },
            onCreateMerchantSuccess: function (m) { if (typeof (onCreateMerchantSuccessCallback) == 'function') onCreateMerchantSuccessCallback(m); },
            onSetFooterManage: function (m) { if (typeof (onSetFooterManagecall) == 'function') onSetFooterManagecall(m); },
            onShowHideToolTip: function (m) { if (typeof (onShowHideToolTip) == 'function') onShowHideToolTip(m); },
            onGetVagaroVMSLogData: function (m) { if (typeof (GetVagaroVMSLogDataback) == 'function') GetVagaroVMSLogDataback(m); }
        }
    };

})(jQuery);

(function () {
    window.vui = {
        frameUrl: null,
        frame: null,
        contentContainer: null,
        modal: false,
        height: 375,
        width: 480,
        loader: null,
        buttonBackColor: typeof (hdnButtonBackColor) != undefined ? $("#hdnButtonBackColor").val() : "",
        buttonFontColor: typeof (ButtonFontColor) != undefined ? $("#hdnButtonFontColor").val() : "",
        buttonHoverColor: typeof (ButtonHoverColor) != undefined ? $("#hdnButtonHoveColor").val() : "",
        ccCountryId: 1,
        stripeRadarSession: null,
        country: { USA: "1", UK: "2", Canada: "3", Australia: "4" },
        displayLoading: function (progressor) {
            this.loader(true);
        },
        hideLoading: function (progressor) {
            this.loader(false);
        },
        setHeight: function (height, width) {
            $('#' + this._iframeid).height(height);
            $('#' + this._iframeid).width(width);
        },
        getSize: function (height, width) {
            zenswipe.getSize();
        },
        getMerchantFrame: function (contentContainer, url, height, width, iswebview) {

            this.modal = false;
            this.height = height;
            this.width = width;
            this.iswebview = iswebview;
            this.contentContainer = contentContainer;
            var result = { data: { url: url }, custom_code: 1000 };
            this._callCreditCardSuccess(result);
            //isFromCheckout, callfrom, placeholder, height, width
        },
        getTypeAndSwipeFrame: function (contentContainer, height, firstName, lastName, merchant_token_id, afterCallBackHandleinner) {
            firstName = firstName || "";
            lastName = lastName || "";
            var device = "offline website";
            this._ajax(1, contentContainer, true, height, merchant_token_id, firstName, lastName, '', '', afterCallBackHandleinner, true, device, false);
        },
        getSwipeFrame: function (contentContainer, height, firstName, lastName, merchant_token_id) {
            var device = "offline website";
            this._ajax(4, contentContainer, false, height, merchant_token_id, firstName, lastName, '', '', undefined, true, device, false);
        },
        getTypeFrame: function (contentContainer, height, merchant_token_id, afterCallBackHandleinner, _isremove_address_style, isccaddressmandatory) {
            var device = "offline website";
            this._ajax(2, contentContainer, true, height, merchant_token_id, '', '', '', '', afterCallBackHandleinner, true, device, false, undefined, undefined, undefined, undefined, _isremove_address_style, undefined, isccaddressmandatory);
        },
        getTypeWithoutButton: function (contentContainer, height, merchant_token_id, width, frameURL, afterCallBackHandleinner, device, _isfullwidth, _business_country_id, _track_data, isccaddressmandatory = true, isDisableDarkMode = false) {
            height = height || 160;
            this._ajax(7, contentContainer, false, height, merchant_token_id, "", "", width, frameURL, afterCallBackHandleinner, true, device, false, _isfullwidth, undefined, _track_data, _business_country_id, undefined, undefined, isccaddressmandatory, undefined, undefined, undefined, isDisableDarkMode);
        },
        getTypeWithoutButtonAndAuthorization: function (contentContainer, height, merchant_token_id, width, frameURL, afterCallBackHandleinner, device, ignorePro, _business_country_id, _track_data, isDisableDarkMode = false) {
            height = height || 160;
            this._ajax(11, contentContainer, false, height, merchant_token_id, "", "", width, frameURL, afterCallBackHandleinner, true, device, ignorePro, undefined, undefined, _track_data, _business_country_id, undefined, undefined, undefined, undefined, undefined, undefined, isDisableDarkMode);
        },
        getTypeFrameWithoutSaveButton: function (contentContainer, height, merchant_token_id, afterCallBackHandleinner, newDevice, _isremove_address_style, isccaddressmandatory = true) {
            var device = (typeof (newDevice) != "undefined" && newDevice != null && newDevice.toString().trim() != "" ? newDevice : "offline website");
            this._ajax(0, contentContainer, true, height, merchant_token_id, "", "", '', '', afterCallBackHandleinner, true, device, false, undefined, undefined, undefined, undefined, _isremove_address_style, undefined, isccaddressmandatory);
        },
        getTypeFrameWithAddress: function (contentContainer, height, merchant_token_id, width, frameURL, afterCallBackHandleinner, device, _isfullwidth, _isnot_auth, _track_data, _business_country_id, isthreeds_required, isccaddressmandatory, card_token = "", business_id = 0, TrackingId = "", isDisableDarkMode) {
            this._ajax(10, contentContainer, false, height, merchant_token_id, "", "", width, frameURL, afterCallBackHandleinner, true, device, false, _isfullwidth, _isnot_auth, _track_data, _business_country_id, undefined, isthreeds_required, isccaddressmandatory, card_token, business_id, TrackingId, isDisableDarkMode);
        },
        getTypeFrameWithAddress_NoAuth: function (contentContainer, height, merchant_token_id, width, frameURL, afterCallBackHandleinner, device) {
            this._ajax(12, contentContainer, false, height, merchant_token_id, "", "", width, frameURL, afterCallBackHandleinner, true, device, false);
        },
        getTypeFrameForEditCard: function (contentContainer, height, merchant_token_id, afterCallBackHandleinner, newDevice, _business_country_id, _isremove_address_style, isDisableDarkMode = false) {
            var device = (typeof (newDevice) != "undefined" && newDevice != null && newDevice.toString().trim() != "" ? newDevice : "offline website");
            this._ajax(14, contentContainer, true, height, merchant_token_id, "", "", '', '', afterCallBackHandleinner, true, device, false, undefined, undefined, undefined, _business_country_id, _isremove_address_style, undefined, undefined, undefined, undefined, undefined, isDisableDarkMode);
        },
        getTypeFramewithCardOnFile: function (contentContainer, height, merchant_token_id, width, frameURL, afterCallBackHandleinner, device, _isfullwidth, _business_country_id, isccaddressmandatory = true) {
            height = height || 160;
            this._ajax(9, contentContainer, false, height, merchant_token_id, "", "", width, frameURL, afterCallBackHandleinner, true, device, false, _isfullwidth, undefined, undefined, _business_country_id, undefined, undefined, isccaddressmandatory);
        },
        getTypeFrameForCCAddress: function (contentContainer, height, merchant_token_id, width, frameURL, afterCallBackHandleinner, device, _isfullwidth, _business_country_id, isccaddressmandatory = true, card_token = "", isDisableDarkMode = false) {
            height = height || 160;
            this._ajax(16, contentContainer, false, height, merchant_token_id, "", "", width, frameURL, afterCallBackHandleinner, true, device, false, _isfullwidth, undefined, undefined, _business_country_id, undefined, undefined, isccaddressmandatory, card_token, 0, '', isDisableDarkMode);
        },
        //getReportdata: function (isPreviousBtn, isRenderPaging, currentPageno) {
        //    debugger;
        //    this.getReportdata(isPreviousBtn, isRenderPaging, currentPageno);
        //},
        _ajax: function (cardFrameType, contentContainer, modal, height, merchant_token_id, firstName, lastName, width, frameURL, afterCallBackHandleinner, isAjaxQue, device, ignorePro, _isfullwidth, _isnot_auth, _track_data, _business_country_id, _isremove_address_style, _isthreeds_required, _isccaddressmandatory = true, _card_token = '', business_id = 0, TrackingId = '', isDisableDarkMode = false) {
            //To destroy iframe and load new iframe if already registered in page
            if (vui.frame != null) {
                vui.frame.destroy();
            }
            var frmValue = {};
            frmValue.cardFrameType = cardFrameType;
            frmValue.contentContainer = contentContainer;
            frmValue.modal = modal;
            frmValue.height = height;
            frmValue.merchant_token_id = merchant_token_id;
            frmValue.firstName = firstName;
            frmValue.lastName = lastName;
            frmValue.width = width;
            frmValue.frameURL = frameURL;
            frmValue.afterCallBackHandleinner = afterCallBackHandleinner;
            frmValue.isAjaxQue = isAjaxQue;
            frmValue.device = device;
            frmValue.ignorePro = ignorePro;
            frmValue._isfullwidth = _isfullwidth;
            frmValue._isnot_auth = _isnot_auth;
            frmValue._track_data = _track_data;
            frmValue._business_country_id = _business_country_id;
            frmValue._isremove_address_style = _isremove_address_style;
            frmValue._isthreeds_required = _isthreeds_required;

            this.frmValue = frmValue;

            if (this.loader != null) this.loader(true);
            this.ignorePro = ignorePro;
            this.contentContainer = contentContainer;
            this.modal = modal;
            this.height = (height != undefined && height != "") ? height : this.height;
            this.width = (width != undefined && width != "") ? width : this.width;
            this.afterCallBackHandle = (afterCallBackHandleinner != undefined || afterCallBackHandleinner != "") ? afterCallBackHandleinner : this.afterCallBackHandle;
            this.isfullwidth = _isfullwidth;
            this.isnotauth = _isnot_auth;
            this.trackdata = _track_data;
            if (this.modal == false) {
                var html = GetHTMLDummyFrame(cardFrameType);
                var tempstyle = vui._getStyle();
                if (tempstyle != "") {
                    html += "<style>" + tempstyle + "</style>";
                }
                $("#" + this.contentContainer).append(html);
                $("#" + this.contentContainer).show();
            }


            if (frameURL != undefined && frameURL != null && frameURL != "") {
                this._callDirectUrl(frameURL, modal, height, width, afterCallBackHandleinner);
                return;
            }

            var _Data = {};
            var cardData = {};
            _Data.card_frame_type = cardFrameType == undefined ? 1 : cardFrameType;
            _Data.first_name = firstName;
            _Data.last_name = lastName;
            _Data.merchant_token_id = merchant_token_id;
            _Data.device = device;
            _Data.isnot_auth = _isnot_auth;
            _Data.track_data = _track_data;
            _Data.business_country_id = _business_country_id;
            _Data.isremove_address_style = _isremove_address_style;
            _Data.isccaddressmandatory = _isccaddressmandatory;
            _Data.card_token = _card_token;
            _Data.business_id = business_id;
            _Data.TrackingId = TrackingId;
            _Data.IsDisableDarkMode = isDisableDarkMode;

            try {
                _Data.isthreeds_required = true;
                _Data.threeds_returnurl = window.location.origin + "/cardintendentsuccess.aspx";
                if (window.location.href.includes('/merchants/calendar')) {
                    _Data.threeds_returnurl += "?isFromCalendar=1"
                }
            } catch (ex) {
                _Data.isthreeds_required = false;
                _Data.threeds_returnurl = window.location.origin + "/cardintendentsuccess.aspx";
            }
            cardData.card = _Data;
            var vghour = new vagaro.ajax();
            vghour.datamodel.Token = 'GetCreditCardIFrame';
            vghour.datamodel.callback = this._callCreditCardSuccess;
            vghour.datamodel.data = cardData;
            vghour.datamodel.Error = function (e) { this.loader(false); };
            if (isAjaxQue) {
                vghour.PostQue();
            }
            else {
                vghour.Post();
            }
        },
        _callCreditCardSuccess: function (result) {
            if (result != null && result.custom_code == 1000) {
                if (vui.modal == false) {
                    //$('#' + vui.contentContainer).show();
                }
                if (result.data.url == undefined || result.data.url == null || result.data.url == "undefined") {
                    if (typeof (onGetSwipeCallback) == 'function') onGetSwipeCallback(result);
                } else {
                    vui.frame = $('#' + vui.contentContainer).ZenSwipeCard({ loadUrl: result.data.url, modal: vui.modal, height: result.data.iframe_height != null && result.data.iframe_height > 0 ? result.data.iframe_height : vui.height, width: vui.width, afterCallBackHandle: vui.afterCallBackHandle, iswebview: vui.iswebview, isfullwidth: vui.isfullwidth });
                }
                //if (vui.loader != null) vui.loader(false);
            }
            else {
                //onMessage
                if (vui.loader != null) vui.loader(false);
                //if (vui.modal == false) {
                //    //if ($("#hdnAddBusinessDummyTokenMobile").val() != undefined && $("#hdnAddBusinessDummyTokenMobile").val() != "") {
                //    //    alert("Some error occured, Please try again!.");
                //    //    onZSDownCallback(result);
                //    //} else {
                //    //    swal({ title: "", text: "Some error occured, Please try again!.", showCancelButton: false, confirmButtonColor: "#eb6663", },
                //    //        function (isConfirm) {
                //    //            onZSDownCallback(result);
                //    //        });
                //    //}

                //   
                //} else {
                //    swal({ title: "", text: "Some error occured, Please try again!.", showCancelButton: false });
                //}

                onZSDownCallback(result);
            }
        },
        _callDirectUrl: function (frameURL, modal, height, width, afterCallBackHandleinner) {
            vui.frame = $('#' + vui.contentContainer).ZenSwipeCard({ loadUrl: frameURL, modal: modal, height: height, width: width, afterCallBackHandle: afterCallBackHandleinner });
        },
        _getStyle: function () {
            var cssStyle = "";
            if (typeof ($("#hdnBuilderFrameCSS")) != undefined && $("#hdnBuilderFrameCSS").val() != "" && $("#hdnBuilderFrameCSS").val() != undefined) {
                return $("#hdnBuilderFrameCSS").val();
            }

            var iconWidth = $("#ccIcon").css("width");
            var iconPadding = $("#ccIcon").css("padding-left");

            if (typeof (backGroundColor) != "undefined" && backGroundColor != "") {
                if (typeof (isWidget) != "undefined" && isWidget != "" && isWidget == 'true') {
                    cssStyle += ".popupwidth542 .modal-body { background-color:#FFFFFF}";
                }
                else {
                    cssStyle += ".popupwidth542 .modal-body { background-color:" + backGroundColor + "}";
                }
            }
            if ($("#hdnButtonBackColor").val() != "" && $("#hdnButtonBackColor").val() != undefined && $("#hdnButtonFontColor").val() != "" && $("#hdnButtonFontColor").val() != undefined) {
                cssStyle += ".btn-primary  { background-color: " + $("#hdnButtonBackColor").val() + "!important;border-color:" + $("#hdnButtonBackColor").val() + "!important; color : " + $("#hdnButtonFontColor").val() + "!important;}";
                cssStyle += ".btn-primary:hover { background-color: " + $("#hdnButtonHoveColor").val() + "!important;border-color:" + $("#hdnButtonHoveColor").val() + "!important;}";
                cssStyle += ".btn-default  { background-color!important:  #666666 }";
            }
            cssStyle += ".framefullwidth { width:100%!important;}";

            cssStyle += ".popupwidth542.zs-fullwithcc { max-width:100%!important;}";
            if ($("#hdnAddBusinessDummyToken").val() != undefined && $("#hdnAddBusinessDummyToken").val() != "") {
                cssStyle += ".addbusiness-right-col { min-height:738px;}";
                cssStyle += ".cc-detail.cc-lifull-width li { margin-bottom:38px;}";
                cssStyle += ".list-inline { margin-left:-5px; margin-right: 0px;}";
                cssStyle += ".modal-content { background:transparent;}";
                cssStyle += ".RadCaptcha img { margin-bottom:14px; margin-top:10px;}";
                cssStyle += ".cc-detail.cc-lifull-width li .form-control { font-size:16px; background-color : #fff;}";
                cssStyle += ".cc-detail.cc-lifull-width li .form-control { font-size:16px;}";
                cssStyle += ".cc-detail.cc-lifull-width li:nth-of-type(4n),.cc-detail.cc-lifull-width li:nth-of-type(5n),.cc-detail.cc-lifull-width li:nth-of-type(6n){margin-bottom:20px}";
            }

            if (window.location.href.includes('/signup') || ((window.location.href.includes('/myaccount/paymentmethods')) && typeof _shopdetail != "undefined" && _shopdetail != null && _shopdetail.isCustomWebsite == 'false' && _shopdetail.isWidget == 'false' && _shopdetail.isFacebook == 'false') ||
                ((window.location.href.includes('/shopping-bag') || window.location.href.includes('/book-now'))
                    && (typeof _siteBuilderDetail != "undefined" &&
                        _siteBuilderDetail != null &&
                        typeof _siteBuilderDetail.UserLocationInfo != "undefined" &&
                        _siteBuilderDetail.UserLocationInfo != null &&
                        typeof _siteBuilderDetail.UserLocationInfo.objUserCustomData != "undefined" &&
                        _siteBuilderDetail.UserLocationInfo.objUserCustomData != null &&
                        _siteBuilderDetail.UserLocationInfo.objUserCustomData.IsCheckInApp == false &&
                        _siteBuilderDetail.UserLocationInfo.objUserCustomData.IsCustomWebsite == false &&
                        _siteBuilderDetail.UserLocationInfo.objUserCustomData.IsFaceBook == false &&
                        _siteBuilderDetail.UserLocationInfo.objUserCustomData.IsPromotionUI == false &&
                        _siteBuilderDetail.UserLocationInfo.objUserCustomData.IsWidget == false
                    ))
            ) {

                try {
                    var btnbgColor = $("#btnzstemplate").css("background-color");
                    var btnforColor = $("#btnzstemplate").css("color");
                    var btnRedius = $("#btnzstemplate").css("border-radius");
                    var btnRedius = $("#btnzstemplate").css("padding");
                    var btnRedius = $("#btnzstemplate").css("border");

                    var txtBgColor = $("#inputzstemplate").css("background-color");
                    var txtBgColorerror = $("#inputzstemplateerror").css("background-color");
                    var txtForColor = $("#inputzstemplate").css("color");
                    var txtRedius = $("#inputzstemplate").css("border-radius");
                    var txtFontSize = $("#inputzstemplate").css("font-size");
                    var txtBorder = $("#inputzstemplate").css("border");
                    var txtBordererror = $("#inputzstemplateerror").css("border-color");
                    var txtBgColorfocus = $("#inputzstemplatefocus").css("border-color");
                    var txtLineHeight = $("#inputzstemplate").css("line-height");
                    var txtAlign = $("#inputzstemplate").css("text-align");
                    var txtPadding = $("#inputzstemplate").css("padding");
                    var txtHeignt = $("#inputzstemplate").css("height");
                    var txtradiusleftnone = $("#inputzstemplateaddressradius").css("border-top-left-radius");
                    var txtradiusbottomnone = $("#inputzstemplateaddressradius").css("border-bottom-left-radius");
                    var txterrorcolor = $("#texterror").css("color");
                    var txterrorfontsize = $("#texterror").css("font-size");
                    var txterrorlineHeignt = $("#texterror").css("line-height");
                    var txrsecurefontsize = $("#webcaptiontext").css("font-size");
                    var txrsecurelineheight = $("#webcaptiontext").css("line-height");
                    var txrsecurecolor = $("#webcaptiontext").css("color");
                    var modalradius = $("#modalcontent").css("border-radius");

                    var modaltitlefontcolor = $("#modaltitle").css("color");
                    var modaltitlefontsize = $("#modaltitle").css("font-size");
                    var modaltitlelineheight = $("#modaltitle").css("line-height");
                    var modaltitlefontweight = $("#modaltitle").css("font-weight");


                    var modaltitlefontcolor2 = $("#modaltitle2").css("color");
                    var modaltitlefontsize2 = $("#modaltitle2").css("font-size");

                    var modalfooterbgcolor = $("#modalfooter").css("background-color");

                    var modalfootersecbtnbgcolor = $("#modalfootersecbtn").css("background-color");
                    var modalfootersecbtnbordercolor = $("#modalfootersecbtn").css("border-color");
                    var modalfootersecbtncolor = $("#modalfootersecbtn").css("color");
                    var modalfootersecbtnradius = $("#modalfootersecbtn").css("border-radius");
                    var modalfootersecbtnheight = $("#modalfootersecbtn").css("height");
                    var modalfootersecbtnfontsize = $("#modalfootersecbtn").css("font-size");

                    var modalfootersecbtnhover = $("#modalfootersecbtnhover").css("border-color");
                    var modalfootersecbtnbgcolorhover = $("#modalfootersecbtnhover").css("background-color");

                    var modalfootersecbtnbgcoloractive = $("#modalfootersecbtnactive").css("background-color");


                    var modalfooterprimarybtnbgcolor = $("#modalfooterprimarybtn").css("background-color");
                    var modalfooterprimarybtnbordercolor = $("#modalfooterprimarybtn").css("border-color");
                    var modalfooterprimarybtncolor = $("#modalfooterprimarybtn").css("color");
                    var modalfooterprimarybtnradius = $("#modalfooterprimarybtn").css("border-radius");
                    var modalfooterprimarybtnheight = $("#modalfooterprimarybtn").css("height");
                    var modalfooterprimarybtnfontsize = $("#modalfooterprimarybtn").css("font-size");

                    var modalfooterprimarybtnhover = $("#modalfooterprimarybtnhover").css("border-color");
                    var modalfooterprimarybtnbgcolorhover = $("#modalfooterprimarybtnhover").css("background-color");

                    var modalfooterprimarybtnbgcoloractive = $("#modalfooterprimarybtnactive").css("background-color");

                    var modalclosebuttonbgcolor = $("#modalclosebutton").css("background-color");
                    var modalclosebuttoncolor = $("#modalclosebutton").css("color");
                    var modalclosebuttonfontsize = $("#modalclosebutton").css("font-size");
                    var modalclosebuttonheight = $("#modalclosebutton").css("height");
                    var modalclosebuttonwidth = $("#modalclosebutton").css("width");
                    var modalclosebuttonborderradius = $("#modalclosebutton").css("border-radius");

                    var modalclosebuttonbgcolorhover = $("#modalclosebuttonhover").css("background-color");
                    var modalclosebuttonbgcoloractive = $("#modalclosebuttonactive").css("background-color");

                    var modalclosebuttonaftercolor = $("#modalclosebuttonafter").css("color");
                    var modalclosebuttonafterfontsize = $("#modalclosebuttonafter").css("font-size");
                    var modalclosebuttonaftertop = $("#modalclosebuttonafter").css("top");
                    var modalclosebuttonafterright = $("#modalclosebuttonafter").css("right");
                    var modalclosebuttonafterbackground = $("#modalclosebuttonafter").css("background-color");
                    var modalclosebuttonaftertextshadow = $("#modalclosebuttonafter").css("text-shadow");

                    var modalinputnocard = $("#modalinputnocard").css("top");
                    var modaladdressinputheight = $("#modaladdressinputheight").css("height");
                    var modaladdressinputlineheight = $("#modaladdressinputheight").css("line-height");
                    var modaladdressinputbordercolor = $("#modaladdressinputheight").css("border-color");

                    var txterrormarginbottom = $("#spantxterror").css("margin-bottom");
                    var cciframecountryselectoption = $("#cciframecountryselectoption").css("bottom");

                    cssStyle += ".btn-primary  { background-color: " + btnbgColor + "}";
                    cssStyle += ".form-control { background-color: " + txtBgColor + "!important ;color: " + txtForColor + "!important;border-radius: " + txtRedius
                        + "!important; font-size: " + txtFontSize + "!important;border: " + txtBorder + "!important;line-height: " + txtLineHeight
                        + "!important;text-align: " + txtAlign + "!important;padding: " + txtPadding + "!important;height: " + txtHeignt + "!important;}";
                    cssStyle += ".form-control.error { background-color: " + txtBgColorerror + "!important ;border-color: " + txtBordererror + "!important;}";
                    cssStyle += "span.error { color: " + txterrorcolor + "!important ;font-size: " + txterrorfontsize + "!important;line-height: " + txterrorlineHeignt + "!important;}";
                    cssStyle += "span.spanerror { color: " + txterrorcolor + "!important ;font-size: " + txterrorfontsize + "!important;line-height: " + txterrorlineHeignt + "!important;margin-bottom: " + txterrormarginbottom + "!important;}";
                    cssStyle += ".secured-by p { color: " + txrsecurecolor + "!important ;font-size: " + txrsecurefontsize + "!important;line-height: " + txrsecurelineheight + "!important;}";
                    cssStyle += " #card-image:before {width: " + iconWidth + "!important; padding-left:" + iconPadding + "!important;}";
                    cssStyle += " .modal-content {border-radius: " + modalradius + "!important;}";
                    cssStyle += " .modal-header h1 {color: " + modaltitlefontcolor + "!important; font-size:" + modaltitlefontsize + "!important; line-height:" + modaltitlelineheight + "!important; font-weight:" + modaltitlefontweight + "!important;}";
                    cssStyle += " .modal-body h4.modal-title {color: " + modaltitlefontcolor2 + "!important; font-size:" + modaltitlefontsize2 + "!important;}";
                    cssStyle += " .modal .modal-footer {background-color: " + modalfooterbgcolor + "!important;}";

                    cssStyle += " .modal .btn.btn-default {background-color: " + modalfootersecbtnbgcolor + "!important; border-color: " + modalfootersecbtnbordercolor + "!important; color: " + modalfootersecbtncolor + "!important; border-radius: " + modalfootersecbtnradius + "!important; height: " + modalfootersecbtnheight + "!important; font-size: " + modalfootersecbtnfontsize + "!important;}";
                    cssStyle += " .modal .btn.btn-default:hover {background-color: " + modalfootersecbtnbgcolorhover + "!important; border-color: " + modalfootersecbtnhover + "!important;}";
                    cssStyle += " .modal .btn.btn-default:active {background-color: " + modalfootersecbtnbgcoloractive + "!important;}";

                    cssStyle += " .modal .btn.btn-primary {background-color: " + modalfooterprimarybtnbgcolor + "!important; border-color: " + modalfooterprimarybtnbordercolor + "!important; color: " + modalfooterprimarybtncolor + "!important; border-radius: " + modalfooterprimarybtnradius + "!important; height: " + modalfooterprimarybtnheight + "!important;font-size: " + modalfooterprimarybtnfontsize + "!important;}";
                    cssStyle += " .modal .btn.btn-primary:hover {background-color: " + modalfooterprimarybtnbgcolorhover + "!important; border-color: " + modalfooterprimarybtnhover + "!important;}";
                    cssStyle += " .modal .btn.btn-primary:active {background-color: " + modalfooterprimarybtnbgcoloractive + "!important;}";

                    cssStyle += " .modal .modal-content .modal-header .close {background-color: " + modalclosebuttonbgcolor + "!important; color: " + modalclosebuttoncolor + "!important; font-size: " + modalclosebuttonfontsize + "!important; height: " + modalclosebuttonheight + "!important; width: " + modalclosebuttonwidth + "!important; border-radius: " + modalclosebuttonborderradius + "!important;}";
                    cssStyle += " .modal .modal-content .modal-header .close:hover {background-color: " + modalclosebuttonbgcolorhover + "!important;}";
                    cssStyle += " .modal .modal-content .modal-header .close:active {background-color: " + modalclosebuttonbgcoloractive + "!important;}";

                    cssStyle += " .modal .modal-content .modal-header .close::after {color: " + modalclosebuttonaftercolor + "!important; font-size: " + modalclosebuttonafterfontsize + "!important; top: " + modalclosebuttonaftertop + "!important; right: " + modalclosebuttonafterright + "!important; background: " + modalclosebuttonafterbackground + "!important; text-shadow: " + modalclosebuttonaftertextshadow + "!important;}";
                    cssStyle += " #card-image.no-card:before {top: " + modalinputnocard + "!important;}";
                    cssStyle += " .cciframe-addresswithcountry .countrydropdown {height: " + modaladdressinputheight + "!important; line-height: " + modaladdressinputlineheight + "!important; border-color: " + modaladdressinputbordercolor + "!important;  }";
                    cssStyle += " .cciframe-addresswithcountry ul li{color: " + txtForColor + "!important;}";
                    cssStyle += " .cc-detail-address-input .select2-container.form-control{ color: " + txtForColor + "!important; font-size: " + txtFontSize + "!important;border: " + txtBorder + "!important;line-height: " + txtLineHeight
                        + "!important;text-align: " + txtAlign + "!important;padding: " + txtPadding + "!important; height: " + txtHeignt + "!important; border-top-left-radius: " + txtradiusleftnone + "!important; border-bottom-left-radius: " + txtradiusbottomnone + "!important;}";
                    cssStyle += ".cc-detail-address-input .select2-container.select2-container-active { border-color:" + txtBgColorfocus + "!important;}";
                    cssStyle += ".cc-detail-address-input .select2-container.form-control.input-validation-error { background-color: " + txtBgColorerror + "!important ;border-color: " + txtBordererror + "!important;}";
                    cssStyle += ".cciframe-countryselectoption { bottom: " + cciframecountryselectoption + "!important;}";
                    cssStyle += ".shoppingcart .verify-address-popup .modal-content .modal-footer button.btn.btn-primary { background-color: " + modalfooterprimarybtnbgcolor + "!important; border - color: " + modalfooterprimarybtnbordercolor + "!important; color: " + modalfooterprimarybtncolor + "!important; border - radius: " + modalfooterprimarybtnradius + "!important; height: " + modalfooterprimarybtnheight + "!important; font - size: " + modalfooterprimarybtnfontsize + "!important; } ";
                    cssStyle += ".shoppingcart .verify-address-popup .modal-content .modal-footer button.btn.btn-primary:hover {background-color: " + modalfooterprimarybtnbgcolorhover + "!important; border-color: " + modalfooterprimarybtnhover + "!important;}";
                    cssStyle += ".shoppingcart .verify-address-popup .modal-content .modal-footer button.btn.btn-primary:active {background-color: " + modalfooterprimarybtnbgcoloractive + "!important;}";
                    cssStyle += ".shoppingcart .verify-address-popup .modal-content .modal-footer .btn.btn-default:hover {background-color: " + modalfootersecbtnbgcolorhover + "!important; border-color: " + modalfootersecbtnhover + "!important;}";
                    cssStyle += ".form-control:focus { border-color:" + txtBgColorfocus + "!important;}";
                    cssStyle += ".select2-focused { border-color:" + txtBgColorfocus + "!important;}";
                } catch (e) {

                }

            }

            return cssStyle;
        },
        _getHTML: function (iframetype) {
            if (iframetype == 10 || iframetype == 12) {
                return '<html><head><title></title> <style> ::-webkit-input-placeholder{color:#545554!important;opacity:.5!important}:-moz-placeholder{color:#545554!important;opacity:.5!important}::-moz-placeholder{color:#545554!important;opacity:.5!important}:-ms-input-placeholder{color:#545554!important;opacity:.5!important} .creditcard-width-temp { padding: 0px; margin: 0px; list-style: none; width: auto; float: left; } .marginleft175 { margin-left: 170px; } .creditcard-width-temp li input[type="text"], .creditcard-width-temp li input[type="password"] { width: 100%; } .creditcard-width-temp * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } .creditcard-width-temp li { width: 100%; margin-bottom: 15px; padding-left: 5px; padding-right: 5px; float: left; position: relative; } .creditcard-width-temp li input.inputbox-type1 { font-size: 15px; color: #545554 !important; height: 38px; line-height: 1.42857; padding: 6px 8px; border: 1px solid #959494; border-radius: 4px; } .creditcard-width-temp li.col-width50per { width: 50%; } .creditcard-width-temp li.col-width40per { width: 40%; } .creditcard-width-temp li.col-width20per { width: 20%; } .creditcard-width-temp li.input-cardtype input { padding-left: 50px !important;  } .marginbottom15.busProfile dd { margin-bottom: 15px !important; } .creditcard-width-temp li.input-cardtype [type="text"][disabled] { padding-left: 50px !important; /*background:transparent!important;*/ } #cardimage1:before { content: ""; position: absolute; background-position: 0 0; background-repeat: no-repeat; background-size: 32px auto; left: 13px; top: 9px; z-index: 5; width: 32px; height: 25px; } #cardimage1.no-card:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/no-card-img.png); } #cardimage1.visa:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/visa-card-img01.png); } #cardimage1.mastercard:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/master-card-img01.png); } #cardimage1.americanexpress:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/american-card-img01.png); } #cardimage1.discover:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/discover-img01.png); } .creditcard-label-text { float: left; width: 175px; margin-top: 25px; } .creditcard-label-text ul { padding: 0px; margin: 0px; list-style: none; } .creditcard-label-text ul li label { font-size: 15px; margin-right: 0px; padding-top: 11px; } .creditcard-label-text li { width: 100%; margin-bottom: 15px; padding-left: 5px; padding-right: 5px; min-height: 38px; float: left; position: relative; }  </style></head><body class="modal-body"> <ul class="creditcard-width-temp list-inline cc-detail cc-lifull-width clearfix"> <li id="cardimage1" class="input-cardtype no-card"> <input type="text" id="temptxtCCNo" class="inputbox-type1 form-control"  placeholder="Card Number"  /> </li> <li class="col-width50per "> <input type="text" id="temptxtMonthYear" class="inputbox-type1 form-control" placeholder="MM/YY"/> </li> <li class="col-width50per "> <input type="password" id="temptxtSecurityCode" class="inputbox-type1 form-control" placeholder="CVV" /> </li> <li class="col-width40per "> <input type="text" id="temptxtFirstName" class="inputbox-type1 form-control" placeholder="First Name"/> </li> <li class="col-width20per "> <input type="text" id="temptxtMiddleName"  placeholder="MI" class="inputbox-type1 form-control" /> </li> <li class="col-width40per"> <input type="text" id="temptxtLastName" class="inputbox-type1 form-control" placeholder="Last Name" /> </li> </ul></body></html>';
            }
            else {
                return '<html><head><title></title> <style> ::-webkit-input-placeholder{color:#545554!important;opacity:.5!important}:-moz-placeholder{color:#545554!important;opacity:.5!important}::-moz-placeholder{color:#545554!important;opacity:.5!important}:-ms-input-placeholder{color:#545554!important;opacity:.5!important} .creditcard-width-temp { padding: 0px; margin: 0px; list-style: none; width: auto; float: left; } .marginleft175 { margin-left: 170px; } .creditcard-width-temp li input[type="text"], .creditcard-width-temp li input[type="password"] { width: 100%; } .creditcard-width-temp * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } .creditcard-width-temp li { width: 100%; margin-bottom: 15px; padding-left: 5px; padding-right: 5px; float: left; position: relative; } .creditcard-width-temp li input.inputbox-type1 { font-size: 15px; color: #545554 !important; height: 38px; line-height: 1.42857; padding: 6px 8px; border: 1px solid #959494; border-radius: 4px; } .creditcard-width-temp li.col-width50per { width: 50%; } .creditcard-width-temp li.col-width40per { width: 40%; } .creditcard-width-temp li.col-width20per { width: 20%; } .creditcard-width-temp li.input-cardtype input { padding-left: 50px !important;  } .marginbottom15.busProfile dd { margin-bottom: 15px !important; } .creditcard-width-temp li.input-cardtype [type="text"][disabled] { padding-left: 50px !important; /*background:transparent!important;*/ } #cardimage1:before { content: ""; position: absolute; background-position: 0 0; background-repeat: no-repeat; background-size: 32px auto; left: 13px; top: 9px; z-index: 5; width: 32px; height: 25px; } #cardimage1.no-card:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/no-card-img.png); } #cardimage1.visa:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/visa-card-img01.png); } #cardimage1.mastercard:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/master-card-img01.png); } #cardimage1.americanexpress:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/american-card-img01.png); } #cardimage1.discover:before { background-image: url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/discover-img01.png); } .creditcard-label-text { float: left; width: 175px; margin-top: 25px; } .creditcard-label-text ul { padding: 0px; margin: 0px; list-style: none; } .creditcard-label-text ul li label { font-size: 15px; margin-right: 0px; padding-top: 11px; } .creditcard-label-text li { width: 100%; margin-bottom: 15px; padding-left: 5px; padding-right: 5px; min-height: 38px; float: left; position: relative; }  </style></head><body class="modal-body"> <ul class="creditcard-width-temp list-inline cc-detail cc-lifull-width clearfix"> <li id="cardimage1" class="input-cardtype no-card"> <input type="text" id="temptxtCCNo" class="inputbox-type1 form-control"  placeholder="Card Number"  /> </li> <li class="col-width40per "> <input type="text" id="temptxtMonthYear" class="inputbox-type1 form-control" placeholder="MM/YY"/> </li> <li class="col-width20per "> <input type="password" id="temptxtSecurityCode" class="inputbox-type1 form-control" placeholder="CVV" /> </li><li class="col-width40per "> <input type="text" id="temptxtZipCode" class="inputbox-type1 form-control" placeholder="Billing Zip/Postal code" /> </li> <li class="col-width40per "> <input type="text" id="temptxtFirstName" class="inputbox-type1 form-control" placeholder="First Name"/> </li> <li class="col-width20per "> <input type="text" id="temptxtMiddleName"  placeholder="MI" class="inputbox-type1 form-control" /> </li> <li class="col-width40per"> <input type="text" id="temptxtLastName" class="inputbox-type1 form-control" placeholder="Last Name" /> </li> </ul></body></html>'
            }
        },

        getMerchantReport: function (contentContainer, url, height, width, iswebview) {
            this.modal = false;
            this.height = height;
            this.width = width;
            this.iswebview = iswebview;
            this.contentContainer = contentContainer;
            var result = { data: { url: url }, custom_code: 1000 };
            this._callCreditCardSuccess(result);
        },

        generateStripeRadarSession: function (countryId, isLiveWebsite, ipAddress, apiKey) {
            try {
                if (parseInt(countryId) > 1) {
                    if ((typeof localStorage === 'object') && typeof (localStorage["StripeStorageObject"]) != "undefined") {
                        var StripeStorageObject = JSON.parse(localStorage["StripeStorageObject"])
                        if (StripeStorageObject != null && typeof (StripeStorageObject) != 'undefined') {
                            var startDate = new Date(StripeStorageObject.CreateDate);
                            var endDate = new Date();
                            var seconds = (endDate.getTime() - startDate.getTime()) / 1000;
                            if (StripeStorageObject.ipAddress == ipAddress
                                && seconds <= 14400) {
                                vui.stripeRadarSession = StripeStorageObject.stripeRadarSessionId;
                                return;
                            }
                        }
                    }


                    if (typeof (apiKey) != 'undefined') {
                        setTimeout(function () {
                            Stripe(apiKey, { canCreateRadarSession: true }).createRadarSession().then(function (result) {
                                if (result.error) {
                                    vui.stripeRadarSession = "striperadarerror:" + result.error;
                                    console.error(result.error);
                                } else {
                                    vui.stripeRadarSession = result.radarSession.id;
                                    if (typeof localStorage === 'object') {
                                        var StripeStorageObject = {};
                                        StripeStorageObject.CreateDate = new Date();
                                        StripeStorageObject.ipAddress = ipAddress;
                                        StripeStorageObject.stripeRadarSessionId = result.radarSession.id;
                                        localStorage.removeItem("StripeStorageObject");
                                        localStorage["StripeStorageObject"] = JSON.stringify(StripeStorageObject);
                                    }
                                }
                            })
                        }, 3000);
                    }
                }
            } catch (ex) { }
        },
    };
})();

$(window).on('resize', function () {
    if (vui.frame != null)
        vui.frame.zenswipe.getSize();
});

GetHTMLDummyFrame = function (iframetype) {
    var nonUSDummyFrame = '<html> <head> <title></title> <style>::-webkit-input-placeholder{color:#545554!important;opacity:.5!important}:-moz-placeholder{color:#545554!important;opacity:.5!important}::-moz-placeholder{color:#545554!important;opacity:.5!important}:-ms-input-placeholder{color:#545554!important;opacity:.5!important}.creditcard-width-temp{padding:0;margin:0;list-style:none;width:auto;float:left}.marginleft175{margin-left:170px}.creditcard-width-temp li input[type=password],.creditcard-width-temp li input[type=text]{width:100%}.creditcard-width-temp *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.creditcard-width-temp li{width:100%;margin-bottom:15px;padding-left:5px;padding-right:5px;float:left;position:relative}.creditcard-width-temp li input.inputbox-type1{font-size:15px;color:#545554!important;height:38px;line-height:1.42857;padding:6px 8px;border:1px solid #959494;border-radius:4px;width:100%}.creditcard-width-temp li.col-width50per{width:50%}.creditcard-width-temp li.col-width40per{width:40%}.creditcard-width-temp li.col-width20per{width:20%}.creditcard-width-temp li.input-cardtype input{padding-left:50px!important}.marginbottom15.busProfile dd{margin-bottom:15px!important}.creditcard-width-temp li.input-cardtype [type=text][disabled]{padding-left:50px!important}.creditcard-width-temp #cardimage1:before{content:"";position:absolute;background-position:0 0;background-repeat:no-repeat;background-size:32px auto;left:13px;top:9px;z-index:5;width:32px;height:25px}.creditcard-width-temp #cardimage1.no-card:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/no-card-img.png)}.creditcard-width-temp #cardimage1.visa:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/visa-card-img01.png)}.creditcard-width-temp #cardimage1.mastercard:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/master-card-img01.png)}.creditcard-width-temp #cardimage1.americanexpress:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/american-card-img01.png)}.creditcard-width-temp #cardimage1.discover:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/discover-img01.png)}.creditcard-width-temp .creditcard-label-text{float:left;width:175px;margin-top:25px}.creditcard-width-temp .creditcard-label-text ul{padding:0;margin:0;list-style:none}.creditcard-width-temp .creditcard-label-text ul li label{font-size:15px;margin-right:0;padding-top:11px}.creditcard-width-temp .creditcard-label-text li{width:100%;margin-bottom:15px;padding-left:5px;padding-right:5px;min-height:38px;float:left;position:relative}.creditcard-width-temp.marchent-signup-popup .modal-header{padding:0}.creditcard-width-temp.marchent-signup-popup .modal-header h4.modal-title{padding:0 0 8px 0;margin:0;color:#333;font-weight:500}.creditcard-width-temp .cc-detail.cc-lifull-width li.cc-detail-input{width:33.333333%;margin:0}.creditcard-width-temp ul.list-inline{margin:0 -5px}.creditcard-width-temp ul.list-inline li>label{clear:both;padding-top:16px;font-size:18px;line-height:24px;display:block;color:#000;padding-bottom:8px}.creditcard-width-temp .addresswithcountry{position:relative;z-index:3}.creditcard-width-temp .cc-detail-address-input{padding-left:65px;box-sizing:border-box}.creditcard-width-temp .cc-detail.cc-lifull-width li .form-control{padding-right:6px;padding-left:6px}.select2-container-multi .select2-choices{min-height:22px;width:100%}.select2-container-multi .select2-choices .select2-search-field{margin:0;padding:0;white-space:nowrap;width:100%}.creditcard-width-temp .secured-by{display:block;text-align:right;float:right;margin-top:16px}.creditcard-width-temp .secured-by p{margin:0;font-size:12px;line-height:16px;color:#333;font-weight:400}.creditcard-width-temp .secured-by p span{padding-right:5px;display:inline-block}.creditcard-width-temp .secured-by p span::before{content:"";width:17px;height:17px;background-repeat:no-repeat;background-position:left center;background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/look.svg);display:inline-block;background-size:16px;position:relative;top:3px;left:-4px}.creditcard-width-temp ul.list-inline li>label{margin:0}.creditcard-width-temp .addresswithcountry{position:relative;z-index:3}.creditcard-width-temp .addresswithcountry .countrydropdown{background-position:59px center!important;background-size:25px auto!important;background-repeat:no-repeat;border:1px solid #ccc!important;border-radius:2px 0 0 2px;float:left;position:absolute;left:0;top:0;width:74px;margin:0;cursor:pointer;line-height:40px}.creditcard-width-temp .addresswithcountry .countryselectoption{background-color:#fff;position:absolute;left:0;top:39px;list-style:none;margin:0;padding:0;border:1px solid #ccc;width:213px;border-radius:2px;z-index:-2;border-top-right-radius:0;border-top-left-radius:0}.creditcard-width-temp .form-control{background-color:#fff;background-repeat:no-repeat;border:1px solid #ccc;border-radius:2px;box-shadow:none;color:#333;display:block;font-size:15px;height:40px;line-height:1.42857;padding:6px 12px;width:100%;font-weight:400}body .select2-container-multi .select2-choices .select2-search-field input{font-size:15px;line-height:26px}.select2-container-multi .select2-choices .select2-search-field input{color:#545554}.creditcard-width-temp .secured-by p span::before{content:"";width:17px;height:17px;background-repeat:no-repeat;background-position:left center;background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/look.svg);display:inline-block;background-size:16px;position:relative;top:3px;left:-4px}.creditcard-width-temp #card-image.no-card:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/Icon.png)}.creditcard-width-temp #card-image.visa:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/visa-card-img01.png)}.creditcard-width-temp #card-image:before{content:"";position:absolute;background-position:left center;background-repeat:no-repeat;background-size:21px auto;left:13px;top:13px;z-index:5;width:21px;height:18px}.creditcard-width-temp .form-control.inputtransparent{padding-left:30px!important}.creditcard-width-temp ul.list-inline li input.form-control{border-color:#cdcdcd;padding-top:10px;padding-bottom:6px;line-height:22px}.marchent-signup-popup ul li{margin-bottom:8px;float:none}.marchent-signup-popup ul{display:flex;flex-wrap:wrap}.marchent-signup-popup ul li label{font-weight:500}#card-image.mastercard:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/master-card-img01.png)}#card-image.amex:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/american-card-img01.png)}#card-image.discover:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/discover-img01.png)}.addresswithcountry .countrydropdown .selectedcountry.us-f:before{content:""!important}.creditcard-width-temp .modal-body{padding:0}#creditcardiframe_checkoutcart.payment-iframe{margin:0}#creditcardiframe_checkoutccaddress.payment-iframe{margin:0}#creditcardiframe_checkoutcart #creditcardiframe_checkoutccaddress .modal-body .addresswithcountry{margin:0}#creditcardiframe_checkoutcart.payment-iframe{margin:0}#creditcardiframe_checkoutccaddress.payment-iframe{margin:0}#creditcardiframe_checkoutcart #creditcardiframe_checkoutccaddress .modal-body .addresswithcountry{margin:0}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.aus-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/aus-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.canada-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/canada-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.uk-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/uk-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.us-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/us-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.aus-f,.creditcard-width-temp .addresswithcountry .countryselectoptionli.aus-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/aus-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.canada-f,.creditcard-width-temp .addresswithcountry.countryselectoption li.canada-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/canada-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.uk-f,.creditcard-width-temp .addresswithcountry .countryselectoptionli.uk-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/uk-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.us-f,.creditcard-width-temp .addresswithcountry .countryselectoptionli.us-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/us-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry{background-repeat:no-repeat;background-position:8px center;background-size:30px 22px;height:100%;width:100%}.creditcard-width-temp .addresswithcountry .countryselectoption li{background-repeat:no-repeat;background-size:30px 22px;background-position:8px center;font-size:16px;line-height:36px;padding-left:50px;cursor:pointer;background-repeat:no-repeat}.creditcard-width-temp .addresswithcountry .countrydropdown:after{width:25px}.creditcard-width-temp .addresswithcountry .countryselectoption{bottom:39px;top:inherit}.marchent-signup-popup.creditcard-width-temp{padding-bottom:90px;z-index:0;position:relative}.mobPro-htmldesign .ffsharinCCgonline .w-tabs.fullwidth-element .w-form .payment-iframe .addresswithcountry{margin:0}.mobPro-htmldesign .creditcard-width-temp ul.list-inline li input.form-control{height:auto;padding-top:10px;padding-bottom:10px;line-height:18px;border-radius:3px}.creditcard-width-temp #card-image:before{top:11px!important}.mobPro-htmldesign .creditcard-width-temp ul.list-inline li input.form-control.inputtransparent{padding-left:35px!important}.mobPro-htmldesign .creditcard-width-temp .addresswithcountry .countryselectoption{top:inherit}.creditcard-width-temp .secured-by.creditcard-width-temp img{top:3px;position:relative}@media screen and (max-width:767px){#dvccframeforfreecard .addresswithcountry .cc-detail-address-input input.inputbox-type1.form-control.preventcopy {height: 48px;}.mobPro-htmldesign .creditcard-width-temp ul.list-inline li input.form-control{padding-top:14px;padding-bottom:14px;font-size:16px}.creditcard-width-temp #card-image:before{top:15px!important}.mobPro-htmldesign .creditcard-width-temp .addresswithcountry .countrydropdown{height:48px}.mobPro-htmldesign .creditcard-width-temp .cc-detail.cc-lifull-width li .form-control{height:48px}body.mobPro-htmldesign .creditcard-width-temp .select2-container-multi .select2-choices .select2-search-field input{font-size:16px;line-height:36px}.mobPro-htmldesign .creditcard-width-temp .addresswithcountry .countryselectoption{top:inherit;bottom:47px}.creditcard-width-temp .addresswithcountry .countrydropdown:after{top:5px}}#dibBusinessSteps .secured-by.creditcard-width-temp img{top:-2px!important}#ctl00_ctl00_VagaroContentPlaceHolder_nestedPlaceHolder_divPaymentInfo .creditcard-width-temp{width:100%}#Book247CCDetails.payment-iframe{margin:0}#Book247CCAddress.payment-iframe{margin:0}#dvccframeforfreecard .modal-header{margin-bottom:-15px;margin-left:5px}#dvccframeforfreecard .modal-body{margin-left:-15px}.late-payment-parent .mon-pay-info-right .marchent-signup-popup.creditcard-width-temp{padding:0 9px;box-sizing:border-box}.late-payment-parent .creditcard-width-temp .addresswithcountry .cc-detail-address-input input.inputbox-type1{margin-left:73px;border-top-left-radius:0;border-bottom-left-radius:0;width:calc(100% - 73px)}.late-payment-parent .creditcard-width-temp p{padding:0 5px}.late-payment-parent .creditcard-width-temp li input.inputbox-type1{border:1px solid #ccc;height:40px;font-size:15px}.late-payment-parent .creditcard-width-temp li#card-image:before{top:12px!important}.creditcard-width-temp li input.inputbox-type1{height:40px}.creditcard-width-temp ul.list-inline li input.form-control{padding-top:8px;padding-bottom:8px}#AddCardDetails.modal-dialog #card-image:before{top:12px}#divEmpCCDetails .marchent-signup-popup .creditcard-width-temp{margin-left:-25px}#divEmpCCDetails .modal-title{margin-left:-18px}</style> </head> <body class="modal-body"> <div class="marchent-signup-popup creditcard-width-temp"> <div class="modal-header"> <h4 class="modal-title">Credit Card</h4> </div><div class="modal-body clearfix"> <div id="tabs-container"> <ul class="creditcard-width-temp list-inline cc-detail cc-lifull-width clearfix"> <li class="full"> <input type="text" id="temptxtNameOnCard" name="Name" class="inputbox-type1 form-control preventcopy" placeholder="Name on Card"/> </li><li id="card-image" class="full no-card"> <input type="tel" id="temptxtCCNo" class="inputbox-type1 form-control preventcopy creditcardnumber inputtransparent" placeholder="1234 1234 1234 1234"/> </li><li class="cc-detail-input"> <input type="text" id="temptxtMonthYear" name="date" class="inputbox-type1 form-control preventcopy" placeholder="Expiry (MM / YY)"/> </li><li class="cc-detail-input"> <input type="text" id="temptxtSecurityCode1" name="code" class="inputbox-type1 form-control preventcopy" placeholder="Security Code"/> </li><li class="cc-detail-input"> <input type="text" id="tempBillingZip" class="inputbox-type1 form-control preventcopy" name="text" placeholder="Billing Zip"> </li></ul> <div class="secured-by creditcard-width-temp"> <p><span>Secured by</span> <img src="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/secuery-by.svg" alt="secuery-by"></p></div></div></div></div></body></html>';
    var IsNewCCIframe = (typeof ($("#hdnIsNewCCIframe").val()) != "undefined" && $("#hdnIsNewCCIframe").val() != "") ? JSON.parse($("#hdnIsNewCCIframe").val()) : false;
    if (IsNewCCIframe == false) {
        return nonUSDummyFrame;
    }
    else {
        return '<html> <head> <title></title> <style>::-webkit-input-placeholder{color:#545554!important;opacity:.5!important}:-moz-placeholder{color:#545554!important;opacity:.5!important}::-moz-placeholder{color:#545554!important;opacity:.5!important}:-ms-input-placeholder{color:#545554!important;opacity:.5!important}.creditcard-width-temp{padding:0;margin:0;list-style:none;width:auto;float:left}.marginleft175{margin-left:170px}.creditcard-width-temp li input[type=password],.creditcard-width-temp li input[type=text]{width:100%}.creditcard-width-temp *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.creditcard-width-temp li{width:100%;margin-bottom:15px;padding-left:5px;padding-right:5px;float:left;position:relative}.creditcard-width-temp li input.inputbox-type1{font-size:15px;color:#545554!important;height:38px;line-height:1.42857;padding:6px 8px;border:1px solid #959494;border-radius:4px;width:100%}.creditcard-width-temp li.col-width50per{width:50%}.creditcard-width-temp li.col-width40per{width:40%}.creditcard-width-temp li.col-width20per{width:20%}.creditcard-width-temp li.input-cardtype input{padding-left:50px!important}.marginbottom15.busProfile dd{margin-bottom:15px!important}.creditcard-width-temp li.input-cardtype [type=text][disabled]{padding-left:50px!important}.creditcard-width-temp #cardimage1:before{content:"";position:absolute;background-position:0 0;background-repeat:no-repeat;background-size:32px auto;left:13px;top:9px;z-index:5;width:32px;height:25px}.creditcard-width-temp #cardimage1.no-card:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/no-card-img.png)}.creditcard-width-temp #cardimage1.visa:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/visa-card-img01.png)}.creditcard-width-temp #cardimage1.mastercard:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/master-card-img01.png)}.creditcard-width-temp #cardimage1.americanexpress:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/american-card-img01.png)}.creditcard-width-temp #cardimage1.discover:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/discover-img01.png)}.creditcard-width-temp .creditcard-label-text{float:left;width:175px;margin-top:25px}.creditcard-width-temp .creditcard-label-text ul{padding:0;margin:0;list-style:none}.creditcard-width-temp .creditcard-label-text ul li label{font-size:15px;margin-right:0;padding-top:11px}.creditcard-width-temp .creditcard-label-text li{width:100%;margin-bottom:15px;padding-left:5px;padding-right:5px;min-height:38px;float:left;position:relative}.creditcard-width-temp.marchent-signup-popup .modal-header{padding:0}.creditcard-width-temp.marchent-signup-popup .modal-header h4.modal-title{padding:0 0 8px 0;margin:0;color:#333;font-weight:500}.creditcard-width-temp .cc-detail.cc-lifull-width li.cc-detail-input{width:50%;margin:0}.creditcard-width-temp ul.list-inline{margin:0 -5px}.creditcard-width-temp ul.list-inline li>label{clear:both;padding-top:16px;font-size:18px;line-height:24px;display:block;color:#000;padding-bottom:8px}.creditcard-width-temp .addresswithcountry{position:relative;z-index:3}.creditcard-width-temp .cc-detail.cc-lifull-width li .form-control{padding-right:6px;padding-left:6px}.creditcard-width-temp .secured-by{display:block;text-align:right;float:right;margin-top:16px}.creditcard-width-temp .secured-by p{margin:0;font-size:12px;line-height:16px;color:#333;display:flex;width:100%;justify-content:end}.creditcard-width-temp .secured-by p span{padding-right:5px;display:inline-block}.creditcard-width-temp .secured-by p span::before{content:"";width:17px;height:17px;background-repeat:no-repeat;background-position:left center;background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/look.svg);display:inline-block;background-size:16px;position:relative;top:3px;left:-4px}.creditcard-width-temp ul.list-inline li>label{margin:0}.creditcard-width-temp .addresswithcountry{position:relative;z-index:3}.creditcard-width-temp .addresswithcountry .countrydropdown{background-position:59px center!important;background-size:25px auto!important;background-repeat:no-repeat;border:1px solid #ccc!important;border-radius:2px 0 0 2px;float:left;position:absolute;left:0;top:0;width:74px;margin:0;cursor:pointer;line-height:40px}.creditcard-width-temp .addresswithcountry .countryselectoption{background-color:#fff;position:absolute;left:0;top:39px;list-style:none;margin:0;padding:0;border:1px solid #ccc;width:213px;border-radius:2px;z-index:-2;border-top-right-radius:0;border-top-left-radius:0}.creditcard-width-temp .form-control{background-color:#fff;background-repeat:no-repeat;border:1px solid #ccc;border-radius:2px;box-shadow:none;color:#333;display:block;font-size:15px;height:40px;line-height:1.42857;padding:6px 12px;width:100%;font-weight:400}.creditcard-width-temp .secured-by p span::before{content:"";width:17px;height:17px;background-repeat:no-repeat;background-position:left center;background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/look.svg);display:inline-block;background-size:16px;position:relative;top:3px;left:-4px}.creditcard-width-temp #card-image.no-card:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/Icon.png)}.creditcard-width-temp #card-image.visa:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/visa-card-img01.png)}.creditcard-width-temp #card-image:before{content:"";position:absolute;background-position:left center;background-repeat:no-repeat;background-size:21px auto;left:13px;top:13px;z-index:5;width:21px;height:18px}.creditcard-width-temp .form-control.inputtransparent{padding-left:30px!important}.creditcard-width-temp ul.list-inline li input.form-control{border-color:#cdcdcd;padding-top:10px;padding-bottom:6px;line-height:22px}.creditcard-width-temp.marchent-signup-popup ul li{margin-bottom:8px;float:none}.creditcard-width-temp.marchent-signup-popup ul{display:flex;flex-wrap:wrap}.creditcard-width-temp.marchent-signup-popup ul li label{font-weight:500}.creditcard-width-temp #card-image.mastercard:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/master-card-img01.png)}.creditcard-width-temp #card-image.amex:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/american-card-img01.png)}.creditcard-width-temp #card-image.discover:before{background-image:url(https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/discover-img01.png)}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.us-f:before{content:""!important}.creditcard-width-temp .modal-body{padding:0}#creditcardiframe_checkoutcart.payment-iframe{margin:0}#creditcardiframe_checkoutccaddress.payment-iframe{margin:0}#creditcardiframe_checkoutcart #creditcardiframe_checkoutccaddress .modal-body .addresswithcountry{margin:0}#creditcardiframe_checkoutcart.payment-iframe{margin:0}#creditcardiframe_checkoutccaddress.payment-iframe{margin:0}#creditcardiframe_checkoutcart #creditcardiframe_checkoutccaddress .modal-body .addresswithcountry{margin:0}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.aus-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/aus-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.canada-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/canada-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.uk-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/uk-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry.us-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/us-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.aus-f,.creditcard-width-temp .addresswithcountry .countryselectoptionli.aus-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/aus-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.canada-f,.creditcard-width-temp .addresswithcountry.countryselectoption li.canada-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/canada-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.uk-f,.creditcard-width-temp .addresswithcountry .countryselectoptionli.uk-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/uk-icon.png")}.creditcard-width-temp .addresswithcountry .countryselectoptionNewBilling li.us-f,.creditcard-width-temp .addresswithcountry .countryselectoptionli.us-f{background-image:url("https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com//Images/us-icon.png")}.creditcard-width-temp .addresswithcountry .countrydropdown .selectedcountry{background-repeat:no-repeat;background-position:8px center;background-size:30px 22px;height:100%;width:100%}.creditcard-width-temp .addresswithcountry .countryselectoption li{background-repeat:no-repeat;background-size:30px 22px;background-position:8px center;font-size:16px;line-height:36px;padding-left:50px;cursor:pointer;background-repeat:no-repeat}.creditcard-width-temp .addresswithcountry .countrydropdown:after{width:25px}.creditcard-width-temp .addresswithcountry .countryselectoption{bottom:39px;top:inherit}.marchent-signup-popup.creditcard-width-temp{padding-bottom:90px;z-index:0;position:relative}.mobPro-htmldesign .ffsharinCCgonline .w-tabs.fullwidth-element .w-form .payment-iframe .addresswithcountry{margin:0}.mobPro-htmldesign .creditcard-width-temp ul.list-inline li input.form-control{height:auto;padding-top:10px;padding-bottom:10px;line-height:18px;border-radius:3px}.creditcard-width-temp #card-image:before{top:11px!important}.mobPro-htmldesign .creditcard-width-temp ul.list-inline li input.form-control.inputtransparent{padding-left:35px!important}.mobPro-htmldesign .creditcard-width-temp .addresswithcountry .countryselectoption{top:inherit}.creditcard-width-temp .secured-by.creditcard-width-temp img{top:4px;position:relative}@media screen and (max-width:767px){#dvccframeforfreecard .addresswithcountry .cc-detail-address-input input.inputbox-type1.form-control.preventcopy {height: 48px;}.mobPro-htmldesign .creditcard-width-temp ul.list-inline li input.form-control{padding-top:14px;padding-bottom:14px;font-size:16px}.creditcard-width-temp #card-image:before{top:15px!important}.mobPro-htmldesign .creditcard-width-temp .addresswithcountry .countrydropdown{height:48px}.mobPro-htmldesign .creditcard-width-temp .cc-detail.cc-lifull-width li .form-control{height:48px}body.mobPro-htmldesign{font-size:16px;line-height:36px}.mobPro-htmldesign .creditcard-width-temp .addresswithcountry .countryselectoption{top:inherit;bottom:47px}.creditcard-width-temp .creditcard-width-temp .addresswithcountry .countrydropdown:after{top:5px}}#dibBusinessSteps .secured-by.creditcard-width-temp img{top:0!important}#Book247CCDetails.payment-iframe{margin:0}#Book247CCAddress.payment-iframe{margin:0}#dvccframeforfreecard .modal-header{margin-bottom:-15px;margin-left:5px}#dvccframeforfreecard .modal-body{margin-left:-15px}#ctl00_VagaroContentPlaceHolder_ddOtherCC .addresswithcountry .cc-detail-address-input input.inputbox-type1,#ddCDPaymentOptions .addresswithcountry .cc-detail-address-input input.inputbox-type1,#divCreateBusinessImport .addresswithcountry .cc-detail-address-input input.inputbox-type1,#divEmpCCDetails .addresswithcountry .cc-detail-address-input input.inputbox-type1,#divRenterCCIframe .addresswithcountry .cc-detail-address-input input.inputbox-type1,#dvDepositPopupBody .addresswithcountry .cc-detail-address-input input.inputbox-type1,#dvRentFeesCCIframe .addresswithcountry .cc-detail-address-input input.inputbox-type1,#dvccframeforfreecard .addresswithcountry .cc-detail-address-input input.inputbox-type1{margin-left:73px;position:relative;border-top-left-radius:0!important;border-bottom-left-radius:0!important;width:calc(100% - 73px);height:40px}#Book247CCDetails #Book247CCAddress .addresswithcountry .cc-detail-address-input input.inputbox-type1,#dvAddCardBlock .addresswithcountry .cc-detail-address-input input.inputbox-type1,#dvCheckoutBookingPaymentMethod .addresswithcountry .cc-detail-address-input input.inputbox-type1{margin-left:66px;position:relative;border-top-left-radius:0!important;border-bottom-left-radius:0!important;width:calc(100% - 66px);height:40px}#step3-billing .addresswithcountry .cc-detail-address-input input.inputbox-type1{margin-left:8px;position:relative;border-top-left-radius:0!important;border-bottom-left-radius:0!important;width:calc(100% - 8px);height:40px}.late-payment-parent .mon-pay-info-right .marchent-signup-popup.creditcard-width-temp{padding:0 9px;box-sizing:border-box}.late-payment-parent .creditcard-width-temp .addresswithcountry .cc-detail-address-input input.inputbox-type1{margin-left:73px;border-top-left-radius:0;border-bottom-left-radius:0;width:calc(100% - 73px)}.late-payment-parent .creditcard-width-temp p{padding:0 5px}.late-payment-parent .creditcard-width-temp li input.inputbox-type1{border:1px solid #ccc;height:40px;font-size:15px}.late-payment-parent .creditcard-width-temp li#card-image:before{top:12px!important}#AddCardDetails .addresswithcountry .cc-detail-address-input input.inputbox-type1{margin-left:74px;border-top-left-radius:0;border-bottom-left-radius:0;width:calc(100% - 74px)}.creditcard-width-temp li input.inputbox-type1{height:40px}.creditcard-width-temp ul.list-inline li input.form-control{padding-top:8px;padding-bottom:8px;font-size:15px!important}.settingWrapperHalf .settingnew-design .marchent-signup-popup ul li.full .addresswithcountry .cc-detail-address-input input.inputbox-type1.form-control{margin-left:73px;border-top-left-radius:0;border-bottom-left-radius:0;width:calc(100% - 73px)}#divEmpCCDetails .marchent-signup-popup .creditcard-width-temp{margin-left:-25px}#divEmpCCDetails .modal-title{margin-left:-18px}</style> </head> <body class=" modal-body"> <div class="marchent-signup-popup creditcard-width-temp"> <div class="modal-header"> <h4 class="modal-title">Credit Card</h4> </div><div class="modal-body clearfix"> <div id="tabs-container"> <ul class="creditcard-width-temp list-inline cc-detail cc-lifull-width clearfix"> <li class="full"> <input type="text" id="temptxtNameOnCard" name="Name" class="inputbox-type1 form-control preventcopy" placeholder="Name on Card"/> </li><li id="card-image" class="full no-card"> <input type="tel" id="temptxtCCNo" class="inputbox-type1 form-control preventcopy creditcardnumber inputtransparent" placeholder="1234 1234 1234 1234"/> </li><li class="cc-detail-input"> <input type="text" id="temptxtMonthYear" name="date" class="inputbox-type1 form-control preventcopy" placeholder="Expiry (MM / YY)"/> </li><li class="cc-detail-input"> <input type="text" id="temptxtSecurityCode1" name="code" class="inputbox-type1 form-control preventcopy" placeholder="Security Code"/> </li><li class="full"> <label>Billing Address</label> <div class="addresswithcountry"> <div class="cc-detail-country"> <div class="w-custom-dropdown countrydropdown"> <div id="mycountry" class="selectedcountry us-f"></div></div></div><div class="cc-detail-address-input"> <input type="text" class="inputbox-type1 form-control preventcopy" name="temptxtAddress" placeholder="Address1"/> </div></div></li><li class="full"> <input type="text" class="inputbox-type1 form-control preventcopy" name="text" placeholder="Address 2 (optional)"> </li></ul> <div class="secured-by creditcard-width-temp"> <p><span>Secured by</span> <img src="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/secuery-by.svg" alt="secuery-by"></p></div></div></div></div></body></html>';
    }
}


GetStyleForZSFrame = function () {
    var cssStyle = "";
    if (typeof (backGroundColor) != "undefined" && backGroundColor != "")
        cssStyle += ".popupwidth542 .modal-body { background-color:" + backGroundColor + "}";
    if ($("#hdnButtonBackColor").val() != "" && $("#hdnButtonBackColor").val() != undefined && $("#hdnButtonFontColor").val() != "" && $("#hdnButtonFontColor").val() != undefined) {
        cssStyle += ".btn-primary  { background-color: " + $("#hdnButtonBackColor").val() + "!important;border-color:" + $("#hdnButtonBackColor").val() + "!important; color : " + $("#hdnButtonFontColor").val() + "!important;}";
        cssStyle += ".btn-primary:hover { background-color: " + $("#hdnButtonHoveColor").val() + "!important;border-color:" + $("#hdnButtonHoveColor").val() + "!important;}";
        cssStyle += ".btn-default  { background-color!important:  #666666 };";
    }

    if ($("#hdnAddBusinessDummyToken").val() != undefined && $("#hdnAddBusinessDummyToken").val() != "") {
        cssStyle += ".addbusiness-right-col { min-height:738px;}";
        cssStyle += ".cc-detail.cc-lifull-width li { margin-bottom:38px;}";
        cssStyle += ".list-inline { margin-left:-5px; margin-right: 0px;}";
        cssStyle += ".modal-content { background:transparent;}";
        cssStyle += ".RadCaptcha img { margin-bottom:14px; margin-top:10px;}";
        cssStyle += ".cc-detail.cc-lifull-width li .form-control { font-size:16px; background-color : #fff;}";
        cssStyle += ".cc-detail.cc-lifull-width li .form-control { font-size:16px;}";
        cssStyle += ".cc-detail.cc-lifull-width li:nth-of-type(4n),.cc-detail.cc-lifull-width li:nth-of-type(5n),.cc-detail.cc-lifull-width li:nth-of-type(6n){margin-bottom:20px}";
    }
    return cssStyle;
}


onRequiredCallback = function () {
    if (vui.loader != null) {
        vui.loader(false);
    }

}
$(window).bind("orientationchange", function (e) {
    setTimeout(function () {
        setMerchantFrameHeight()
    }, 1000);
});
function setMerchantFrameHeight() {
    vui.frame.zenswipe.getHeight();
}

$(".settingMainWarp").on("touchend", function (e) {
    vui.frame.zenswipe.getHeight();
    //$(vui.frame).css("height", $(vui.frame).find("iframe").css("height"));    
    setTimeout(function () {
        setMerchantFrameHeight()
    }, 1000);
});
$(".settingMainWarp").on("touchstart", function (e) {
    vui.frame.zenswipe.getHeight();
    //$(vui.frame).css("height", $(vui.frame).find("iframe").css("height"));    
    setTimeout(function () {
        setMerchantFrameHeight()
    }, 1000);
});

function onResponsiveIframeCallback(res) {
    if (typeof ($('#' + vui.contentContainer) != 'undefined') &&
        typeof ($('#' + vui.contentContainer).find("#iFrame_dvccframe")) != 'undefined') {
        $('#' + vui.contentContainer).find('#iFrame_' + vui.contentContainer).height(res.VerifyAddressHeight);
    }
}

function FailedCapture3DSecurePopup() {
    if (typeof swal == "undefined") {
        if (typeof SetErrorDisplayMessageReport != "undefined" && $.isFunction(SetErrorDisplayMessageReport)) {
            SetErrorDisplayMessageReport('0', "Your authentication is failed. please try again!", '');
        }
    } else {
        swal({
            title: "Your authentication is failed. please try again!", text: "", type: "error",
            showCancelButton: false, closeOnConfirm: true, confirmButtonText: "OK", html: true
        }, function (isConfirm) {

        });
    }
}

function createCapture3DSecurePopup() {
    if ($("body").find("#frame3d_cardintent").length <= 0) {
        var $popup = "<div class='zenswipe-payment-frame' id='frame3d_cardintent'>" +
            "<div class='zenswipe-payment-container'>" +
            "<div  class='zenswipe-payment-inner'>" +
            "<div class='zen-close-btn'>" +
            "<img src='https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/popup-close-img.png' onclick='_cardIntendent.CloseCardIntendentInfo(false);' style='cursor: pointer;'>" +
            "</div>" +
            "<div id='divframe3d_cardintent' class='zenswipe-iframe-wrapper'>" +
            "</div > </div ></div ></div > ";
        $("body").append($popup);
    }
    return true;
}

(function ($, w, d) {
    _cardIntendent = {
        Model: {
            IntendentInfo: null,
        },
        Controls: {
            frame3d_cardintent: "#frame3d_cardintent",
            divframe3d_cardintent: "#divframe3d_cardintent",
            zenswipepaymentframe: ".zenswipe-payment-frame",
        },
        LoadCardIntendentInfo: function (PageInfo) {
            _cardIntendent.Model.IntendentInfo = PageInfo;
            var paymentIntentURL = '<iframe id="cardIntentInfo" src="' + PageInfo.PaymentIntentURL + '" frameborder="0" scrolling="yes"   ></iframe>';
            $(_cardIntendent.Controls.divframe3d_cardintent).html("");
            var popupdivids = $(_cardIntendent.Controls.frame3d_cardintent);
            $(_cardIntendent.Controls.divframe3d_cardintent, popupdivids).html(paymentIntentURL);
            $(_cardIntendent.Controls.divframe3d_cardintent, popupdivids).animate({ scrollTop: 0 }, 1000);
            $(_cardIntendent.Controls.frame3d_cardintent).show();
            $(_cardIntendent.Controls.zenswipepaymentframe).addClass('showpopup');
            ShowLoader(false);
        },
        LoadCardCaptureIntendentInfo: function (PageInfo) {
            createCapture3DSecurePopup();
            _cardIntendent.LoadCardIntendentInfo(PageInfo);
        },
        CloseCardIntendentInfo: function (isSuccess) {
            if (_cardIntendent.Model.IntendentInfo != null) {
                var intentInfo = _cardIntendent.Model.IntendentInfo;
                $(_cardIntendent.Controls.frame3d_cardintent).hide();
                $(_cardIntendent.Controls.zenswipepaymentframe).removeClass('showpopup');
                $(_cardIntendent.Controls.divframe3d_cardintent).html("");
                if (isSuccess == true) {
                    intentInfo.SuccessCallBack(intentInfo.SuccessCallBackResponse);
                } else {
                    intentInfo.FailedCallback(intentInfo.FailedCallBackResponse);
                }
            }
        },
        CloseCardIntendentInfoFromPayment: function (Response) {
            if (typeof Response != 'undefined' && Response != null && typeof Response.PaymentIntentId != "undefined" && Response.PaymentIntentId != null) {
                if (_cardIntendent.Model.IntendentInfo != null) {
                    intentInfo = _cardIntendent.Model.IntendentInfo;
                }
                if (typeof intentInfo != 'undefined' && intentInfo != null && intentInfo.Type != 1) {
                    $(_cardIntendent.Controls.frame3d_cardintent).hide();
                    $(_cardIntendent.Controls.zenswipepaymentframe).removeClass('showpopup');
                    $(_cardIntendent.Controls.divframe3d_cardintent).html("");
                }
                if (Response.IsSuccess == true) {
                    if (intentInfo.SuccessCallBackResponse != 'undefined' && intentInfo.SuccessCallBackResponse != null) {
                        intentInfo.SuccessCallBackResponse.PaymentIntentResponse = Response;
                    }
                    else {
                        intentInfo.SuccessCallBackResponse = { PaymentIntentRespons: null };
                        intentInfo.SuccessCallBackResponse.PaymentIntentResponse = Response;
                    }
                    intentInfo.SuccessCallBack(intentInfo.SuccessCallBackResponse);
                }
                else {

                    if (intentInfo.FailedCallBackResponse != 'undefined' && intentInfo.FailedCallBackResponse != null) {
                        intentInfo.FailedCallBackResponse.PaymentIntentResponse = Response;
                    }
                    else {
                        intentInfo.FailedCallBackResponse = { PaymentIntentRespons: null };
                        intentInfo.FailedCallBackResponse.PaymentIntentResponse = Response;
                    }
                    intentInfo.FailedCallback(intentInfo.FailedCallBackResponse);
                }
            }
        }
    }
}(jQuery, window, document));;
// JavaScript source code
var AppActionEnum = {
    ServiceInProgress: 20,
    Show: 19,
    Accept: 17,
    Confirm: 1,
    ConfirmFromCalendar: 18,
    Cancel: 3,
    CancelRecurringApp: 10,
    CancelClass: 21,
    CancelRecurringClass: 22,
    NoShow: 15,
    Deny: 4,
    DenyRecurringAPP: 14,
    Delete: 5,
    DeleteRecurringApp: 6,
    DeletePersonaloff: 12,
    DeleteClass: 40,
    DeleteRecurringClass: 41,
    ReadyToStart: 62, //Covid 19 Check in Badge Project, Added By Rohit Sadhu on 2020-May-30 // RS_20200530
    ReadyToStartClass: 63 //Covid 19 Check in Badge Project, Added By Rohit Sadhu on 2020-Jun-01 // RS_20200601
};

var AppStatusEnum = {
    ServiceInProgress: "4",
    Show: "2",
    //accept 1 bcz in js assign accept status 1
    Accept: "1",
    confirm: '11',
    //confirmTodayall: '12',//not in use
    Cancel: "6",
    CancelClass: "21",
    NoShow: "15",
    Delete: "5",
    Deny: "14",  // 14 bcz already 4 is assign to ServiceInProgress
    DeletePersonaloff: "12",
    DeleteClass: "40",
    ReadyToStart: "30", // 14 already used for Deny //Covid 19 Check in Badge Project, Added By Rohit Sadhu on 2020-May-30 // RS_20200530
    ReadyToStartClass: "63" //Covid 19 Check in Badge Project, Added By Rohit Sadhu on 2020-Jun-01 // RS_20200601
};

_app = {};
_app.getbaseStatusObject = function (iLoggedInUserID, device, appIdCSV, eventType, isFromMyAccount) {
    var _appointmentRequestStatusChange = {};
    
    if (isFromMyAccount) {
        _appointmentRequestStatusChange.striLoggedInUserID = iLoggedInUserID;
    } else {
        _appointmentRequestStatusChange.iLoggedInUserID = iLoggedInUserID;
    }
    _appointmentRequestStatusChange.device = device;
    _appointmentRequestStatusChange.denyComments = "";
    _appointmentRequestStatusChange.isCancelledByCustomer = false;
    _appointmentRequestStatusChange.isSendMailToCustomer = false;
    _appointmentRequestStatusChange.isFromMyAccount = false;
    _appointmentRequestStatusChange.isSeries = 0;
    _appointmentRequestStatusChange.recurringAppRuleId = 0;
    _appointmentRequestStatusChange.selectedDate = null;
    _appointmentRequestStatusChange.isWorkShop = false;
    var lstAppStatusData = new Array();
    lstAppStatusData.push({ appointmentId: appIdCSV, appType: eventType });
    _appointmentRequestStatusChange.appData = lstAppStatusData;
    if (typeof _myAccount != "undefined" && typeof _myAccount.cancelAppointmentCCCaptureDetails != "undefined" && typeof _myAccount.cancelAppointmentCCCaptureDetails.AppointmentDetails != "undefined" && typeof _myAccount.cancelAppointmentCCCaptureDetails.AppointmentDetails.AppointmentID != "undefined" && _myAccount.cancelAppointmentCCCaptureDetails.AppointmentDetails.AppointmentID > 0) {
        _appointmentRequestStatusChange.ChargeAppointmentIDs = _myAccount.cancelAppointmentCCCaptureDetails.AppointmentDetails.AppointmentID;
    }

    return _appointmentRequestStatusChange;
};

_app.deleteApp = function (appIdCSV, device, loggedInUserId, module, isSeries, recurringAppRuleId, selectedDate) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1);
    if (isSeries) {
        appObj.isSeries = isSeries;
        appObj.recurringAppRuleId = recurringAppRuleId;
        appObj.selectedDate = selectedDate;
    }
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.Delete }, module);
};
_app.serviceInProgress = function (appIdCSV, device, loggedInUserId, module, eventType) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, eventType);
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.ServiceInProgress }, module);
};
_app.denyApp = function (appIdCSV, device, loggedInUserId, module, denyComments, isSendMailToCustomer, isSeries, recurringAppRuleId, selectedDate) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV);
    appObj.denyComments = denyComments;
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    appObj.isSeries = isSeries;
    appObj.recurringAppRuleId = recurringAppRuleId;
    appObj.selectedDate = selectedDate;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.Deny }, module);
};
_app.cancelApp = function (appIdCSV, device, loggedInUserId, module, denyComments, isSendMailToCustomer, isCancelByCustomer, isFromMyAccount, isSeries, recurringAppRuleId, selectedDate, sGroupID, isRefundOnline, BusinessID, checkoutRequest) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1, isFromMyAccount);
    if (BusinessID == null || BusinessID == undefined || typeof (BusinessID) == "undefined") {
        BusinessID = 0;
    }

    appObj.denyComments = denyComments;
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    appObj.isFromMyAccount = ((isFromMyAccount == null || isFromMyAccount == undefined) ? false : isFromMyAccount);
    appObj.isCancelledByCustomer = ((isCancelByCustomer == null || isCancelByCustomer == undefined) ? false : isCancelByCustomer);

    if (appObj.isFromMyAccount) {
        appObj.strbusinessId = BusinessID;
    } else {
        appObj.businessId = BusinessID;
    }

    if (typeof checkoutRequest != "undefined" && checkoutRequest != null) {
        appObj.checkoutRequest = checkoutRequest;
    }
    if (isSeries) {
        appObj.isSeries = isSeries;
        appObj.recurringAppRuleId = recurringAppRuleId;
        appObj.selectedDate = selectedDate;
    }
    var sGroup = "";
    if (isSeries == false) {
        sGroup = (sGroupID != undefined && sGroupID != null && sGroupID != "") ? sGroupID : sGroup;
    }
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.Cancel, sGroup: sGroup }, module, isRefundOnline);
};
_app.showApp = function (appIdCSV, device, loggedInUserId, module, eventType, isSendMailToCustomer) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, eventType);
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.Show }, module);
};
////Added this function for Covid 19 Checkin Enabled Project on 30-May-2020 ----RS_20200530
_app.readytoStartApp = function (appIdCSV, device, loggedInUserId, module, eventType, isSendMailToCustomer) { //// ----RS_20200530
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, eventType);
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.ReadyToStart }, module);
};
////Added this function for Covid 19 Checkin Enabled Project on 01-Jun-2020 ----RS_20200601
_app.readytoStartClass = function (appIdCSV, device, loggedInUserId, module, eventType, isSendMailToCustomer) { //// ----RS_20200601
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, eventType);
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.ReadyToStartClass }, module);
};
////Added this function for Covid 19 Checkin by Customer Enabled Project on 06-Jun-2020 ----RS_20200606
_app.checkInAppointment = function (appIdCSV, device, loggedInUserId, module, isSendMailToCustomer, eventType, sGroupID, isWorkShop, isFromMyAccount, businessID) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, eventType, isFromMyAccount);
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    appObj.isFromMyAccount = isFromMyAccount;
    appObj.isWorkShop = isWorkShop;
    var sGroup = "";
    if ((sGroupID != undefined && sGroupID != null && sGroupID != "")) {
        sGroup = sGroupID;
    }

    if (appObj.isFromMyAccount) {
        appObj.strbusinessId = businessID;
    } else {
        if (typeof businessID != 'undefined' && parseInt(businessID) > 0) {
            appObj.businessId = businessID;
        }
    }

    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.Show, sGroup: sGroup }, module);
};
_app.noShowApp = function (appIdCSV, device, loggedInUserId, module, denyComments, isSendMailToCustomer, isSeries, recurringAppRuleId, selectedDate) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1);
    appObj.denyComments = denyComments;
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    if (isSeries) {
        appObj.isSeries = isSeries;
        appObj.recurringAppRuleId = recurringAppRuleId;
        appObj.selectedDate = selectedDate;
    }
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.NoShow }, module);
};

_app.cancelclass = function (appIdCSV, device, loggedInUserId, module, denyComments, isSendMailToCustomer, isSeries, recurringAppRuleId, selectedDate, businessId, isWorkShop, blnCancelledbyCustomer) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1);
    appObj.denyComments = denyComments;
    appObj.businessId = businessId;
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    if (isSeries) {
        appObj.isSeries = isSeries;
        appObj.recurringAppRuleId = recurringAppRuleId;
        appObj.selectedDate = selectedDate;
        appObj.isWorkShop = isWorkShop;
    }
    appObj.isCancelledByCustomer = blnCancelledbyCustomer;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.CancelClass }, module);
};
_app.deleteclass = function (appIdCSV, device, loggedInUserId, module, isSeries, recurringAppRuleId, selectedDate, businessId, isWorkShop) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1);
    appObj.businessId = businessId;
    if (isSeries) {
        appObj.isSeries = isSeries;
        appObj.recurringAppRuleId = recurringAppRuleId;
        appObj.selectedDate = selectedDate;
        appObj.isWorkShop = isWorkShop;
    }
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.DeleteClass }, module);
};
_app.acceptApp = function (appIdCSV, device, loggedInUserId, module, businessID) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1);
    appObj.businessId = businessID;
    appObj.isSendMailToCustomer = true;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.Accept }, module);
};
_app.ConfirmAppointment = function (appIdCSV, device, loggedInUserId, module, isSendMailToCustomer, eventType, sGroupID, isWorkShop, businessID, CallFromMyAccount) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, eventType, CallFromMyAccount);
    appObj.isSendMailToCustomer = isSendMailToCustomer;
    appObj.isWorkShop = isWorkShop;
    if (typeof (businessID) != "undefined" && businessID != null && isNaN(businessID) == false && (businessID * 1) > 0 && (typeof (appObj.businessId) == "undefined" || appObj.businessId == null || appObj.businessId.toString().trim() == "" || (appObj.businessId * 1) <= 0)) {
        appObj.businessId = (businessID * 1)
    }

    if (typeof (CallFromMyAccount) != "undefined" && CallFromMyAccount != null && (CallFromMyAccount) != "") {
        appObj.isFromMyAccount = CallFromMyAccount;
        appObj.strbusinessId = businessID;
    }

    var sGroup = "";
    if ((sGroupID != undefined && sGroupID != null && sGroupID != "")) {
        sGroup = sGroupID;
    }
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.confirm, sGroup: sGroup }, module);
};
_app.ConfirmApp = function (appIdCSV, device, loggedInUserId, module, isSendMailToCustomer) {
    _app.ConfirmAppointment(appIdCSV, device, loggedInUserId, module, isSendMailToCustomer, 1);
    //var appObj = _app.getbaseStatusObject(loggedInUserId, device, appIdCSV, 1);
    //appObj.isSendMailToCustomer = isSendMailToCustomer;
    //_app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.confirm }, module);
};

_app.deleteAppPersonalOff = function (editThis, appointmentId, device, loggedInUserId, module, recurringAppRuleId, selectedDate) {
    var appObj = _app.getbaseStatusObject(loggedInUserId, device, null, 1);
    appObj.editThis = editThis;
    appObj.appointmentId = appointmentId;
    appObj.recurringAppRuleId = recurringAppRuleId;
    appObj.selectedDate = selectedDate;
    _app.changeAppStatus({ appChangeData: appObj, action: AppStatusEnum.DeletePersonaloff }, module);
};

_app.changeAppStatus = function (objApp, module, isRefundOnline) {
    if (typeof BusinessID != 'undefined' && parseInt(BusinessID) > 0) {
        objApp.appChangeData.businessId = BusinessID;
    }
    else if (module == 3 && typeof (isFromNotificationPage) != "undefined" && isFromNotificationPage != null && isFromNotificationPage == 1 && typeof (window.parent.BusinessID) != 'undefined' && parseInt(window.parent.BusinessID) > 0)//from notification page
    {
        objApp.appChangeData.businessId = window.parent.BusinessID;
    }
    var callback; var error;
    var tokan = "ChangeAppointmentStatus";
    var appAction = getAction(objApp.action, objApp.appChangeData.isSeries, module);
    if (objApp != null && objApp != undefined && objApp.sGroup == undefined) {
        objApp.sGroup = "";
    }
    //Refund Offline :start set Refundhtml (Vimal Patel : 17-04-2018)
    if (appAction == AppActionEnum.Cancel || appAction == AppActionEnum.Deny || appAction == AppActionEnum.DenyRecurringAPP
        || appAction == AppActionEnum.CancelRecurringApp || appAction == AppActionEnum.CancelClass) {
        if (typeof (RefundPaidOfflineHtml) != "undefined" && RefundPaidOfflineHtml.length > 0) {
            objApp.appChangeData.refundHtml = RefundPaidOfflineHtml;
            RefundPaidOfflineHtml = '';
        }
    }
    //End
    if (module == 1) { //1=Call from Calendar , 2= Call From Customer Management , 3= My Account        
        if (appAction != null) {
            objApp.action = appAction;
            if (appAction == AppActionEnum.DeletePersonaloff) { // AppointmentImprovementPhase8 :- added by chirag patel : we use "CallSuccess_DeleteAppPONew" instead off statusChangeCallback callback because when we delete single personal off from recurring personal off then it's remove all series instead off single personal off from calendar
                callback = CallSuccess_DeleteAppPONew; // this callback function exits in calendar.aspx
            }
            else {
                callback = _app.statusChangeCallback.bind(appAction);
            }
            error = callAppFailed;
        }
    }
    else if (module == 2) { /* Customer Management */
        if (appAction != null) {
            objApp.action = appAction;
            callback = _custAppointment.callCustomerModuleSuccess;
            error = _custAppointment.callCustomerModuleFailed;
        }
    }
    else if (module == 3) {
        if (appAction != null) {
            objApp.action = appAction;

            if (typeof (isFromNotificationPage) != "undefined" && isFromNotificationPage == 1) {//from notification page
                callback = CallFordeny;
            }
            else if (appAction == AppActionEnum.Accept) {
                callback = _vagroNotification.AcceptAppointmmentSuccess;
            }
            else if (appAction == AppActionEnum.Confirm) {
                callback = CallMyAccountConfirmSuccess;
            }
            //Below Code Added for Call back Change Appointment Status AS "Show" and Hide/Show Checked In Button.Added By Rohit Sadhu on 06-Jun-2020, //RS_20200606
            else if (appAction == AppActionEnum.Show) {
                callback = CallMyAccountCheckInSuccess;
            }
            else {
                callback = function (response) {
                    CallMyAccountSuccess(response, isRefundOnline);
                };
            }

            error = function (e) { };
        }
    }
    else if (module == 4) {

        if (appAction != null) {
            if (appAction == AppActionEnum.Delete) {
                callback = _checkout.DeleteItemFromGrid;
            }
            error = function (e) { };
        }

    }
    //objApp.Token = tokan;
    //var jsondata = {};
    //jsondata.Token = tokan;
    //jsondata.Data = JSON.stringify(objApp);
    //_app.ajaxPost(JSON.stringify(jsondata), callback, error);

    var callAjax = new vagaro.ajax();
    callAjax.datamodel.Token = tokan;
    callAjax.datamodel.data = objApp;
    callAjax.datamodel.callback = callback;
    if (module == 1 && appAction == AppActionEnum.ServiceInProgress) {
        callAjax.datamodel.async = false;
    }
    callAjax.datamodel.Error = error;
    callAjax.Post();

}


_app.ajaxPost = function (strData, OnSuccess, OnFailure) {
    var strURL = "MySampleService.asmx/PageMethodsProxyJson";
    var baseURl = location.protocol + "//" + location.hostname + (location.port && ":" + location.port) + "/";
    strURL = baseURl + "WebServices/" + strURL;
    $.ajax({
        type: "POST",
        contentType: "application/json; charset=utf-8",
        url: strURL,
        data: strData,
        dataType: "json",
        success: function (res) { OnSuccess(res.d) },
        error: OnFailure
        //beforeSend: function (xhr) {
        //    xhr.setRequestHeader("K", getek());
        //    xhr.setRequestHeader("I", getei());
        //    xhr.setRequestHeader("Val", EncIV());
        //},
    });
};

function CallFordeny() {

    //if (document.getElementById("<%=hdnFromPage.ClientID %>").value == "PendingAppPopup") {
    //    LoadPendingAppointmentHTML();
    //    RefreshPendingAppointmentCount();
    //    return;
    //}

    if (typeof (HideAppointment) == "undefined") {
        if (typeof (window.parent.HideAppointment) != "undefined") {
            window.parent.HideAppointment();
        }
    }
    else {
        setTimeout("HideAppointment()", 2000);
    }
    if (window.parent._vagroNotification.HideControl != "undefined") {
        window.parent._vagroNotification.HideControl(1);
    }
    //HideAppointment();
}


//_app.changeAttendeesStatus = function (objAttendees, module) {
//    var callback; var error;
//    var tokan = "ChangeAttendeesStatus";
//    var appAction = getAction(objAttendees.action);
//    if (module == 1) { //1=Call from Calendar , 2= Call From Customer Management , 3= My Account
//        if (appAction != null) {
//            objAttendees.action = AppActionEnum.ServiceInProgress;
//            callback = statusChangeCallback;
//            error = callAppFailed;
//        }
//    }
//    else if (module == 3) {
//        if (objAttendees.action != null) {
//            switch (objAttendees.action) {
//                case AppStatusEnum.Cancel:
//                    objAttendees.action = appAction;
//                    callback = OnSuccess_CancelApp;
//                    error = function (e) { };
//                    break;
//            }
//        }
//    }
//    var callAjax = new vagaro.ajax();
//    callAjax.datamodel.Token = tokan;
//    callAjax.datamodel.data = objAttendees;
//    callAjax.datamodel.callback = callback;
//    callAjax.datamodel.Error = error;
//    callAjax.Post();
//}

//Added by Riddhi For Tooltip
_app.getToolTip = function (appStatusText, app) {

    var appAttribute = app.get_attributes();
    var eventType = appAttribute.getAttribute("eventType");
    var IsClassWs = _vgCal.Common.IsClassOrWS(eventType);
    var customerPhone = appAttribute.getAttribute("CustomerPhone");
    var ToolTip = (appStatusText != "" ? (appStatusText + " : ") : "") + app.get_start().localeFormat("ddd") + ' - ' + app.get_start().localeFormat(businessTimeFormat) +
        " - " + app.get_end().localeFormat(businessTimeFormat);

    //var cAppTypeOption = document.getElementById('<%=hdnAppTypeOption.ClientID %>').value;
    if (appAttribute.getAttribute("AppStatus") != "9") { //don't show name and phone number for personal Task
        ToolTip += ', ' + appAttribute.getAttribute("CustName");
        if (viewCustomer_app == 'True' || modifyCustomer_app == 'True') {
            if (customerPhone != '' && customerPhone != null)
                ToolTip += ': ' + customerPhone;
        }
    }

    if (IsClassWs) {
        ToolTip += appAttribute.getAttribute("SPName");
        if (GetRadScheduler().get_selectedView() != Telerik.Web.UI.SchedulerViewType.MonthView) {
            classProgressApptArray.push(Number(appAttribute.getAttribute("AppID")));
        }
    }
    app.set_toolTip(ToolTip);

}

_app.statusChangeCallback = function (result) {

    HideTodayAppointmentHTML();

    if ((result.message != "") && (result.message != null)) {
        ShowPopupAlert(result.message);
    }
    var isRemoveApp = false;
    if (this == AppActionEnum.Cancel || this == AppActionEnum.CancelClass || this == AppActionEnum.CancelRecurringClass || this == AppActionEnum.CancelRecurringApp || this == AppActionEnum.Deny || this == AppActionEnum.DenyRecurringAPP || this == AppActionEnum.DeleteRecurringApp || this == AppActionEnum.Delete || this == AppActionEnum.DeleteClass || this == AppActionEnum.DeleteRecurringClass)
        isRemoveApp = true;
    //    ShowLoadingPanal(false);
    //return;
    if (this == AppActionEnum.ServiceInProgress && result.appointmentStatusChange != null && result.appointmentStatusChange[0].ZoomURL != "") {
        window.open(result.appointmentStatusChange[0].ZoomURL, '_blank', '', '');
    }
    var sch = GetRadScheduler();
    if (result.operationStatus == 1) {
        var removeAppoList = [];
        for (var i = 0; i < result.appointmentStatusChange.length; i++) {
            sch.get_appointments().forEach(function (app) {
                var effectedApp = result.appointmentStatusChange[i]
                if (app.get_id() == effectedApp.appointmentId) {
                    if (isRemoveApp == false) {
                        /* Refresh after Deduct Membership-Package visit with No Show Service Added By Gunjan Vansjalia */
                        if (effectedApp.IsPaid == true && app._attributes.getAttribute("isPaid") == 'False' && $("#ParentAppId_" + app.get_id()).length > 0 && $("#ParentAppId_" + app.get_id()).first().length > 0) {
                            $("#ParentAppId_" + app.get_id()).first().prepend("<div  class='calender-icon prepay-paid-appt fl calendar-prepay'><i class='fa-dollar-sign font-awes-icon font-awes-text-900' data-appid='" + effectedApp.appointmentId + "' ></i> </div>");
                            app._attributes.setAttribute('isPaid', "True");
                        }
                        var isCustomerCheckin = app._attributes.getAttribute("isCustomerCheckin");//Get Customer is Checkin Or not,Sajan Patel...27/06/2020
                        ////Below Code Added for Hide/Show User Checked In Icon in Calendar Page.Added By Rohit Sadhu on 06-Jun-2020, //RS_20200606
                        if (typeof isCovidCheckInEnable != "undefined" && isCovidCheckInEnable != null && isCovidCheckInEnable == "true") {
                            var divParentAppId = $("#ParentAppId_" + app.get_id());
                            if ((effectedApp.status == 2 || effectedApp.status == 30) &&
                                app._attributes.getAttribute("AppStatus") != effectedApp.status &&
                                divParentAppId.length > 0 &&
                                divParentAppId.first().length > 0 &&
                                $(divParentAppId).find("[data-checkedappid='" + effectedApp.appointmentId + "']").length <= 0 && isCustomerCheckin == "True") {
                                divParentAppId.first().prepend("<div class='calender-icon' data-checkedappid='" + effectedApp.appointmentId + "'><span class='checked-in-icon'>&#xf4fc;<span/></div>");
                            }
                            else {
                                if ((effectedApp.status != 2 && effectedApp.status != 30) && $(divParentAppId).find("[data-checkedappid='" + effectedApp.appointmentId + "']").length > 0) {
                                    $(divParentAppId).find("[data-checkedappid='" + effectedApp.appointmentId + "']").remove();
                                }
                            }
                        }

                        /* need to change appointment status from new class property */
                        //var strCSS = GetCSSClassForAppointment(effectedApp.appointmentId, effectedApp.status, effectedApp.genderInformation, effectedApp.outCallType);
                        // str css line added by Riddhi patel
                        var strCSS = GetCSSClassForAppointment(effectedApp.status, effectedApp.genderInformation, effectedApp.outCallType);
                        app.set_cssClass(strCSS);
                        //app._attributes.setAttribute('AppStatus', AppStatus);
                        app._attributes.setAttribute('AppStatus', effectedApp.status);//set updated status : Jaydip B.
                        app._attributes.setAttribute('AppID', effectedApp.appointmentId);
                        //app._attributes.setAttribute('AppID', AppID);
                        app._id = parseInt(effectedApp.appointmentId);
                        var appStatusText = GetAppointmentStatusText(effectedApp.status);
                        _app.getToolTip(appStatusText, app);

                    }
                    else {
                        removeAppoList.push(app);
                    }
                }
            });
        }
        if (isRemoveApp) {
            for (var i = 0; i < removeAppoList.length; i++) {
                removeAppoList[i].remove();
            }
        }
        //Refund Paid Offline Ui Changes Digvijay Zala 30-04-2018
        var r_appstatus = '';
        var statusChangeMsgEnum = {
            r_cancel: 6,
            r_deny: 8,
            r_delete: 12,
            r_readytostart: 30////Added this function for Covid 19 Checkin Enabled Project on 30-May-2020 ----RS_20200530
        }
        var statusChangeMsgType = {
            r_appointment: 1,
            r_class: 2
        }
        var r_type = statusChangeMsgType.r_appointment;
        if (this == AppActionEnum.Cancel || this == AppActionEnum.CancelClass || this == AppActionEnum.CancelRecurringClass || this == AppActionEnum.CancelRecurringApp) {
            if (this == AppActionEnum.CancelClass || this == AppActionEnum.CancelRecurringClass) {
                r_type = statusChangeMsgType.r_class;
            }
            r_appstatus = statusChangeMsgEnum.r_cancel/*'cancel'*/;
        }
        else if (this == AppActionEnum.Deny || this == AppActionEnum.DenyRecurringAPP) {
            r_appstatus = statusChangeMsgEnum.r_deny/*'deny'*/;
        }
        else if (this == AppActionEnum.ReadyToStart || this == AppActionEnum.ReadyToStartClass) { ////Added this function for Covid 19 Checkin Enabled Project on 30-May-2020 ----RS_20200530
            r_appstatus = statusChangeMsgEnum.r_readytostart/*'ready to start'*/;
            if (this == AppActionEnum.ReadyToStartClass) {
                r_type = statusChangeMsgType.r_class;
            }
        }
        else if (this == AppActionEnum.DeleteRecurringApp || this == AppActionEnum.Delete || this == AppActionEnum.DeleteClass || this == AppActionEnum.DeleteRecurringClass) {
            if (this == AppActionEnum.DeleteClass || this == AppActionEnum.DeleteRecurringClass) {
                r_type = statusChangeMsgType.r_class;
            }
            r_appstatus = statusChangeMsgEnum.r_delete/*'delete'*/;
        }
        if (typeof ShowSuccessMsgChangeStatus === 'function' && (r_appstatus == statusChangeMsgEnum.r_cancel || r_appstatus == statusChangeMsgEnum.r_deny || r_appstatus == statusChangeMsgEnum.r_delete
            || r_appstatus == statusChangeMsgEnum.r_readytostart)) {////Added this function for Covid 19 Checkin Enabled Project on 30-May-2020 ----RS_20200530
            ShowSuccessMsgChangeStatus(r_appstatus, r_type);
        }
        //Refund Paid Offline Ui Changes Digvijay Zala 30-04-2018
    }
    else {
    }
    ShowLoadingPanal(false);
    $(".fa-dollar-sign").on('mouseenter', function (e) {
        if (typeof (ShowPaymentMethod) === "function") {
            ShowPaymentMethod(e, $(this), $(this).data('appid'));
            e.stopPropagation();
            e.preventDefault();
        }
    });
}
function getAction(appointmentStatus, isSeries, module) {
    switch (appointmentStatus) {
        case AppStatusEnum.ServiceInProgress:
            return AppActionEnum.ServiceInProgress;
            break;
        case AppStatusEnum.Accept:
            return AppActionEnum.Accept;
            break;
        case AppStatusEnum.confirm:
            if (module == 3) {
                return AppActionEnum.Confirm;
            }
            else {
                return AppActionEnum.ConfirmFromCalendar;
            }

            break;
        //case AppStatusEnum.confirmTodayall:
        //    return AppActionEnum.ConfirmFromCalendar;
        case AppStatusEnum.Cancel:
            return (isSeries == false) ? AppActionEnum.Cancel : AppActionEnum.CancelRecurringApp;
        case AppStatusEnum.CancelClass:
            return (isSeries == false) ? AppActionEnum.CancelClass : AppActionEnum.CancelRecurringClass;
            break;
        case AppStatusEnum.Show:
            return AppActionEnum.Show;
            break;
        case AppStatusEnum.NoShow:
            return AppActionEnum.NoShow;
            break;
        case AppStatusEnum.Deny:
            return (isSeries == false) ? AppActionEnum.Deny : AppActionEnum.DenyRecurringAPP;
        case AppStatusEnum.Delete:
            return (isSeries == false) ? AppActionEnum.Delete : AppActionEnum.DeleteRecurringApp;

            break;
        case AppStatusEnum.DeletePersonaloff:
            return AppActionEnum.DeletePersonaloff;
            break;
        case AppStatusEnum.DeleteClass:
            return (isSeries == false) ? AppActionEnum.DeleteClass : AppActionEnum.DeleteRecurringClass;
            break
        case AppStatusEnum.ReadyToStart://Covid 19 Check in Badge Project, Added By Rohit Sadhu on 2020-May-30 // RS_20200530
            return AppActionEnum.ReadyToStart;
            break
        case AppStatusEnum.ReadyToStartClass://Covid 19 Check in Badge Project, Added By Rohit Sadhu on 2020-Jun-01 // RS_20200601
            return AppActionEnum.ReadyToStartClass;
            break
    }
}

//Added by Vimal Usadadiya on 02 Sept 2020 for Project :- Vagaro Drive (Upload Customer Files)
function SetBookingValue(functionName) {
    var el = document.getElementById("iFrame_divAppointmentPopup");
    if (el == null) {
        el = document.getElementById("iFrame_divRebookAppointment");
    }

    if (el == null) {
        el = document.getElementById("iFrame_divBrowseAvailabilityPopup");
    }

    if (el != null && el.contentWindow) {
        var myfun = el.contentWindow[functionName];
        myfun(_vgVagaroDrive.model.DriveContainerName, _vgVagaroDrive.model.FormsFilesPath);
    }
}












;
/// <reference path="VagaroCore.js" />
/// <reference path="VagaroChangeApp.js" />


// JavaScript source code
var AppointmentActionEnum = {
    AddSingleAppointmentOffline: 33,
    UpdateAppointmentOffline: 34,
    WaitingToReal: 35,
    MoveAppointmentOffline: 37,
    RescheduleOnline: 38,
    EditSeriesOffline: 39,
    AddMultipleAppointmentOffline: 42,
    AddServiceFromCheckOut: 43,
    AddAppointmentSeriesOffline: 44,
    AddMultipleAppointmentSeriesOffline: 45,
    EditSingleAppointmentToRecurring: 46,
    RebookAppointment: 47,
    AddSinglePersonalOff: 48,
    AddSeriesPersonalOff: 49,
    EditSinglePersonalOff: 50,
    EditSeriesPersonalOff: 51,
    EditSinglePersonalOffFromSeries: 52,
    EditSinglePersonalOffToSeries: 53,
    AddOnlineAppointment: 54,
    AddSingleClass: 55,
    AddSeriesClass: 56,
    EditSingleClassToSeries: 57,
    EditSingleClass: 58,
    EditSeriesClass: 59,
    EditServiceFromCheckOut: 61
};
//Added By:Virendra Gohil...07-08-2018
var appServiveProvider = null;
var prevServiceProviderVal = "";
var prevServiceVal = "";
var appHistoryPopupBindId = "";

(function () {
    // global object/namespace for calendar
    _vgAddEditApp = {};

})();

(function () {
    // common function for calendar object
    _vgAddEditApp.Common = {

        model: {
            isOffline: true
        },
        PageMethodsProxyPostWihoutCoreJS: function (strData, OnSuccess, OnFailure) {
            var strURL = "MySampleService.asmx/PageMethodsProxyJson";
            var baseURl = location.protocol + "//" + location.hostname + (location.port && ":" + location.port) + "/";
            strURL = baseURl + "WebServices/" + strURL;
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: strURL,
                data: strData,
                dataType: "json",
                success: function (res) { OnSuccess(res.d) },
                error: OnFailure,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("K", getek());
                    xhr.setRequestHeader("I", getei());
                    xhr.setRequestHeader("Val", EncIV());

                    if (typeof keepAlive != 'undefined') {
                        xhr.setRequestHeader('keepAlive', keepAlive);
                    }
                    if ($('#hdnToken1').length == 1 && typeof $('#hdnToken1').val() != 'undefined') {
                        xhr.setRequestHeader('token1', $('#hdnToken1').val());
                    }
                    if ($('#hdnToken2').length == 1 && typeof $('#hdnToken2').val() != 'undefined') {
                        xhr.setRequestHeader('token2', $('#hdnToken2').val());
                    }
                    if ($('#hdnToken0').length == 1 && typeof $('#hdnToken0').val() != 'undefined') {
                        xhr.setRequestHeader('token0', $('#hdnToken0').val());
                    }
                },
            });
        },

        PageMethodsProxyPost: function (objData, token, isAjaxQue, fnSuccess, fnError) {
            var vAjax = new vagaro.ajax();
            vAjax.datamodel.Token = token;
            vAjax.datamodel.data = objData;
            vAjax.datamodel.callback = fnSuccess;
            vAjax.datamodel.Error = fnError;
            if (isAjaxQue == true) {
                vAjax.PostQue();
            }
            else {
                vAjax.Post();
            }
        },
        ShowLoader: function (flg) {
            if (flg) {
                if (this.model.isOffline == true) {
                    if (typeof ShowLoadingPanal === "function") {
                        ShowLoadingPanal(true);
                    }
                    else {
                        ShowLoadingPanel(true);
                    }
                }
            }
            else {
                if (typeof ShowLoadingPanal === "function") {
                    ShowLoadingPanal(false);
                }
                else {
                    ShowLoadingPanel(false);
                }
            }
            return this;
        },
    }
})();


(function () {

    _vgAddEditApp.AddEditApp = {
        Controls: {
            SingleAppointmentServiceProvider: "#ctl00_VagaroContentPlaceHolder_ucNewAppAjax_hdnServiceProviderID",
        },
        model: {},

        init: function (request) {
            this.model = request;
        },

        CommonVariableAssignment: function (action) {
            
            var arrAppReqData = [];
            if (Array.isArray(this.model) == false) {
                arrAppReqData.push(this.model);
            }
            else {
                arrAppReqData = this.model;
            }

            var arrAppRespData = [];
            var addonsDetails = {};
            addonsDetails.AddOnDetailsAddDelete = [];
            for (var i = 0; i <= arrAppReqData.length - 1; i++) {
                //General Properties
                var objAppRespData = {};
                if (i == 0 && typeof (arrAppReqData[i].objCardDetails) != 'undefined' && arrAppReqData[i].objCardDetails != null) {
                    objAppRespData.objCardDetails = arrAppReqData[i].objCardDetails;
                }
                else {
                    objAppRespData.objCardDetails = null;
                }
                var Type = getQueryStringData("Type");
                if (Type == "OnBoarding" || Type == "ImportOnBoarding") {
                    objAppRespData.IsOnBoarding = true;
                    objAppRespData.OnBoardingBusinessId = getQueryStringData("Bid");
                }
                objAppRespData.iLoggedInUserID = arrAppReqData[i].LoggedInUserID;
                objAppRespData.AppointmentID = arrAppReqData[i].AppointmentID;
                objAppRespData.device = arrAppReqData[i].Device;
                objAppRespData.businessID = arrAppReqData[i].BusinessID;
                objAppRespData.calendarID = arrAppReqData[i].CalendarID;
                objAppRespData.serviceProviderID = arrAppReqData[i].ServiceProviderID;
                objAppRespData.serviceID = arrAppReqData[i].ServiceID;
                objAppRespData.serviceName = arrAppReqData[i].ServiceName;
                objAppRespData.styleID = arrAppReqData[i].StyleID;
                objAppRespData.promotionID = arrAppReqData[i].PromotionID;
                objAppRespData.appType = arrAppReqData[i].AppType;
                objAppRespData.duration = arrAppReqData[i].Duration;
                objAppRespData.isFromTextMarketing = arrAppReqData[i].isFromTextMarketing;
                objAppRespData.CustomerStartTime = arrAppReqData[i].CustomerStartTime;
                objAppRespData.CustomerTimeZone = arrAppReqData[i].CustomerTimeZone;
                objAppRespData.CleanupTime = arrAppReqData[i].CleanupTime;
                objAppRespData.PreOutCallTime = arrAppReqData[i].PreOutCallTime;
                objAppRespData.PostOutCallTime = arrAppReqData[i].PostOutCallTime;
                if (action == AppointmentActionEnum.AddMultipleAppointmentOffline || action == AppointmentActionEnum.AddSingleAppointmentOffline || action == AppointmentActionEnum.AddOnlineAppointment || action == AppointmentActionEnum.RebookAppointment || action == AppointmentActionEnum.AddAppointmentSeriesOffline || action == AppointmentActionEnum.AddMultipleAppointmentSeriesOffline || action == AppointmentActionEnum.MoveAppointmentOffline) {
                    if (typeof arrAppReqData[i].DepositsPercentage != "undefined") {
                        objAppRespData.DepositsPercentage = arrAppReqData[i].DepositsPercentage; //Added DepositsPercentage for Book and Pay Deposit on Merchant Portal Project Added by JigarGoswami on 21-Jul-2020    
                    }
                    addonsDetails.AddOnDetailsAddDelete.push(_onlineCheckout.CreateOnlineServiceAddonsCollection(arrAppReqData[i].lstAddonService, arrAppReqData[i]));
                }
                if (typeof arrAppReqData[i].IsPaid === "undefined" || arrAppReqData[i].IsPaid == false) {
                    objAppRespData.pointGiven = arrAppReqData[i].PointGiven;
                    objAppRespData.pointRedeem = arrAppReqData[i].PointRedeem;
                }
                else {
                    if ((arrAppReqData[i].IsPaid == true) && (arrAppReqData[i].isPointApply == true)) {
                        objAppRespData.pointGiven = 0;
                        objAppRespData.pointRedeem = arrAppReqData[i].PointRedeem;
                    } else if (arrAppReqData[i].IsPaid == true) {
                        objAppRespData.pointGiven = arrAppReqData[i].PointGiven;
                        objAppRespData.pointRedeem = 0;
                    }

                    /*Deposits: Added by Hitesh.Chavda on 30 May 2019
                     Start:*/
                    if (typeof arrAppReqData[i].payableAmount != "undefined") {
                        objAppRespData.payableAmount = arrAppReqData[i].payableAmount;
                    }
                    if (typeof arrAppReqData[i].depositsPercentage != "undefined") {
                        objAppRespData.depositsPercentage = arrAppReqData[i].depositsPercentage;
                    }
                    if (typeof arrAppReqData[i].paidType != "undefined") {
                        objAppRespData.paidType = arrAppReqData[i].paidType;
                    }
                    //End
                }
                if (typeof arrAppReqData[i].DiscountID != "undefined") {
                    objAppRespData.discountID = arrAppReqData[i].DiscountID;//Deposits: Added by Hitesh.Chavda on 04 Jun 2019
                }
                objAppRespData.genderInformation = arrAppReqData[i].GenderInformation;
                objAppRespData.outcallType = arrAppReqData[i].OutcallType;
                if (arrAppReqData[i].OutcallAddress != undefined && arrAppReqData[i].OutcallAddress!='' && arrAppReqData[i].OutcallAddress.includes("|~|")) {
                    var OutAddress = arrAppReqData[i].OutcallAddress.split("|~|")[0];
                    objAppRespData.outcallAddress = OutAddress;
                }
                else {
                    objAppRespData.outcallAddress = arrAppReqData[i].OutcallAddress;
                }
                objAppRespData.comment = arrAppReqData[i].Comment;

                if (typeof arrAppReqData[i].IsServicePerformAtSameTime === "undefined" || arrAppReqData[i].IsServicePerformAtSameTime == "" || arrAppReqData[i].IsServicePerformAtSameTime == null) {
                    objAppRespData.isServicePerformAtSameTime = false;
                } else {
                    objAppRespData.isServicePerformAtSameTime = arrAppReqData[i].IsServicePerformAtSameTime;
                }

                if (arrAppReqData[i].isServicePerformAtSameTime == 2) { //bug fix 38402 chitrasen
                    objAppRespData.isServicePerformAtSameTime = true;
                }
                // Start For Multiple Appointment

                if (action == AppointmentActionEnum.AddMultipleAppointmentOffline || action == AppointmentActionEnum.AddMultipleAppointmentSeriesOffline) {
                    objAppRespData.isMultiAppointment = arrAppReqData[i].IsMultiAppointment;
                    objAppRespData.csvServiceID = arrAppReqData[i].csvServiceID;
                    objAppRespData.csvSPID = arrAppReqData[i].csvSPID;
                    objAppRespData.csvResourceID = arrAppReqData[i].csvResourceID;
                    objAppRespData.csvPrice = arrAppReqData[i].csvPrice;
                    objAppRespData.csvDuration = arrAppReqData[i].csvDuration;
                    objAppRespData.csvTime = arrAppReqData[i].csvTime;
                    objAppRespData.csvPointGiven = arrAppReqData[i].csvPointGiven;
                    objAppRespData.csvPointRedeem = arrAppReqData[i].csvPointRedeem;
                    objAppRespData.csvCalendarID = arrAppReqData[i].csvCalendarID;
                    objAppRespData.csvServiceName = arrAppReqData[i].csvServiceName;
                    objAppRespData.isSaveAppointment = arrAppReqData[i].isSaveAppointment;
                    objAppRespData.businessPackageID = arrAppReqData[i].BusinessPackageID;
                    objAppRespData.serviceProviderName = arrAppReqData[i].ServiceProivderName;
                }

                // End For Multiple Appointment

                if (action == AppointmentActionEnum.MoveAppointmentOffline || action == AppointmentActionEnum.RebookAppointment || action == AppointmentActionEnum.AddOnlineAppointment) {
                    objAppRespData.serviceProivderName = arrAppReqData[i].ServiceProviderName;
                    objAppRespData.BusinessPackageID = arrAppReqData[i].BusinessPackageID;  //Ticket 113036: Ticket#1017028 Move appointment available timeslot issue
                    //objAppRespData.AppointmentID = parseInt(objAppRespData.AppointmentID);
                    //objAppRespData.businessID = parseInt(objAppRespData.businessID);
                    //objAppRespData.calendarID = parseInt(objAppRespData.calendarID);
                    //objAppRespData.genderInformation = parseInt(objAppRespData.genderInformation);
                    //objAppRespData.iLoggedInUserID = parseInt(objAppRespData.iLoggedInUserID);
                    //objAppRespData.outcallType = parseInt(objAppRespData.outcallType);
                    //objAppRespData.pointGiven = parseInt(objAppRespData.pointGiven);
                    if (action == AppointmentActionEnum.AddOnlineAppointment) {
                        objAppRespData.isNewCustomer = typeof (arrAppReqData[i].isNewCustomer) != 'undefined' ? arrAppReqData[i].isNewCustomer : false;
                    }
                    if (objAppRespData.promotionID == "") {
                        objAppRespData.promotionID = 0;
                    }
                    else {
                        objAppRespData.promotionID = parseInt(objAppRespData.promotionID);
                    }

                    if (objAppRespData.styleID == "") {
                        objAppRespData.styleID = 0;
                    }

                    if (objAppRespData.appType == "") {
                        objAppRespData.appType = 0;
                    }
                    //If Prepay Service  then set value for IsPaid
                    if (arrAppReqData[i].IsPaid == true) {
                        objAppRespData.IsPaid = arrAppReqData[i].IsPaid;
                    }
                    else {
                        if (!String.isNullOrUndefineOrBlank(arrAppReqData[i].lstAddonService)) {
                            var Addons = $.grep(arrAppReqData[i].lstAddonService, function (Item) {
                                return Item.IsPaid == true;
                            });
                            if (Addons.length > 0) {
                                if (arrAppReqData[i].Amount <= 0) {
                                    objAppRespData.IsPaid = true;
                                    if (typeof arrAppReqData[i].paidType != "undefined" && arrAppReqData[i].paidType == _onlineCheckout.arrpaidType.UnPaid) {
                                        objAppRespData.paidType = Addons[0].paidType;
                                    }
                                }
                            }
                        }
                    }
                    objAppRespData.userID = parseInt(arrAppReqData[i].UserID);
                    objAppRespData.amount = arrAppReqData[i].Amount;
                    objAppRespData.totalOutCallDuration = arrAppReqData[i].OutCallTime;
                    objAppRespData.appRecurrenceRuleID = 0;
                    objAppRespData.isRecurrence = false;
                    objAppRespData.ruleEndDate = null;
                    objAppRespData.resourceID = null;
                    objAppRespData.isCheckResourceOverlap = true;
                    objAppRespData.isCheckAppointmentOverlap = true;
                    objAppRespData.apptBookingDevice = null;
                    objAppRespData.status = arrAppReqData[i].Status;
                    objAppRespData.startTime = arrAppReqData[i].StartTime;
                    objAppRespData.appSrNo = arrAppReqData[i].AppSrNo;
                    objAppRespData.originalDuration = parseInt(arrAppReqData[i].OriginalDuration);
                    objAppRespData.originalPrice = arrAppReqData[i].OriginalPrice;
                    objAppRespData.originalPointRedeem = arrAppReqData[i].OriginalPointRedeem;
                    objAppRespData.styleName = arrAppReqData[i].StyleName;
                    objAppRespData.phoneType = arrAppReqData[i].PhoneType;
                    objAppRespData.phoneNo = arrAppReqData[i].PhoneNo;
                    objAppRespData.CellCountryId = arrAppReqData[i].CellCountryId;
                    objAppRespData.DialingCode = arrAppReqData[i].DialingCode;
                    if (action == AppointmentActionEnum.RebookAppointment || action == AppointmentActionEnum.AddOnlineAppointment) {
                        objAppRespData.businessPackageID = arrAppReqData[i].BusinessPackageID;
                        objAppRespData.oldAppStartTime = arrAppReqData[i].OldAppStartTime;
                        objAppRespData.isFromCal = arrAppReqData[i].isFromCal;
                        objAppRespData.eventType = 1; //appointment

                        if (typeof arrAppReqData[i].CustomerStartTime != "undefined" && arrAppReqData[i].CustomerStartTime != null && arrAppReqData[i].CustomerStartTime != '') {
                            objAppRespData.CustomerStartTime = arrAppReqData[i].CustomerStartTime;
                        }

                        if (typeof arrAppReqData[i].CustomerTimeZone != "undefined" && arrAppReqData[i].CustomerTimeZone != null && arrAppReqData[i].CustomerTimeZone != '') {
                            objAppRespData.CustomerTimeZone = arrAppReqData[i].CustomerTimeZone;
                        }
                        if ((String.isNullOrUndefineOrBlank(arrAppReqData[i].CustomerStartTime) && String.isNullOrUndefineOrBlank(arrAppReqData[i].CustomerTimeZone)) && (String.isNullOrUndefineOrBlank($(_shopdetail.txtLiveStreamAddress).val()) || String.isNullOrUndefineOrBlank($("#hdnServiceLiveStreamSelectedVal").data("actualvalue")))) {
                            if (!String.isNullOrUndefineOrBlank(_shopdetail.BookingDetail.browserCustomerTime) && !String.isNullOrUndefineOrBlank(_shopdetail.BookingDetail.browserCustomerTimezone)) {
                                objAppRespData.CustomerStartTime = moment(arrAppReqData[0].StartTime).format("DD MMM yyyy") + " " + _shopdetail.BookingDetail.browserCustomerTime;
                                objAppRespData.CustomerTimeZone = _shopdetail.BookingDetail.browserCustomerTimezone;
                            }
                        }
                        if (typeof arrAppReqData[i].isWaitingtoreal != "undefined" && typeof arrAppReqData[i].waitlistID != "undefined") {
                            objAppRespData.isWaitingtoreal = arrAppReqData[i].isWaitingtoreal;
                            objAppRespData.waitlistID = arrAppReqData[i].waitlistID;
                        }
                    }

                }

                else {
                    objAppRespData.sIV = arrAppReqData[i].sIV;
                    objAppRespData.sKey = arrAppReqData[i].sKey;
                    objAppRespData.sValue = arrAppReqData[i].sValue;
                    objAppRespData.serviceProivderName = arrAppReqData[i].ServiceProivderName;
                    objAppRespData.userID = arrAppReqData[i].CustomerID;
                    objAppRespData.ruleStartDate = arrAppReqData[i].AppDate;
                    objAppRespData.stHours = arrAppReqData[i].StHours;
                    objAppRespData.stMins = arrAppReqData[i].StMins;
                    objAppRespData.amount = arrAppReqData[i].Price;
                    objAppRespData.processStartTime = arrAppReqData[i].ProcessStartTime;
                    objAppRespData.processDuration = arrAppReqData[i].ProcessDuration;
                    objAppRespData.processEndTime = arrAppReqData[i].ProcessEndTime;
                    objAppRespData.isAdvanceDurationChange = arrAppReqData[i].IsAdvanceDurationChange;
                    objAppRespData.totalOutCallDuration = arrAppReqData[i].TotalOutCallDuration;
                    objAppRespData.appRecurrenceRuleID = arrAppReqData[i].RuleID;
                    objAppRespData.isRecurrence = arrAppReqData[i].IsRecurrence;
                    objAppRespData.ruleEndDate = arrAppReqData[i].RuleEndDate;

                    if (action == AppointmentActionEnum.EditSeriesOffline || action == AppointmentActionEnum.AddAppointmentSeriesOffline || action == AppointmentActionEnum.AddMultipleAppointmentSeriesOffline
                        || action == AppointmentActionEnum.EditSingleAppointmentToRecurring || action == AppointmentActionEnum.AddSeriesPersonalOff || action == AppointmentActionEnum.EditSeriesPersonalOff
                        || action == AppointmentActionEnum.EditSinglePersonalOffFromSeries || action == AppointmentActionEnum.EditSinglePersonalOffToSeries
                        || action == AppointmentActionEnum.AddSeriesClass || action == AppointmentActionEnum.EditSeriesClass || action == AppointmentActionEnum.EditSingleClassToSeries
                    ) {
                        objAppRespData.ruleType = arrAppReqData[i].RuleType;
                        objAppRespData.cSVWeekDayIDs = arrAppReqData[i].CSVWeekDayIDs;
                        objAppRespData.cSVWeekDayNames = arrAppReqData[i].CSVWeekDayNames;
                        objAppRespData.weekFrequency = arrAppReqData[i].WeekFrequency;
                        objAppRespData.monthDate = arrAppReqData[i].MonthDate;
                        objAppRespData.yearDate = arrAppReqData[i].YearDate;
                        objAppRespData.yearMonth = arrAppReqData[i].YearMonth;
                        objAppRespData.recAppChangeType = arrAppReqData[i].RecAppChangeType;
                        objAppRespData.oldRuleStartDate = arrAppReqData[i].OldRuleStartDate;
                        objAppRespData.oldRuleEndDate = arrAppReqData[i].OldRuleEndDate;
                        objAppRespData.isCheckAppointmentOverlap = arrAppReqData[i].IsCheckAppointmentOverlap;
                        objAppRespData.AppDateOverlappingalert = arrAppReqData[i].AppDateOverlappingalert;
                        if (action == AppointmentActionEnum.EditSeriesClass || action == AppointmentActionEnum.EditSingleClassToSeries) {
                            objAppRespData.IsCheckAttendeeExists = arrAppReqData[i].IsCheckAttendeeExists;
                        }
                    }

                    objAppRespData.isSendMailChecked = arrAppReqData[i].isSendMailChecked;
                    objAppRespData.resourceID = arrAppReqData[i].ResourceID;
                    objAppRespData.isCheckResourceOverlap = arrAppReqData[i].IsCheckResourceOverlap;
                    objAppRespData.apptBookingDevice = arrAppReqData[i].ApptBookingDevice;
                }

                //Edit,Move Appointment 
                if (action == AppointmentActionEnum.UpdateAppointmentOffline || action == AppointmentActionEnum.EditSeriesOffline || action == AppointmentActionEnum.EditSingleAppointmentToRecurring
                    || action == AppointmentActionEnum.EditSingleClass || action == AppointmentActionEnum.EditSeriesClass || action == AppointmentActionEnum.EditSingleClassToSeries
                ) {
                    objAppRespData.editThis = arrAppReqData[i].EditThis;
                    objAppRespData.oldServiceID = arrAppReqData[i].OldServiceID;
                    objAppRespData.oldServiceName = arrAppReqData[i].OldServiceName;
                    objAppRespData.strOldAppStartTime = arrAppReqData[i].strOldAppStartTime;
                    objAppRespData.oldOutcallType = arrAppReqData[i].OldOutCallType;
                    objAppRespData.oldRuleType = arrAppReqData[i].oldRuleType;
                    objAppRespData.DepositsPercentageNew = arrAppReqData[i].DepositsPercentageNew; //Added DepositsPercentage for Book and Pay Deposit on Merchant Portal Project Added by JigarGoswami on 21-Jul-2020
                }
                else if (action == AppointmentActionEnum.MoveAppointmentOffline || action == AppointmentActionEnum.RebookAppointment || action == AppointmentActionEnum.AddOnlineAppointment) {
                    objAppRespData.editThis = -1;
                    if (action == AppointmentActionEnum.MoveAppointmentOffline) {
                        if (typeof arrAppReqData[i].DepositsPercentage != "undefined") {
                            objAppRespData.DepositsPercentageNew = arrAppReqData[i].DepositsPercentage; //Added DepositsPercentage for Book and Pay Deposit on Merchant Portal Project Added by Sajan Patel on 21-Jul-2020
                        }
                    }
                }
                else if (action == AppointmentActionEnum.AddSinglePersonalOff || action == AppointmentActionEnum.AddSeriesPersonalOff || action == AppointmentActionEnum.EditSinglePersonalOff
                    || action == AppointmentActionEnum.EditSeriesPersonalOff || action == AppointmentActionEnum.EditSinglePersonalOffFromSeries || action == AppointmentActionEnum.EditSinglePersonalOffToSeries
                ) {
                    objAppRespData.endHours = arrAppReqData[i].EndHours;
                    objAppRespData.endMins = arrAppReqData[i].EndMins;
                    objAppRespData.shopMinTimeHr = arrAppReqData[i].ShopMinTimeHr;
                    objAppRespData.shopMinTimeMin = arrAppReqData[i].ShopMinTimeMin;
                    objAppRespData.shopMaxTimeHr = arrAppReqData[i].ShopMaxTimeHr;
                    objAppRespData.shopMaxTimeMin = arrAppReqData[i].ShopMaxTimeMin;
                    objAppRespData.calMinTime = arrAppReqData[i].CalMinTime;
                    objAppRespData.calMaxTime = arrAppReqData[i].CalMaxTime;
                    objAppRespData.personalOffType = arrAppReqData[i].PersonalOffType;
                    objAppRespData.personalTypeOffText = arrAppReqData[i].PersonalTypeOffText;
                    objAppRespData.isAllowOnlineBooking = arrAppReqData[i].IsAllowOnlineBooking;
                    objAppRespData.isWholeDayOff = arrAppReqData[i].IsWholeDayOff;

                    if (arrAppReqData[i].FlagConfirmation == 0)
                        objAppRespData.isCheckAppointmentOverlap = true;
                    else
                        objAppRespData.isCheckAppointmentOverlap = false;

                }

                if (action == AppointmentActionEnum.AddSingleClass || action == AppointmentActionEnum.AddSeriesClass || action == AppointmentActionEnum.EditSingleClass
                    || action == AppointmentActionEnum.EditSeriesClass || action == AppointmentActionEnum.EditSingleClassToSeries
                ) {
                    objAppRespData.eventCapacity = arrAppReqData[i].eventCapacity;
                    objAppRespData.StreamingEventCapacity = arrAppReqData[i].StreamingEventCapacity;
                    objAppRespData.IsConvertToLiveStream = arrAppReqData[i].IsConvertToLiveStream;
                    objAppRespData.eventType = arrAppReqData[i].eventType;
                    objAppRespData.isWorkShop = arrAppReqData[i].isWorkShop;
                    objAppRespData.noOfSessions = arrAppReqData[i].noOfSessions;
                    objAppRespData.sellPrice = arrAppReqData[i].sellPrice;

                }
                //Added by Abdeli Dhankot on 13/08/2020 : For update AppointmentID in Form Response SQL 
                if (typeof _onlineCheckout != "undefined" && typeof _onlineCheckout.updateAppIdforms != "undefined" && _onlineCheckout.updateAppIdforms != null && _onlineCheckout.updateAppIdforms.length > 0) {
                    objAppRespData.lstUpdateAppIdInForm = _onlineCheckout.updateAppIdforms;
                }
                if (typeof _onlineCheckout != "undefined" && typeof _onlineCheckout.formResponseIds != "undefined" && _onlineCheckout.formResponseIds != null && _onlineCheckout.formResponseIds.length > 0) {
                    objAppRespData.lstFormResponseIds = _onlineCheckout.formResponseIds;
                }

                arrAppRespData.push(objAppRespData);
            }
            arrAppRespData[0].AddOnDetails = addonsDetails;
            return arrAppRespData;
        },

        AddSingleAppointment: function () {
            var objAppDetailforBooking = {};
            objAppDetailforBooking = this.CommonVariableAssignment(AppointmentActionEnum.AddSingleAppointmentOffline);

            var AddAppointment = {};
            AddAppointment.appAddData = objAppDetailforBooking;
            AddAppointment.action = AppointmentActionEnum.AddSingleAppointmentOffline;
            AddAppointment.calledfrom = "";
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
        },
        AddSingleAppointmentInvoice: function () {
            var objAppDetailforBooking = {};
            objAppDetailforBooking = this.CommonVariableAssignment(AppointmentActionEnum.AddSingleAppointmentOffline);

            var AddAppointment = {};
            AddAppointment.appAddData = objAppDetailforBooking;
            AddAppointment.action = AppointmentActionEnum.AddSingleAppointmentOffline;
            AddAppointment.calledfrom = "";
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, InHouseDeposit.SuccessSaveAppointmentInvoice, InHouseDeposit.CallFailSaveAppointmentInvoice);
        },

        AddEditAppointmentSuccess: function (resp) {
            if (resp.errMsg == null || resp.errMsg == "") {
                _vgAddEditApp.AddEditApp.RedirectToCheckout(resp);
            }
            else {
                //ShowLoadingPanal(false);
                _vgAddEditApp.Common.ShowLoader(false);
                enableAppBookButton();
                if (resp.errorType == 2) //appointment overlapped
                {
                    //if (confirm(resp.errMsg)) {
                    //    // ShowLoadingPanal(true);
                    //    _vgAddEditApp.Common.ShowLoader(true);

                    //    if (resp.action == AppointmentActionEnum.EditSeriesOffline) {
                    //        _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                    //        _vgAddEditApp.AddEditApp.EditAppointmentSeriesOffline();
                    //    }
                    //    else if (resp.action == AppointmentActionEnum.AddAppointmentSeriesOffline) {

                    //        if (_vgAddEditApp.AddEditApp.model.IsMultiAppointment) {
                    //            _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                    //            _vgAddEditApp.AddEditApp.AddMultipleAppointmentSeriesOffline();
                    //        }
                    //        else {
                    //            _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                    //            _vgAddEditApp.AddEditApp.AddAppointmentSeriesOffline();
                    //        }

                    //    }
                    //    else if (resp.action == AppointmentActionEnum.AddMultipleAppointmentSeriesOffline) {
                    //        _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                    //        _vgAddEditApp.AddEditApp.AddMultipleAppointmentSeriesOffline();
                    //    }
                    //    else if (resp.action == AppointmentActionEnum.EditSingleAppointmentToRecurring) {
                    //        _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                    //        _vgAddEditApp.AddEditApp.EditSingleAppointmentToRecurring();
                    //    }
                    //    //var AddAppointment = {};
                    //    //AddAppointment.appAddData = objPara;
                    //    //AddAppointment.action = 33;  //Note : Change Action According To Your Type
                    //    //_vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
                    //}

                    // Added By: Virendra Gohil...16/07/2018,Reason: Convert confirm alert to sweet alert.
                    swal({
                        title: resp.errMsg, text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes',
                        cancelButtonText: "No",
                        closeOnConfirm: true,
                        closeOnCancel: true,
                        customClass: 'sweet-alert-model booksweet-alert',
                        //showConfirmButton: false, customClass: 'swal-nobutton swal-white-greenbtn',
                    }, function (isConfirm) {
                        //swal.close();
                        if (isConfirm) {
                            // ShowLoadingPanal(true);
                            _vgAddEditApp.Common.ShowLoader(true);

                            if (resp.action == AppointmentActionEnum.EditSeriesOffline) {
                                _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                                _vgAddEditApp.AddEditApp.EditAppointmentSeriesOffline();
                            }
                            else if (resp.action == AppointmentActionEnum.AddAppointmentSeriesOffline) {

                                if (_vgAddEditApp.AddEditApp.model.IsMultiAppointment) {
                                    _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                                    _vgAddEditApp.AddEditApp.AddMultipleAppointmentSeriesOffline();
                                }
                                else {
                                    _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                                    _vgAddEditApp.AddEditApp.AddAppointmentSeriesOffline();
                                }

                            }
                            else if (resp.action == AppointmentActionEnum.AddMultipleAppointmentSeriesOffline) {
                                _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                                _vgAddEditApp.AddEditApp.AddMultipleAppointmentSeriesOffline();
                            }
                            else if (resp.action == AppointmentActionEnum.EditSingleAppointmentToRecurring) {
                                _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                                _vgAddEditApp.AddEditApp.EditSingleAppointmentToRecurring();
                            }
                            //var AddAppointment = {};
                            //AddAppointment.appAddData = objPara;
                            //AddAppointment.action = 33;  //Note : Change Action According To Your Type
                            //_vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
                        }
                        else {
                        }
                    });
                }
                else {
                    ShowPopupAlert(resp.errMsg);
                }
            }
        },

        AddEditAppointmentFailure: function (resp) {
            _vgAddEditApp.Common.ShowLoader(false);
            ShowPopupAlert(resp.errMsg);
        },
        // Added by Sajan Patel for Redirecting checkout if deposit appointment
        RedirectToCheckout: function (resp) {
            try {
                if (resp != null && resp.lstAppResult != null && resp.lstAppResult.length > 0 && $(txtDeposit).is(":visible") == true && $(txtDeposit).val() > 0 && $(txtDeposit).is(":disabled") == false) {
                    _vgAddEditApp.Common.ShowLoader(true);
                    var sBookAppResult = resp.lstAppResult[0];
                    var StartTime = new Date(txtAppointmentDate.value).format("yyyy/MM/dd hh:mm:ss tt");
                    var FormStatus = undefined;
                    location.href = _vgCal.Common.model.CustomerCheckOutPage + '?AppointmentID=' + sBookAppResult.AppointmentId + "&EventType=" + sBookAppResult.EventType + "&StartTime=" + StartTime + "&FormStatus=" + FormStatus + "&IsDeposit=1";
                } else {
                    setTimeout("ClosePopupWithClearData()", 1000);
                }
            } catch (ex) {
                setTimeout("ClosePopupWithClearData()", 1000);
            }
        },
        EditAppointmentOffline: function () {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.UpdateAppointmentOffline);;
            AddAppointment.action = AppointmentActionEnum.UpdateAppointmentOffline;
            AddAppointment.calledfrom = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditAppointmentOffline', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
        },


        EditAppointmentSeriesOffline: function () {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.EditSeriesOffline);;
            AddAppointment.action = AppointmentActionEnum.EditSeriesOffline;
            AddAppointment.calledfrom = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditAppointmentOffline', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
        },

        MoveAppointmentOffline: function (calledfrom) {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.MoveAppointmentOffline);
            AddAppointment.action = AppointmentActionEnum.MoveAppointmentOffline;
            AddAppointment.calledfrom = calledfrom;

            var jsondata = {};
            jsondata.Token = "EditAppointmentOffline";
            jsondata.Data = JSON.stringify(AddAppointment);
            _vgAddEditApp.Common.PageMethodsProxyPostWihoutCoreJS(JSON.stringify(jsondata), _vgAddEditApp.AddEditApp.MoveAppointmentOfflineSuccess, CallFailed_savedata);
        },

        RescheduleAppointmentOffline: function (calledfrom, userCCDetail, checkoutRequest) {
            var IsServiceP = [];
            IsServiceP = GetServiceProviderType();
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.MoveAppointmentOffline);
            AddAppointment.appeditData[0].userCCDetailXML = userCCDetail;
            AddAppointment.appeditData[0].IsServiceP = IsServiceP[0];
            AddAppointment.action = AppointmentActionEnum.RescheduleOnline;
            AddAppointment.calledfrom = calledfrom;
            AddAppointment.checkoutRequest = checkoutRequest;
            //var jsondata = {};
            //jsondata.Token = "EditAppointmentOffline";
            //jsondata.Data = JSON.stringify(AddAppointment);
            //_vgAddEditApp.Common.PageMethodsProxyPostWihoutCoreJS(JSON.stringify(jsondata), _vgAddEditApp.AddEditApp.MoveAppointmentOfflineSuccess, CallFailed_savedata);

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditAppointmentOfflinePrepay', false, _vgAddEditApp.AddEditApp.MoveAppointmentOfflineSuccess, _shopdetail.CallFailed_SaveOnlineBooking);

        },

        threeDSSuccessCheckout: function (isSuccess) {
            if (typeof isSuccess != "undefined" && isSuccess != null) {
                _onlineCheckout.AuthorisePaymnetCount = _onlineCheckout.AuthorisePaymnetCount + 1;
                if (_onlineCheckout.AuthoriseListData.length > _onlineCheckout.AuthorisePaymnetCount) {
                    _onlineCheckout.AuthoriseListData[_onlineCheckout.AuthorisePaymnetCount - 1].PaymentIntentId = isSuccess.PaymentIntentResponse.PaymentIntentId;
                    _vgAddEditApp.AddEditApp.AuthorisePayment();
                    return false;
                } else {
                    _onlineCheckout.AuthoriseListData[_onlineCheckout.AuthorisePaymnetCount - 1].PaymentIntentId = isSuccess.PaymentIntentResponse.PaymentIntentId;
                    _shopdetail.ProceedforBooking('bookwithcc');
                }
            }
        },
        threeDSFailCheckout: function (failResult) {
            if ($("#tabBooking2").hasClass("w--current")) {
                _shopdetail.LoadBalnkCCFrame();
            }
            _onlineCheckout.AuthorisePaymnetCount = 0;
            _onlineCheckout.AuthoriseListData = [];
            FailedCapture3DSecurePopup();
        },

        MoveAppointmentOfflineSuccess: function (resp) {
            if (typeof CallSuccess_savedata !== 'undefined' && $.isFunction(CallSuccess_savedata)) {
                if (resp.errorType == "0" && $("#liMultiDeposit").is(":visible") == true && $("#txtMultiAppDeposit").val() > 0) {
                    var sBookAppResult = resp.lstAppResult[0];
                    sBookAppResult.AppointmentID = sBookAppResult.AppointmentId;
                    var StartTime = new Date(gdate.split(',')[0]).format("yyyy/MM/dd hh:mm:ss tt");
                    var FormStatus = undefined;
                    window.parent.RedirectToCheckoutForDeposit(sBookAppResult, StartTime, FormStatus);
                } else {
                    CallSuccess_savedata(resp.errorType);
                }
            }
            else if (typeof _shopdetail.CallSuccess_SaveOnlineBooking !== 'undefined' && $.isFunction(_shopdetail.CallSuccess_SaveOnlineBooking)) {
                _onlineCheckout.AuthorisePaymnetCount = 0;
                _vgAddEditApp.AddEditApp.CreateAuthoriseList(resp);
                if (_onlineCheckout.AuthoriseListData.length > 0) {
                    _vgAddEditApp.AddEditApp.AuthorisePayment();
                } else {
                    _shopdetail.CallSuccess_SaveOnlineBooking(resp.errorType, resp);
                    if (isCalledfrom.toUpperCase() == 'SHOPDETAIL' && resp != 'undefined' && resp != null && resp.gatewayResponse != 'undefined' && resp.gatewayResponse != null && resp.gatewayResponse.subResponseCode != 'undefined' && resp.gatewayResponse.subResponseCode != null && resp.gatewayResponse.subResponseCode == "58-43-1") {
                        CallWebServicehed('MySampleService.asmx/DoLogout', "", CallSuccessLogout, CallFailed);
                    }
                }
            }

        },



        /*waiting to real */
        waitingToReal: function (objApp) {
            _vgAddEditApp.Common.ShowLoader(true);
            objApp.iLoggedInUserID = iLoggedinUserID;
            objApp.businessID = BusinessID;
            objApp.device = "Website";
            var arrAppReqData = [];
            arrAppReqData.push(objApp);
            var appRequestData = { appAddData: arrAppReqData, action: AppointmentActionEnum.WaitingToReal, calledfrom: "", membershipData: "" };
            _vgAddEditApp.Common.PageMethodsProxyPost(appRequestData, 'AddSingleAppointment', false,
                function (res) {/*success*/
                    ShowHideResourceListPopUp(false);
                    _vgAddEditApp.Common.ShowLoader(false);
                    if (["-1", "-3"].indexOf(res.overlapType.toString()) > -1) {
                        var resources = res && res.freeResources && res.freeResources.length > 0 ? res.freeResources : null;
                        if (resources) {//resource overlapping
                            getCalResourceCombo().options.length = 0;
                            AddItemsCalToDDL("0", "Select Resource");
                            $.each(resources, function (i, v) {
                                AddItemsCalToDDL(v.resourceID, v.resourceName, v.isAvailable);
                            });
                            getCalResourceCombo().value = 0;
                            ShowHideResourceListPopUp(true, objApp.waitingAppId);
                            return;
                        }
                        else {//other validation
                            ShowPopupAlert(res.errMsg);
                        }
                    }
                    _vgCal.Common.RefreshCalendar();
                },
                function (ex) { /*failure*/
                    ShowHideResourceListPopUp(false);
                    _vgAddEditApp.Common.ShowLoader(false);
                    ShowPopupAlert("Something went wrong.");
                    _vgCal.Common.RefreshCalendar();
                });
        },
        AddMultipleAppointmentOffline: function () {

            var objAppDetailforBooking = {};
            objAppDetailforBooking = this.CommonVariableAssignment(AppointmentActionEnum.AddMultipleAppointmentOffline);

            var AddAppointment = {};
            AddAppointment.appAddData = objAppDetailforBooking;
            if (objAppDetailforBooking[0].csvServiceID.split(",").length > 1 || objAppDetailforBooking[0].isMultiAppointment) {
                AddAppointment.action = AppointmentActionEnum.AddMultipleAppointmentOffline;
            }
            else {
                AddAppointment.action = AppointmentActionEnum.AddSingleAppointmentOffline;
            }
            AddAppointment.calledfrom = "";
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);

        },
        // Below function is called from checkout.js
        AddServiceFromCheckOut: function (objCheckoutData) {
            var objAppDetailforBooking = {};
            
            objAppDetailforBooking.ruleStartDate = objCheckoutData.newAppointmentDateTime;
            objAppDetailforBooking.businessID = parseInt(objCheckoutData.businessID);
            objAppDetailforBooking.iLoggedInUserID = parseInt(objCheckoutData.loggedInUserID);
            objAppDetailforBooking.userID = parseInt(objCheckoutData.userID);
            objAppDetailforBooking.userName = objCheckoutData.userName;
            try {
                if (typeof $('#hidIsServicePerformSameTime').val() != 'undefined' && $('#hidIsServicePerformSameTime').val() != '') {
                    objAppDetailforBooking.isServicePerformAtSameTime = $('#hidIsServicePerformSameTime').val() == '2' ? true : false;
                }
            } catch (e) {}
            if (objCheckoutData.outcallAddress != undefined && objCheckoutData.outcallAddress != null && objCheckoutData.outcallAddress != "") {
                objAppDetailforBooking.outcallAddress = objCheckoutData.outcallAddress;
            }
            if (objCheckoutData.gridAppointmentDate == null || objCheckoutData.gridAppointmentDate == "") {
                objAppDetailforBooking.startTime = objCheckoutData.businessTime; // check date in proper format in c#
            }
            else {
                objAppDetailforBooking.startTime = objCheckoutData.gridAppointmentDate; // check date in proper format in c#
            }

            // check below condition
            if (objCheckoutData.businessAppTypesetting == true && parseInt(objCheckoutData.appType) != -1) {
                objAppDetailforBooking.appType = parseInt(objCheckoutData.appType);
            }
            //Change by Chandni Shah:Custom Package:13/04/2018 :Set default value of CustomPackageServiceId to get Custom Package details

            objAppDetailforBooking.CustomPackageServiceId = "";
            objAppDetailforBooking.GiftCertificateId = "";
            var isCustomPackage = false;
            var lstCustomPackage = [];
            var CustomPackageIds = ""; //Change by Chandni Shah:Custom Package:13/04/2018 : Create custom package list 
            if (_checkout.PackageData.length > 0) {
                lstCustomPackage = $.grep(_checkout.PackageData, function (obj) {
                    if (obj.IsCustomPackage == true && ((obj.ServiceName == "" && obj.RenewalStatus != 2) ||
                        (obj.RenewalStatus == 3))) {
                        CustomPackageIds += obj.GiftCertificateID + ",";
                        return true;
                    }
                    else {
                        return false;
                    }
                });
                if (lstCustomPackage.length > 0) {
                    isCustomPackage = true;
                }
            }
            // set bundle service data to new request
            if (objCheckoutData.serviceBundleInfo != null && objCheckoutData.serviceBundleInfo != "") {
                var arrData = objCheckoutData.serviceBundleInfo.split('|');
                objAppDetailforBooking.isMultiAppointment = true;
                objAppDetailforBooking.csvServiceID = arrData[0];
                objAppDetailforBooking.csvSPID = arrData[1];
                objAppDetailforBooking.csvDuration = arrData[2];
                objAppDetailforBooking.csvPrice = arrData[3];
                objAppDetailforBooking.csvResourceID = arrData[4];
                objAppDetailforBooking.businessPackageID = 0;

                if (objCheckoutData.businessPacakgeID != null && objCheckoutData.businessPacakgeID != "") {
                    objAppDetailforBooking.businessPackageID = parseInt(objCheckoutData.businessPacakgeID);
                }
                //Change by Chandni Shah:Custom Package:13/04/2018 :To get Custom Package details for selected services
                if (isCustomPackage == true) {
                    var arrCustomPackageServiceIds = [];
                    var objAppDetail = $.grep(arrData[0].split(","), function (ServiceId) {
                        var objCustomPackageServiceId = $.grep(_checkout.CustomPackageServiceId, function (CustomServiceId) {
                            return CustomServiceId == ServiceId;
                        });
                        if (objCustomPackageServiceId.length == 0) {
                            arrCustomPackageServiceIds.push(ServiceId);
                        }
                    });
                    if (arrCustomPackageServiceIds.length > 0) {
                        objAppDetailforBooking.CustomPackageServiceId = arrCustomPackageServiceIds.join(',');
                        objAppDetailforBooking.GiftCertificateId = CustomPackageIds.slice(0, -1);
                    }
                }
            }
            else {
                objAppDetailforBooking.serviceID = parseInt(objCheckoutData.serviceID);
                objAppDetailforBooking.serviceProviderID = parseInt(objCheckoutData.serviceProviderID);
                //Change by Chandni Shah:Custom Package:13/04/2018 :To get Custom Package details for selected services
                if (isCustomPackage == true) {
                    var objCustomPackageServiceId = $.grep(_checkout.CustomPackageServiceId, function (CustomServiceId) {
                        return CustomServiceId == objAppDetailforBooking.serviceID;
                    });
                    if (objCustomPackageServiceId.length == 0) {
                        objAppDetailforBooking.CustomPackageServiceId = objAppDetailforBooking.serviceID;
                        objAppDetailforBooking.GiftCertificateId = CustomPackageIds.slice(0, -1);
                    }
                }
            }
            //Added by Sajan Patel For Offline Deposit
            objAppDetailforBooking.depositsPercentage = objCheckoutData.depositPercentage;
            objAppDetailforBooking.DepositsAmount = objCheckoutData.DepositsAmount;
            objAppDetailforBooking.AddOnDetails = _vgAddon.CreateAddonsCollection(objAppDetailforBooking);
            // Add Addon collection Pradip Solanki
            //if (_vgAddon.Model.IsCheckoutPage && _vgAddon.Model.SelectedAddonService.length > 0) {
            //    var AddonSelectedBundleData = [];
            //    var AddonFinalData = [];
            //    var FinalSelectData = _vgAddon.Model.SelectedAddonService;
            //    for (var j = 0; j < FinalSelectData.length; j++) {
            //        AddonFinalData = _vgAddon.GetSelectedCheckoutBundleAddons(AddonSelectedBundleData, j);
            //        _vgAddon.Model.EditTempAddon.push(AddonFinalData);
            //    }
            //}
            //objAppDetailforBooking.AddOnDetails = _vgAddon.Model.EditTempAddon;
            var arrAppReqData = [];
            arrAppReqData.push(objAppDetailforBooking);

            var AddAppointment = {};
            AddAppointment.appAddData = arrAppReqData;
            AddAppointment.action = AppointmentActionEnum.AddServiceFromCheckOut;
            AddAppointment.calledfrom = "";
            
            _checkout.MembershiplistResult = new Array();
            _checkout.UserMembershipDataResult = new Array();
            if (_checkout.Membershiplist.length > 0) {
                _checkout.MembershiplistResult = $.grep(_checkout.Membershiplist, function (item) {
                    return item.userID == objCheckoutData.userID;
                });
            }
            if (_checkout.UserMembershipData.length > 0) {
                _checkout.UserMembershipDataResult = $.grep(_checkout.UserMembershipData, function (item) {
                    return item.UserID == objCheckoutData.userID || _checkout.IsUserHaveSharedMS(item.SharedUserIDs, item.InActive, objCheckoutData.userID);
                });
            }
            AddAppointment.membershipData = _checkout.MembershiplistResult.length > 0 ? _checkout.createString(_checkout.MembershiplistResult, "membershipId") : (_checkout.UserMembershipDataResult.length > 0 ? _checkout.createString(_checkout.UserMembershipDataResult, "MembershipID") : '');

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false,
                function (res) {/*success*/
                    // below method in checkout.js   
                    if (res != null) {
                        _checkout.AddItem_Success(res.lstCheckOutResult, res.CustomerMembershipDetails, res.CustomPackageDetails);
                        _checkout.AddUpdateFeeItemInGrid(res.lstCheckOutResult, true);
                        _checkout.CheckoutGridRowOrdering(); // Set Reorder Row. Pradip Solanki
                        _vgAddon.ClosebtnAddOnService();
                    }
                },
                function (ex) { /*failure*/
                    // below method in checkout.js
                    _checkout.CallFailed();
                });
        },
        AddAppointmentSeriesOffline: function () {
            var objAppDetailforBooking = {};
            objAppDetailforBooking = this.CommonVariableAssignment(AppointmentActionEnum.AddAppointmentSeriesOffline);

            var AddAppointment = {};
            AddAppointment.appAddData = objAppDetailforBooking;
            AddAppointment.action = AppointmentActionEnum.AddAppointmentSeriesOffline;
            AddAppointment.calledfrom = "";
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
        },
        AddMultipleAppointmentSeriesOffline: function () {

            var objAppDetailforBooking = {};
            objAppDetailforBooking = this.CommonVariableAssignment(AppointmentActionEnum.AddMultipleAppointmentSeriesOffline);

            var AddAppointment = {};
            AddAppointment.appAddData = objAppDetailforBooking;

            if (objAppDetailforBooking[0].csvServiceID.split(",").length > 1) {
                AddAppointment.action = AppointmentActionEnum.AddMultipleAppointmentSeriesOffline;
            }
            else {
                AddAppointment.action = AppointmentActionEnum.AddAppointmentSeriesOffline;
            }
            AddAppointment.calledfrom = "";
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);

        },
        EditSingleAppointmentToRecurring: function () {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.EditSingleAppointmentToRecurring);
            AddAppointment.action = AppointmentActionEnum.EditSingleAppointmentToRecurring;
            AddAppointment.calledfrom = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditAppointmentOffline', false, _vgAddEditApp.AddEditApp.AddEditAppointmentSuccess, _vgAddEditApp.AddEditApp.AddEditAppointmentFailure);
        },
        RebookAppointment: function (calledfrom, userCCDetail) {
            var AddAppointment = {};
            AddAppointment.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.RebookAppointment);
            AddAppointment.appAddData[0].userCCDetailXML = userCCDetail;
            AddAppointment.action = AppointmentActionEnum.RebookAppointment;
            AddAppointment.calledfrom = calledfrom;
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointment', false, _vgAddEditApp.AddEditApp.MoveAppointmentOfflineSuccess, CallFailed_savedata);

        },
        AddSinglePersonalOff: function () {
            var AddPersonalOff = {};
            AddPersonalOff.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.AddSinglePersonalOff)[0];
            AddPersonalOff.action = AppointmentActionEnum.AddSinglePersonalOff;
            _vgAddEditApp.Common.PageMethodsProxyPost(AddPersonalOff, 'AddEditPersonalOff', false, _vgAddEditApp.AddEditApp.AddEditPersonalOffSuccess, _vgAddEditApp.AddEditApp.AddEditPersonalOffFailure);
        },
        AddSeriesPersonalOff: function () {
            var AddPersonalOff = {};
            AddPersonalOff.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.AddSeriesPersonalOff)[0];
            AddPersonalOff.action = AppointmentActionEnum.AddSeriesPersonalOff;
            _vgAddEditApp.Common.PageMethodsProxyPost(AddPersonalOff, 'AddEditPersonalOff', false, _vgAddEditApp.AddEditApp.AddEditPersonalOffSuccess, _vgAddEditApp.AddEditApp.AddEditPersonalOffFailure);
        },
        EditSinglePersonalOff: function () {
            var AddPersonalOff = {};
            AddPersonalOff.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.EditSinglePersonalOff)[0];
            AddPersonalOff.action = AppointmentActionEnum.EditSinglePersonalOff;
            _vgAddEditApp.Common.PageMethodsProxyPost(AddPersonalOff, 'AddEditPersonalOff', false, _vgAddEditApp.AddEditApp.AddEditPersonalOffSuccess, _vgAddEditApp.AddEditApp.AddEditPersonalOffFailure);
        },
        EditSeriesPersonalOff: function () {
            var AddPersonalOff = {};
            AddPersonalOff.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.EditSeriesPersonalOff)[0];
            AddPersonalOff.action = AppointmentActionEnum.EditSeriesPersonalOff;
            _vgAddEditApp.Common.PageMethodsProxyPost(AddPersonalOff, 'AddEditPersonalOff', false, _vgAddEditApp.AddEditApp.AddEditPersonalOffSuccess, _vgAddEditApp.AddEditApp.AddEditPersonalOffFailure);
        },
        EditSinglePersonalOffFromSeries: function () {
            var AddPersonalOff = {};
            AddPersonalOff.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.EditSinglePersonalOffFromSeries)[0];
            AddPersonalOff.action = AppointmentActionEnum.EditSinglePersonalOffFromSeries;
            _vgAddEditApp.Common.PageMethodsProxyPost(AddPersonalOff, 'AddEditPersonalOff', false, _vgAddEditApp.AddEditApp.AddEditPersonalOffSuccess, _vgAddEditApp.AddEditApp.AddEditPersonalOffFailure);
        },
        EditSinglePersonalOffToSeries: function () {
            var AddPersonalOff = {};
            AddPersonalOff.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.EditSinglePersonalOffToSeries)[0];
            AddPersonalOff.action = AppointmentActionEnum.EditSinglePersonalOffToSeries;
            _vgAddEditApp.Common.PageMethodsProxyPost(AddPersonalOff, 'AddEditPersonalOff', false, _vgAddEditApp.AddEditApp.AddEditPersonalOffSuccess, _vgAddEditApp.AddEditApp.AddEditPersonalOffFailure);
        },
        AddEditPersonalOffSuccess: function (resp) {
            if (resp.errMsg == null || resp.errMsg == "") {
                //var popup_NewPO = $find('modalpopupNewPO');
                //if (popup_NewPO != null) {
                //    popup_NewPO.hide();
                //}
                //Added By:Virendra Gohil...06-09-2018
                $("#divPersionalOffPopup").hide();

                setTimeout("RefreshCalendar()", 1000);
                return;
            }
            else if (resp.errorType == 2) //appointment overlapped
            {
                //if (confirm(resp.errMsg)) {
                //    if (resp.action == AppointmentActionEnum.AddSinglePersonalOff) {
                //        _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                //        _vgAddEditApp.AddEditApp.AddSinglePersonalOff();
                //    }
                //    else if (resp.action == AppointmentActionEnum.AddSeriesPersonalOff) {
                //        _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                //        _vgAddEditApp.AddEditApp.AddSeriesPersonalOff();
                //    }
                //    else if (resp.action == AppointmentActionEnum.EditSinglePersonalOff) {
                //        _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                //        _vgAddEditApp.AddEditApp.EditSinglePersonalOff();
                //    }
                //    else if (resp.action == AppointmentActionEnum.EditSeriesPersonalOff) {
                //        _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                //        _vgAddEditApp.AddEditApp.EditSeriesPersonalOff();
                //    }
                //    else if (resp.action == AppointmentActionEnum.EditSinglePersonalOffFromSeries) {
                //        _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                //        _vgAddEditApp.AddEditApp.EditSinglePersonalOffFromSeries();
                //    }
                //    else if (resp.action == AppointmentActionEnum.EditSinglePersonalOffToSeries) {
                //        _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                //        _vgAddEditApp.AddEditApp.EditSinglePersonalOffToSeries();
                //    }
                //}
                //else {
                //    enablePOBookButton();
                //    _vgAddEditApp.Common.ShowLoader(false);
                //    return false;
                //}

                // Added By: Virendra Gohil...16/07/2018,Reason: Convert confirm alert to sweet alert.
                _vgAddEditApp.Common.ShowLoader(false);
                swal({
                    title: resp.errMsg.toString(), text: "",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: '#DD6B55',
                    confirmButtonText: 'Yes',
                    cancelButtonText: "No",
                    closeOnConfirm: true,
                    closeOnCancel: true,
                    customClass: 'sweet-alert-model'
                    //showConfirmButton: false, customClass: 'swal-nobutton swal-white-greenbtn',
                }, function (isConfirm) {
                    //swal.close();
                    if (isConfirm) {
                        _vgAddEditApp.Common.ShowLoader(false);
                        if (resp.action == AppointmentActionEnum.AddSinglePersonalOff) {
                            _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                            _vgAddEditApp.AddEditApp.AddSinglePersonalOff();
                        }
                        else if (resp.action == AppointmentActionEnum.AddSeriesPersonalOff) {
                            _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                            _vgAddEditApp.AddEditApp.AddSeriesPersonalOff();
                        }
                        else if (resp.action == AppointmentActionEnum.EditSinglePersonalOff) {
                            _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                            _vgAddEditApp.AddEditApp.EditSinglePersonalOff();
                        }
                        else if (resp.action == AppointmentActionEnum.EditSeriesPersonalOff) {
                            _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                            _vgAddEditApp.AddEditApp.EditSeriesPersonalOff();
                        }
                        else if (resp.action == AppointmentActionEnum.EditSinglePersonalOffFromSeries) {
                            _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                            _vgAddEditApp.AddEditApp.EditSinglePersonalOffFromSeries();
                        }
                        else if (resp.action == AppointmentActionEnum.EditSinglePersonalOffToSeries) {
                            _vgAddEditApp.AddEditApp.model.FlagConfirmation = 1;
                            _vgAddEditApp.AddEditApp.EditSinglePersonalOffToSeries();
                        }
                    }
                    else {
                        enablePOBookButton();
                        _vgAddEditApp.Common.ShowLoader(false);
                        return false;
                    }
                });
            }
            else {
                _vgAddEditApp.Common.ShowLoader(false);
                enablePOBookButton();
                ShowPopupAlert(resp.errMsg);
            }
        },
        AddEditPersonalOffFailure: function (resp) {
            _vgAddEditApp.Common.ShowLoader(false);
            try {
                ShowPopupAlert(resp.errMsg);
            } catch (e) {
                ShowPopupAlert("Something went wrong, Try Again.");
            }
        },
        AddOnlineAppointment: function (calledfrom, userCCDetail, checkoutRequest) {
            var IsServiceP = [];
            IsServiceP = GetServiceProviderType();
            var AddAppointment = {};
            AddAppointment.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.AddOnlineAppointment);
            for (var i = 0; i < AddAppointment.appAddData.length; i++) {
                AddAppointment.appAddData[i].IsServiceP = IsServiceP[i];
            }
            //Code Start : Added By Divyesh on 26/06/2018 : For identify : this method call from online or offline (For Block Customer Project)
            if (typeof checkoutRequest != "undefined" && AddAppointment.appAddData != null && AddAppointment.appAddData.length > 0) {
                $.grep(AddAppointment.appAddData, function (appdetail) {
                    appdetail.isCallFromOnline = true;
                });
            }
            if (typeof checkoutRequest != "undefined" && checkoutRequest != null
                && typeof checkoutRequest.ccDetails != 'undefined' && typeof checkoutRequest.ccDetails != null
                && typeof _onlineCheckout.AuthoriseListData != 'undefined' && _onlineCheckout.AuthoriseListData != null && _onlineCheckout.AuthoriseListData.length > 0) {
                checkoutRequest.ccDetails.AuthorisePayment = _onlineCheckout.AuthoriseListData;
            }
            //Code End :

            AddAppointment.appAddData[0].userCCDetailXML = userCCDetail;
            AddAppointment.action = AppointmentActionEnum.AddOnlineAppointment;
            AddAppointment.calledfrom = calledfrom;
            if (typeof checkoutRequest != "undefined" && checkoutRequest != null) {
                if (typeof InvoiceNum != 'undefined' && InvoiceNum != null) {
                    checkoutRequest.InvoiceNum = InvoiceNum;

                } else {
                    InvoiceNum = _common.GenerateRandomNo(10, checkoutRequest.businessID);
                    checkoutRequest.InvoiceNum = InvoiceNum;
                }
            }

            AddAppointment.checkoutRequest = (typeof checkoutRequest == 'undefined' ? '' : checkoutRequest);
            AddAppointment.membershipData = "";
            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddSingleAppointmentForPrePay', false, _vgAddEditApp.AddEditApp.MoveAppointmentOfflineSuccess, _vgAddEditApp.AddEditApp.AddOnlineAppointmentFailed);
        },
        AddOnlineAppointmentFailed: function (resp) {
            if (typeof CallFailed_savedata !== 'undefined' && $.isFunction(CallFailed_savedata)) {
                CallFailed_savedata(resp);
            }
            else if (typeof _shopdetail.CallFailed_SaveOnlineBooking !== 'undefined' && $.isFunction(_shopdetail.CallFailed_SaveOnlineBooking)) {
                _shopdetail.CallFailed_SaveOnlineBooking(resp);
            }
        },
        AddSingleClass: function () {
            var AddAppointment = {};
            AddAppointment.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.AddSingleClass);
            AddAppointment.action = AppointmentActionEnum.AddSingleClass;

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddClass', false, _vgAddEditApp.AddEditApp.AddEditClassSuccess, _vgAddEditApp.AddEditApp.AddEditClassFailure);
        },
        AddSeriesClass: function () {
            var AddAppointment = {};
            AddAppointment.appAddData = this.CommonVariableAssignment(AppointmentActionEnum.AddSeriesClass);
            AddAppointment.action = AppointmentActionEnum.AddSeriesClass;

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'AddClass', false, _vgAddEditApp.AddEditApp.AddEditClassSuccess, _vgAddEditApp.AddEditApp.AddEditClassFailure);
        },
        EditSingleClass: function () {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.EditSingleClass);
            AddAppointment.action = AppointmentActionEnum.EditSingleClass;

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditClass', false, _vgAddEditApp.AddEditApp.AddEditClassSuccess, _vgAddEditApp.AddEditApp.AddEditClassFailure);
        },
        EditSeriesClass: function () {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.EditSeriesClass);
            AddAppointment.action = AppointmentActionEnum.EditSeriesClass;

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditClass', false, _vgAddEditApp.AddEditApp.AddEditClassSuccess, _vgAddEditApp.AddEditApp.AddEditClassFailure);
        },
        EditSingleClassToSeries: function () {
            var AddAppointment = {};
            AddAppointment.appeditData = this.CommonVariableAssignment(AppointmentActionEnum.EditSingleClassToSeries);
            AddAppointment.action = AppointmentActionEnum.EditSingleClassToSeries;

            _vgAddEditApp.Common.PageMethodsProxyPost(AddAppointment, 'EditClass', false, _vgAddEditApp.AddEditApp.AddEditClassSuccess, _vgAddEditApp.AddEditApp.AddEditClassFailure);
        },
        AddEditClassSuccess: function (resp) {
            if (resp.errorType != null && (resp.errorType == 12 || resp.errorType == -13)) {

                _vgCal.SPopup.ShowPopup(true); // this function in vagarocalendar.js
            }
            else {
                _vgCal.SPopup.ShowPopup(false); // this function in vagarocalendar.js
            }
            _vgCal.Common.ShowLoader(false); // this function in vagarocalendar.js

            if (resp.errMsg == null || resp.errMsg == "") {
                _vgCal.Common.RefreshCalendar(); // this function in vagarocalendar.js
            } else {

                if (resp.errorType == 2 || resp.errorType == 12) //appointment overlapped OR attendee exists in class
                {
                    var errMess = resp.errMsg;
                    var attendeeMess = '';
                    if (errMess.indexOf("#") != -1) {
                        var arrMess = errMess.split('#');
                        errMess = arrMess[0];
                        attendeeMess = arrMess[1];
                    }
                    if (errMess != '') {
                        if (errMess.length > 700)  // if content length is long then display scroll in message
                            $("body").addClass('PopupWrap-Maxheight');

                        _objMessagePopup.Show("Overlapping Appointments", errMess, "Cancel", "Overlap", '',
                            function () {
                                _objMessagePopup.Hide();
                                $("body").removeClass('PopupWrap-Maxheight');
                            },
                            function () {
                                $("body").removeClass('PopupWrap-Maxheight');
                                _objMessagePopup.Hide();
                                if (attendeeMess != '') { // Confirm message about attendde exists 
                                    _objMessagePopup.Show("Students Already Enrolled", attendeeMess, "Back", "Continue", '',
                                        function () {
                                            _objMessagePopup.Hide();
                                        },
                                        function () {
                                            _vgAddEditApp.AddEditApp.EditClassCommon(resp);
                                            _objMessagePopup.Hide();
                                        });
                                } else {
                                    _vgAddEditApp.AddEditApp.EditClassCommon(resp);
                                }
                            });
                    } else {
                        if (attendeeMess != '') { // Confirm message about attendde exists 
                            _objMessagePopup.Show("Students Already Enrolled", attendeeMess, "Back", "Continue", '',
                                function () {
                                    _objMessagePopup.Hide();
                                },
                                function () {
                                    _vgAddEditApp.AddEditApp.EditClassCommon(resp);
                                    _objMessagePopup.Hide();
                                });
                        }
                    }
                } else if (resp.errorType == -13) {
                    $("#" + _vgCal.SPopup.objRecur.divErrorMessage).show();
                    $("#" + _vgCal.SPopup.objRecur.divErrorMessage)[0].innerHTML = resp.errMsg;
                }
                else {
                    _vgCal.Common.ShowMsg(resp.errMsg);
                }
            }
        },
        AddEditClassFailure: function (resp) {
            _vgCal.SPopup.ShowPopup(false).Reset();
            try {
                _vgCal.Common.ShowLoader(false).ShowMsg(resp.errMsg);
            } catch (e) {
                _vgCal.Common.ShowLoader(false).ShowMsg("Something went wrong, Try Again.");
            }
        },
        EditClassCommon: function (resp) {
            _vgCal.Common.ShowLoader(true);

            if (resp.action == AppointmentActionEnum.AddSeriesClass) {
                _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                _vgAddEditApp.AddEditApp.model.IsCheckAttendeeExists = false;
                _vgAddEditApp.AddEditApp.AddSeriesClass();
            }
            else if (resp.action == AppointmentActionEnum.EditSeriesClass) {
                _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                _vgAddEditApp.AddEditApp.model.IsCheckAttendeeExists = false;
                _vgAddEditApp.AddEditApp.EditSeriesClass();
            }
            else if (resp.action == AppointmentActionEnum.EditSingleClassToSeries) {
                _vgAddEditApp.AddEditApp.model.IsCheckAppointmentOverlap = false;
                _vgAddEditApp.AddEditApp.model.IsCheckAttendeeExists = false;
                _vgAddEditApp.AddEditApp.EditSingleClassToSeries();
            }
        },

        // Below function is called from checkout.js
        EditServiceFromCheckOut: function (objCheckoutData) {
            var objEditServiceReqData = {};
            
            objEditServiceReqData.AppointmentID = objCheckoutData.appointmentID;
            objEditServiceReqData.serviceID = objCheckoutData.serviceID;
            objEditServiceReqData.serviceName = objCheckoutData.itemTitle;
            objEditServiceReqData.serviceProviderID = objCheckoutData.serviceProviderID;
            objEditServiceReqData.businessID = objCheckoutData.businessID;
            objEditServiceReqData.iLoggedInUserID = objCheckoutData.loggedInUserID;
            objEditServiceReqData.userID = objCheckoutData.userID;
            if (objCheckoutData.outcallAddress != undefined && objCheckoutData.outcallAddress != null && objCheckoutData.outcallAddress != "") {
                objEditServiceReqData.outcallAddress = objCheckoutData.outcallAddress;
            }
            if (objCheckoutData.appType != undefined && objCheckoutData.appType != null) {
                objEditServiceReqData.appType = objCheckoutData.appType;
            }
            //Change by Chandni Shah:Custom Package:18/04/2018 :To get Custom Package details for selected services,pass GClist and Service Id
            objEditServiceReqData.CustomPackageServiceId = "";
            objEditServiceReqData.GiftcertificateId = "";
            objEditServiceReqData.isServiceChange = objCheckoutData.isServiceChange != undefined ? objCheckoutData.isServiceChange : false;    //Service change from edit checkout - Mahendra Kanzariya 27 / 02 / 2023
            var isCustomPackage = false;
            var lstCustomPackage = [];
            var CustomPackageIds = ""; //Change by Chandni Shah:Custom Package:13/04/2018 : Create custom package list 
            if (_checkout.PackageData.length > 0) {
                lstCustomPackage = $.grep(_checkout.PackageData, function (obj) {
                    if (obj.IsCustomPackage == true && obj.ServiceName == "" && obj.RenewalStatus != 2) {
                        CustomPackageIds += obj.GiftCertificateID + ",";
                        return true;
                    }
                    else {
                        return false;
                    }
                });
                if (lstCustomPackage.length > 0) {
                    isCustomPackage = true;
                }
            }
            if (isCustomPackage == true) {
                var objCustomPackageServiceId = $.grep(_checkout.CustomPackageServiceId, function (CustomServiceId) {
                    return CustomServiceId == objEditServiceReqData.serviceID;
                });
                if (objCustomPackageServiceId.length == 0) {
                    objEditServiceReqData.CustomPackageServiceId = objEditServiceReqData.serviceID;
                    objEditServiceReqData.GiftcertificateId = CustomPackageIds.slice(0, -1);
                }
            }

            // Add Addon collection Pradip Solanki
            objEditServiceReqData.ruleStartDate = objCheckoutData.newAppointmentDateTime;
            objEditServiceReqData.AddOnDetails = _vgAddon.CreateAddonsCollection(objEditServiceReqData);

            var EditServiceReqData = {};
            EditServiceReqData.editServiceData = objEditServiceReqData;
            EditServiceReqData.action = AppointmentActionEnum.EditServiceFromCheckOut;
            EditServiceReqData.membershipData = objCheckoutData.membershipData;

            _vgAddEditApp.Common.PageMethodsProxyPost(EditServiceReqData, 'EditServiceFromCheckOut', false,
                function (res) {/*success*/
                    // below method in checkout.js
                    _checkout.SaveChangeService_Success(res);
                },

                function (ex) { /*failure*/
                    // below method in checkout.js
                    _checkout.CallFailed();
                });
        },
        //Added By:Virendra Gohil...30-07-2018,Reason:Get appointment detail from database.
        getAppointmentHistory: function (hdnAppointmentID, historyId) {
            appHistoryPopupBindId = "";
            appHistoryPopupBindId = historyId;
            $("#" + appHistoryPopupBindId).empty();
            if (_vgCal.Common.HasCustomerRight()) {
                if (hdnAppointmentID != "" || hdnAppointmentID != undefined ||
                    hdnAppointmentID != null || hdnAppointmentID != "0") {
                    ShowLoadingPanel(true);
                    var _appointmentId = hdnAppointmentID;
                    var _eventType = 0;
                    var _app_confirm_unique_id = '';
                    var appointmentIdParams = '"iAppointmentID" : ' + _appointmentId + '';
                    appointmentIdParams += ', "iApp_confirm_unique_id" : "' + _app_confirm_unique_id + '"';
                    appointmentIdParams += ', "eventType" : ' + _eventType + '';

                    CallWS('GeneralWebService.asmx/GetAppointmentHistoryDetails', appointmentIdParams, _vgAddEditApp.AddEditApp.onLoadSuccess_AppointmentHistory, _vgAddEditApp.AddEditApp.CallFailed_AppointmentHistory);
                }
            }
            else {
                SetErrorDisplayMessage("0", "Sorry, You don\'t have permission to view Appointment History!!", "");
            }
            return false;
        },
        //Added By:Virendra Gohil...30-07-2018
        onLoadSuccess_AppointmentHistory: function (data) {
            $("#" + appHistoryPopupBindId).empty();
            var result = data.d;
            if (result == null || result.length == 0) {
                SetErrorDisplayMessage("2", "no records found.", "");
                ShowLoadingPanel(false);
                return;
            }
            if (result.Rows.length > 0) {
                _vgAddEditApp.AddEditApp.bindAppointmentHistoryTimeline(result.Rows);
            }
            else {

                ShowLoadingPanel(false);
                SetErrorDisplayMessage('2', 'Appointment history can only be seen for the last 90 days.', '');
                return;
            }
        },
        //Added By:Virendra Gohil...30-07-2018,Reason:bind appointment detail to table.
        bindAppointmentHistoryTimeline: function (res) {
            $('.scrolltableParent:visible').scroll(customerresopnsivescroll);
            $("#" + appHistoryPopupBindId).empty();
            var appHistory = "";
            appHistory = "<div class='createbyBlock'>";
            if (res.length > 0) {
                // added by khyati >> UK Date Format Change
                var cDate = res[res.length - 1].CreatedDateString;
                //var cDate = new Date(moment(cDate)._d);
                appHistory += "<div class='crtbylabel'>" +
                    "<label>Created by: </label>" +
                    "<span id='crDateTimeline_" + appHistoryPopupBindId + "' runat='server' class='crTime'>" + res[res.length - 1].CreatedBy + " on " + cDate + "</span>" +
                    "</div>";
            }
            else {
                appHistory += "<div class='crtbylabel'>" +
                    "<label>Create by:</label>" +
                    "<span id='crDateTimeline_" + appHistoryPopupBindId + "' runat='server' class='crTime'>---</span>" +
                    "</div>";
            }
            appHistory += "</div>" + "<div class='gridtablescroll ' id='divexpandArrow'>" +
                "<div class='vg-table-arrow'>" +
                "<a href='javascript:void(0);' id='aExpandAllGridColumn' class='no-underline' onclick='ExpandAllGridColumn(this)'>" +
                "<span class='glyphicon glyphicon-chevron-right'></span>" +
                "</a>" +
                "</div>" +
                "</div>" +
                "<div class='pos-relative'><div id='divClassTimeLineN' class='table-scroll-container scrolldiv-content  default-scrollbar-desk scroll-container table-responsive cl-timeline-table-scroll-container'>" +
                "<div class='scrollperTable' style='width:100%;position: relative;' ></div>" +
                "<table class='tabelGrid responsiveClassTimeLine' cellspacing='0' cellpadding='0' style='width: 100%;'>" +
                "<thead>" +
                "<tr>" +
                "<th>Appointment Date</th>" +
                "<th>Duration</th>" +
                "<th>Service / Class</th>" +
                "<th>Comment</th>" +
                "<th>Service Provider</th>" +
                "<th>Modified By</th>" +
                "<th>Modified Date</th>" +
                "<th class='status-one-line'>Status</th>" +
                "<th>Action</th>" +
                "</tr>" +
                "</thead>";
            appHistory += "<tbody id='tblGridData_" + appHistoryPopupBindId + "'>";
            var isFirstTime = true;
            for (var i = 0; i < res.length; i++) {
                // added by khyati >> UK Date Format Change
                var newSDate = res[i].StartTimeString;
                var modifiedDate = ''
                if (parseInt(res[i].ModifiedDateString.length) > 10 && res[i].ModifiedDateString.toString() != "---") {
                    // added by khyati >> UK Date Format Change
                    modifiedDate = res[i].ModifiedDateString;
                }
                else {
                    modifiedDate = res[i].ModifiedDateString;
                }
                appHistory += "<tr>" +
                    "<td>" + newSDate + "</td>" +
                    "<td>" + res[i].Duration + "</td>" +
                    "<td>" + (res[i].ServiceTitle != null && res[i].ServiceTitle.length > 0 ? res[i].ServiceTitle : "---") + "</td>" +
                    "<td>" + res[i].Comment + "</td>" +
                    "<td>" + (res[i].ServiceProvider != null && res[i].ServiceProvider.length > 0 ? res[i].ServiceProvider : "---") + "</td>" +
                    "<td>" + (res[i].ModifiedBy != null && res[i].ModifiedBy.length > 0 ? res[i].ModifiedBy : "---") + "</td>" +
                    "<td>" + modifiedDate + "</td>" +
                    "<td class='status-one-line'>" + res[i].Status + "</td>" +
                    "<td>" +
                    "<ul>";
                if (res[i].Device != null) {
                    if (res[i].EmailStatus != undefined && res[i].EmailStatus != null && res[i].EmailStatus != '') {
                        var emailstatus = res[i].EmailStatus;
                        if (emailstatus.toLowerCase() == "deferred" || emailstatus.toLowerCase() == "bounce" || emailstatus.toLowerCase() == "dropped") {
                            emailstatus = "<span style=color:red;'>Failed</span>";
                        }
                        var device = res[i].Device.replace("E-Mail Sent (System)", " Sent (" + emailstatus + ")" + setEmailStatustoolTip(res[i].EmailStatus));
                        appHistory += "<li>" + device + "</li>";
                    }
                    else {
                        var device = res[i].Device.replace("E-Mail Sent (System)", " Sent");
                        appHistory += "<li>" + device + "</li>";
                    }
                    //Deposits: Added to display Deposit icon in Appointment.By Geeta Dobariya, 01/07/2019
                    if (res[i].depositsPaid > 0) {
                        appHistory += "<div id='divDeposit' style='color:red'> $ " + res[i].depositsPaid.toFixed(2) + " Deposit Paid</div>";
                    }
                }
                if (res[i].EmailPath != null && res[i].EmailPath != '') {
                    var regex = /\\/g;
                    var strEmailFilePath = res[i].EmailPath.replace(regex, "\\\\");
                    var EMailFailureID = '';
                    if (strEmailFilePath != '' && strEmailFilePath.indexOf('.html') == -1) {
                        EMailFailureID = strEmailFilePath;
                        strEmailFilePath = '';
                    }
                    appHistory += '<li>' +
                        '<a href="javascript:void(0)" onclick="ShowEmailPreviewPopupFromAppoitnment(\'' + strEmailFilePath + '\',\'' + EMailFailureID + '\');">' +
                        'Email</a>' +
                        '</li>';
                }
                if (res[i].MessageBody != null && res[i].MessageBody != '') {
                    var strMessageBody = res[i].MessageBody.replace(/(\r\n|\n|\r)/gm, " ");
                    appHistory += '<li>' +
                        '<a href="javascript:void(0)" onclick="ShowEmailPreviewPopupFromAppoitnment(\'' + strMessageBody + '\',' + "0" + ');">' +
                        'Notification</a>' +
                        '</li>';
                }
                if (res[i].SMSPath != null && res[i].SMSPath != '') {
                    var regex = /\\/g;
                    var strSMSPath = res[i].SMSPath.replace(regex, "\\\\");
                    var SMSFailureID = '';
                    if (strSMSPath != '' && strSMSPath.indexOf('.html') == -1) {
                        SMSFailureID = strSMSPath;
                        strSMSPath = '';
                    }
                    appHistory += '<li>' +
                        '<a href="javascript:void(0)" onclick="ShowEmailPreviewPopupFromAppoitnment(\'' + strSMSPath + '\',\'' + SMSFailureID + '\')">' +
                        'SMS</a>' +
                        '</li>';
                }

                if (typeof res[i].isShowClassCancellationPolicy != 'undefined' && res[i].isShowClassCancellationPolicy != null && res[i].isShowClassCancellationPolicy != "" && res[i].isShowClassCancellationPolicy == true) {
                    appHistory += '<li> <a href="javascript:void(0)" onclick="newCancelPolicy()"> Cancellation Policy</a> </li>';
                    if (isFirstTime == true) {
                        $(".contentTitle").text("At Time of Booking - " + newSDate);
                        $(".cancelcontent").text(res[i].AppointmentCancellationText);
                        $(".cancelcontent").append("<br/>" + res[i].ClassCancellationPolicy);
                        isFirstTime = false;
                    }
                }
                appHistory += "</ul>"
                "</td>" +
                    "</tr>";
            }
            appHistory += "</tbody>" +
                "</table>" +
                "</div></div>";
            $("#" + appHistoryPopupBindId).append(appHistory);
            ManageClasses.CLApplyCustomScroll("#divClassTimeLineN", true);
            ManageClasses.CLAppointmentTimeLineHeaderTable();


            showScrollArrow();
            ShowLoadingPanel(false);
        },
        //Added By:Virendra Gohil...30-07-2018
        CallFailed_AppointmentHistory: function (res) {
            $("#" + appHistoryPopupBindId).empty();
            ShowLoadingPanel(false);
            if (typeof res.error != "function") {
                alert(res.error);
            }
        },
        //Added By:Virendra Gohil...02-08-2018,Reason:Set customer info in new state.
        setNewSearchCustomer: function (data,IsCallLoadData) {
            var txtdata = data;
            if (txtdata.length <= 0 || txtdata == null || txtdata == "") {
                $("#txtSearchCustomer").val("");
                NewApp_hdnCustomerID.value = "";
                cusInfoDiv.style.display = "none";
                btnEditCustomer.style.display = "none";
                setDepositeText(_vgCal.Common.DepositOpType.Clear);
                $("#divDisplayCustomerInfo").find('div.oldspacebox').removeClass('oldspacebox').addClass('oldserachbox');
                if (typeof _vgVagaroDrive !== 'undefined') {
                    _vgVagaroDrive.model.CustomerDetails.AvatarPath = "";
                    _vgVagaroDrive.model.CustomerDetails.AvatarIntials = "";
                    _vgVagaroDrive.model.CustomerDetails.Name = "";
                }
                $("#divSearchCustomer").hide();
                if (IsCallLoadData) {
                    cache_pageIndex = 0;
                    cache_OldSelectctedUserId = 0;
                    LoadMoreCustomers();
                }
            }
            else {
                $("#divSearchCustomer").show();
            }
        },
        setIconShowHide: function (data) {
            var txtdata = data;
            if (txtdata.length <= 0 || txtdata == null || txtdata == "") {
                $("#divSearchCustomer").hide();
            }
            else {
                $("#divSearchCustomer").show();
            }

        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Return only digit values.
        isNumberKey: function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Insert between 1-12 digits values.
        isMinNumber: function (el) {
            var num = parseInt(el.value);
            if (num > 0) {
                if (num > 12) {
                    el.value = "12";
                }
                else {
                    el.value = num.toString();
                }
            }
            else {
                el.value = "1";
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Up value of weeksfrequency.
        upNumber: function (val) {
            $(".inc-dic-mid .value-plus").closest(".inc-dic-mid").addClass("active");
            var num = document.getElementById(val).value;
            if (num == "" || num == null || num == NaN) {
                document.getElementById(val).value = "1";
            }
            else {
                num = parseInt(num);
                if (num > 12) {
                    document.getElementById(val).value = "1";
                }
                else {
                    var newNum = num + 1;
                    if (newNum < 13)
                        document.getElementById(val).value = newNum.toString();
                }
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Down value of weeksfrequency.
        downNumber: function (val) {
            $(".inc-dic-mid .value-min").closest(".inc-dic-mid").addClass("active");
            var num = document.getElementById(val).value;
            if (num == "" || num == null || num == "NaN") {
                document.getElementById(val).value = "1";
            }
            else {
                num = parseInt(num);
                if (num > 0) {
                    var newNum = num - 1;
                    if (newNum > 0)
                        document.getElementById(val).value = newNum.toString();
                }
                else {
                    document.getElementById(val).value = "1";
                }
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Insert between 1-31 digits values.
        isMinDateNumber: function (el) {
            var num = parseInt(el.value);
            if (num > 0) {
                if (num > 31) {
                    el.value = "31";
                }
                else {
                    el.value = num.toString();
                }
            }
            else {
                el.value = "1";
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Up value of daysfrequency.
        upDateNumber: function (val) {
            $(".inc-dic-mid .value-plus").closest(".inc-dic-mid").addClass("active");
            var num = document.getElementById(val).value;
            if (num == "" || num == null || num == NaN) {
                document.getElementById(val).value = "1";
            }
            else {
                num = parseInt(num);
                if (num > 31) {
                    document.getElementById(val).value = "1";
                }
                else {
                    var newNum = num + 1;
                    if (newNum < 32)
                        document.getElementById(val).value = newNum.toString();
                }
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Down value of daysfrequency.
        downDateNumber: function (val) {
            $(".inc-dic-mid .value-min").closest(".inc-dic-mid").addClass("active");
            var num = document.getElementById(val).value;
            if (num == "" || num == null || num == "NaN") {
                document.getElementById(val).value = "1";
            }
            else {
                num = parseInt(num);
                if (num > 0) {
                    var newNum = num - 1;
                    if (newNum > 0)
                        document.getElementById(val).value = newNum.toString();
                }
                else {
                    document.getElementById(val).value = "1";
                }
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Up value of monthdaysfrequency.
        upMonthDateNumber: function (val) {
            $(".inc-dic-mid .value-plus").closest(".inc-dic-mid").addClass("active");
            var num = document.getElementById(val).value;
            if (num == "" || num == null || num == NaN) {
                document.getElementById(val).value = "1";
            }
            else {
                num = parseInt(num);
                if (num > 31) {
                    document.getElementById(val).value = "1";
                }
                else {
                    var newNum = num + 1;
                    if (newNum < 32)
                        document.getElementById(val).value = newNum.toString();
                }
            }
        },
        //Added By:Virendra Gohil...06-08-2018,Reason:Down value of monthdaysfrequency.
        downMonthDateNumber: function (val) {
            $(".inc-dic-mid .value-min").closest(".inc-dic-mid").addClass("active");
            var num = document.getElementById(val).value;
            if (num == "" || num == null || num == "NaN") {
                document.getElementById(val).value = "1";
            }
            else {
                num = parseInt(num);
                if (num > 0) {
                    var newNum = num - 1;
                    if (newNum > 0)
                        document.getElementById(val).value = newNum.toString();
                }
                else {
                    document.getElementById(val).value = "1";
                }
            }
        },
        //Added By:Virendra Gohil...07-08-2018,Reason:Set Service provider on focus event.
        //prevAppointmentService: function (el) {
        //    prevServiceProviderVal = "";
        //    prevServiceProviderVal = el.value;
        //},
        //Added By:Virendra Gohil...07-08-2018,Reason:Check Service provider on change event.
        //CheckAppointmentService: function (el) {
        //    appServiveProvider = el;
        //    var strServiceID = parseInt(GetServiceID());
        //    if (parseInt(el.value) > 0 && strServiceID != null && strServiceID != '' && strServiceID != '-1') {
        //        Multi_ShowLoadingPanal(true);

        //        var data = {};
        //        data.iServiceID = strServiceID;
        //        data.spID = el.value;
        //        CallWSJSON("MySampleService.asmx/GetServiceAndOutcallCount", JSON.stringify(data), _vgAddEditApp.AddEditApp.CheckServiceProvided_CallSuccess, _vgAddEditApp.AddEditApp.CallFailedMultiAppJSON);                
        //    }           
        //},
        //CheckServiceProvided_CallSuccess:  function (isServiceProvided) {
        //    var checkProvided = isServiceProvided.d;
        //    if (!checkProvided.IsServiceGivenBySP && appServiveProvider != null) {
        //        var strServiceName = GetServiceName();                
        //        if (appServiveProvider.value > 0 && strServiceName != 'Select Service')
        //            SetErrorDisplayMessage("2", 'Selected service "' + strServiceName + '" is not provided by "' + appServiveProvider.options[appServiveProvider.selectedIndex].text + '".\nPlease choose another Service/Service Provider.', "");                
        //        $('[id*="cbAppointmentSPName"]').val(prevServiceProviderVal);                
        //    }
        //    else {
        //        prevServiceProviderVal = appServiveProvider.options[appServiveProvider.selectedIndex].value;
        //        //document.getElementById(glbSPCombo.id.toString().replace('cboSPName', 'txtDuration')).value = checkProvided.Duration;
        //        //GetPriceNDuration(glbSrvDynaCombo2.id);
        //    }
        //},
        //CallFailedMultiAppJSON: function (res) {
        //    Multi_ShowLoadingPanal(false);
        //    try {
        //        var d = JSON.parse(res.responseText);
        //        _vgCal.Common.ShowMsg(d.Message);                
        //    } catch (e) {
        //        _vgCal.Common.ShowMsg("Something went wrong, Try Again.");               
        //    }
        //},
        //Added By:Virendra Gohil...08-08-2018,Reason:Set service value on focus event.
        prevServiceDropVal: function (el) {
            if ($('[id*="divAppointmentSPName"]').css('display') == 'none') {

            }
            else {
                prevServiceVal = "";
                prevServiceVal = el.value;
            }
        },
        //Added By:Virendra Gohil...08-08-2018,Reason:Check service on change event.
        CheckService: function () {
            if (typeof InHouseDeposit != 'undefined' && typeof InHouseDeposit != null) {
                InHouseDeposit.model.DepoDis = [];
            }
            //if ($('[id*="divAppointmentSPName"]').css('display') == 'none') {
            CheckServiceORServiceBundle();
            _vgAddon.Model.CurrencySymbol = CurrencySymbol;
            _vgSearchAddon.Controls.currencySymbol = CurrencySymbol;
            if (_vgSearchAddon.Model.SelectedAddonService.length > 0) {
                _vgSearchAddon.Model.SelectedAddonService[0].lstAddonService = [];
            }
            _vgAddon.Model.EditAppAddonsDetail = [];
            _vgAddon.Model.SelectedAddOnForSearch = [];
            $(_vgAddon.Controls.DeviceId + " " + _vgAddon.Controls.AddOnsServiceSelect).css('color', '');
            $(_vgAddon.Controls.AddOnsServiceSelect)[0].innerText = 'Add-On';
            $(_vgAddon.Controls.DeviceId + " " + '#ddAddOnsSingalServiceSelect').addClass('addon-plus');
            CheckResourceAvailable(); //Ticket#816959 - Resource Double Booking : Change by : Chandni Shah : 11/11/2019
            if (_vgAddon.Model.IsAppointmentFrmCheckout || _vgAddon.Model.IsAppointmentFrmSearch || _vgAddon.Model.IsRebookAppFrmCalendar) {
                _vgAddon.Controls.DeviceId = _vgAddon.Controls.divSingleAppointment;
                _vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider = "#ucNewAppAjax_hdnServiceProviderID";
                _vgAddon.SetDefaultAddonsData(_vgAddon.Controls.DeviceId, $(_vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider).val());
                _vgAddon.Controls.txtAppPrice = "ucNewAppAjax_txtPrice";
                _vgAddon.Controls.txtAppDuration = "ucNewAppAjax_txtDuration";
            }
            else {
                _vgAddon.Controls.DeviceId = _vgAddon.Controls.divSingleAppointment;
                //_vgAddon.GetAllAddonUnCheckBoxByDeviceId(_vgAddon.Controls.DeviceId, true);
                //$('#AddOnRequireOptionalDialog').empty();
                _vgAddon.Model.IsFrmClassAddon = false;
                $(_vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider).val(hdnServiceProviderID.value);
                _vgAddon.SetDefaultAddonsData(_vgAddon.Controls.DeviceId, $(_vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider).val());
            }
            //_vgSearchAddon.ResetCheckboxValue();
            _vgAddon.Model.IfFrmLinkClick = false;
            var objdata = _vgAddon.GetDataOfSelectAllInput(_vgAddon.Controls.DeviceId);
            _vgSearchAddon.Model.SelecedAddonsDetails = objdata;
            var AddonfilterData = _vgAddon.FilterAddonServiceForddl_New(fullServiceMenuPopup.GetSelectedOptions().value, $(_vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider).val(), _vgAddon.Model.GlobalAddonServiceData);
            if (AddonfilterData.length <= 0) {
                _vgAddon.Model.NoAddonBusiness = true;
            }
            _vgAddon.BindAddonServiceFromData(AddonfilterData, function () {
                if (Search != undefined && Search.model.SearchAppointmentData != null && Search.model.SearchAppointmentData.length > 0) {
                    if (_vgAddon.Model.IsAppointmentFrmSearch == true) {
                        _vgSearchAddon.Model.localData.AddonsList = AddonfilterData;
                        _vgAddon.Model.SearchSingleServiceChange = true;
                    }
                    if (Search.model.SearchAppointmentData[0].serviceid.split(',')[0] == cboServices.value) {
                            Search.BindAddonsonSerarchAppointment(Search.model.SearchAppointmentData[0].addonsIds.toString().split(',')[0], Search.model.SearchAppointmentData[0].serviceid.split(',')[0], _vgAddon.Controls.DeviceId);
                    }
                    else {
                        _vgAddon.Model.IfFrmLinkClick = false;
                        _vgAddon.OpenAddonModelDialog(cboServices.value, $(_vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider).val(), 0);
                    }
                }
            });
            //_vgAddon.BindAddOnService(fullServiceMenuPopup.GetSelectedOptions().value, $(_vgAddEditApp.AddEditApp.Controls.SingleAppointmentServiceProvider).val());

        },
        //CheckServiceVal_CallSuccess: function (isServiceProvided) {
        //    var checkProvided = isServiceProvided.d;
        //    if (!checkProvided.IsServiceGivenBySP && appServiveProvider != null) {
        //        var strServiceName = $('[id*="cboServices"] option:selected').text();
        //        if (appServiveProvider.value > 0 && strServiceName != 'Select Service')
        //            SetErrorDisplayMessage("2", 'Selected service "' + strServiceName + '" is not provided by "' + $('[id*="cbAppointmentSPName"] option:selected').text() + '".\nPlease choose another Service/Service Provider.', "");
        //        $('[id*="cboServices"]').val(prevServiceVal);
        //    }
        //    else {
        //        prevServiceVal = $('[id*="cboServices"] option:selected').val();
        //        CheckServiceORServiceBundle();//ucFullServiceListForAjaxpopup.ascx                
        //        //document.getElementById(glbSPCombo.id.toString().replace('cboSPName', 'txtDuration')).value = checkProvided.Duration;
        //        //GetPriceNDuration(glbSrvDynaCombo2.id);
        //    }
        //},
        //CallFailedMultiAppJSONVal: function (res) {
        //    Multi_ShowLoadingPanal(false);
        //    try {
        //        var d = JSON.parse(res.responseText);
        //        _vgCal.Common.ShowMsg(d.Message);
        //    } catch (e) {
        //        _vgCal.Common.ShowMsg("Something went wrong, Try Again.");
        //    }
        //}
        GetDepositPercentage: function (isGetPercentage, depositPercentage, isFrom) {
            if (isGetPercentage == true) {
                if (typeof InHouseDeposit != 'undefined' && typeof InHouseDeposit != null && isFrom == InHouseDeposit.AppClassType.AppointmentFromOther) {

                    if (depositPercentage != "" && _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(depositPercentage, false, 2) > 0) {
                        if (For_Edit == true && (InHouseDeposit.arrpaidType.Deposits == 2 || InHouseDeposit.arrpaidType.Deposits == 1)) {
                            return _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(depositPercentage, true, 2);
                        } else {
                            var txtDepositsVal = depositPercentage;
                            var txtDepositsAttrVal = depositPercentage;
                            var sPrices = (_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsVal, false, 2) * 100);
                            if (txtDepositsAttrVal != "" && _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsAttrVal, false, 2) > 0 && _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsVal, false, 0) == _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsAttrVal, false, 0)) {
                                txtDepositsVal = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsAttrVal, false, 3);
                                sPrices = (_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsVal, false, 3) * 100);
                            }
                            /* End */
                            var sNum = Math.round(sPrices + 'e' + 2);
                            var changePrices = Number(sNum + 'e-' + 2);
                            var totalPer = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(changePrices, false, 3) / _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(totprice_offlinedeposit, false, 3), true, 3);
                            if (totalPer > 100) {
                                totalPer = 100
                            }
                            //}
                            return totalPer;
                        }
                    }
                    else {
                        return 0;
                    }
                } // this condition is for appointment booking outside from calendar
                else {
                    if (txtDeposit.value != "" && _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDeposit.value, false, 2) > 0) {
                        /* We have one issue related to decimal point for ex. 
                            * Price = 33.29 Percentage = 50%
                            * 1. Get Amount From Price to Percentage  = 16.645
                            * 2. Get Amount From Percentage(16.645) to Price(33.29) = 50
                            * 3. Get Amount From Percentage(16.65) to Price(33.29) = 50.02
                            * so we get percentage if textbox value and data attribute value is same then we calculated pecentage in 3 point value
                        START */
                        var txtDepositsVal = txtDeposit.value;
                        var txtDepositsAttrVal = txtDepositsVal;
                        var sPrices = (_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsVal, false, 2) * 100);
                        if (txtDepositsAttrVal != "" && _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsAttrVal, false, 2) > 0 && _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsVal, false, 0) == _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsAttrVal, false, 0)) {
                            txtDepositsVal = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsAttrVal, false, 3);
                            sPrices = (_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(txtDepositsVal, false, 3) * 100);
                        }
                        /* End */
                        var sNum = Math.round(sPrices + 'e' + 2);
                        var changePrices = Number(sNum + 'e-' + 2);
                        var totalPer = "";
                        //if (hdnPriceWithTaxSwitch.value == "1") {
                        //    totalPer = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(changePrices, false, 3) / _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(GetTotalPriceWithoutTax(), false, 3), true, 3);
                        //} else {
                            totalPer =  _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(changePrices, false, 3) / _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(NewApp_txtPrice.value, false, 3), true, 3);
                        //}
                        if (totalPer > 100) {
                            totalPer = 100
                        }
                        return totalPer;
                    } else {
                        return 0;
                    }
                }

            } else {
                if (depositPercentage > 0) {
                    // var totalPer = "";
                    
                    //if (hdnPriceWithTaxSwitch.value == "1") {
                    //    totalPer = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed((_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(GetTotalPriceWithoutTax(), false, 2) * _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(depositPercentage, false, 2)) / 100, true, 3);
                    //} else {
                    var totalPer = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed((_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(NewApp_txtPrice.value, false, 2) * _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(depositPercentage, false, 2)) / 100, true, 3);
                    // }
                    
                    var sNum = Math.round(totalPer + 'e' + 2);
                    var cPercentage = Number(sNum + 'e-' + 2);
                    return _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(cPercentage, true, 2);
                } else {
                    return 0;
                }
            }
        },
        ConvertDecimalWithFixed: function (value, isFixed, decimalPoint) {
            if (isNaN(parseFloat(value))) {
                value = 0;
            }
            if (isFixed) {
                return parseFloat(value).toFixed(decimalPoint);
            }
            else {
                return parseFloat(parseFloat(value).toFixed(decimalPoint));
            }
        },
        AssignDepositPercentageInSearch: function (objMultiAppList, totpriceofflinedeposit, percentageAmount) {
            if (totpriceofflinedeposit > 0) {
                var totalPer = _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed((_vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(percentageAmount, false, 2) * 100) / _vgAddEditApp.AddEditApp.ConvertDecimalWithFixed(totpriceofflinedeposit, false, 2), true, 2);
                if (totalPer > 100) {
                    totalPer = 100
                }
                if (objMultiAppList.length > 0) {
                    for (var i = 0; i < objMultiAppList.length; i++) {
                        if (!(typeof objMultiAppList[i].IsPaidApptForMove != "undefined" && objMultiAppList[i].IsPaidApptForMove == true)) {
                            objMultiAppList[i].DepositsPercentage = totalPer;
                        }
                    }
                }
            }
        },
        CreateAuthoriseList: function (CheckoutResponseData) {
            _onlineCheckout.AuthoriseListData = [];
            if (typeof CheckoutResponseData != 'undefined' && CheckoutResponseData != null
                && typeof CheckoutResponseData.PaymentAuthDetail != 'undefined' && CheckoutResponseData.PaymentAuthDetail != null && CheckoutResponseData.PaymentAuthDetail.length > 0) {
                $.grep(CheckoutResponseData.PaymentAuthDetail, function (e) {
                    var AskAuthorise = {};
                    if (typeof e.NextActionUrl != 'undefined' && e.NextActionUrl != null && e.NextActionUrl != "") {
                        AskAuthorise.NextActionUrl = e.NextActionUrl;
                        AskAuthorise.MerchantTokenID = e.MerchantTokenID;
                        AskAuthorise.Type = _onlineCheckout.ItemType.Other
                        AskAuthorise.Isauthorise = false;
                        _onlineCheckout.AuthoriseListData.push(AskAuthorise);
                    }
                });
            }
        },
        AuthorisePayment: function () {
            var pageinfo = {};
            pageinfo.CountryID = countryIdBusDetail;
            pageinfo.PaymentIntentURL = _onlineCheckout.AuthoriseListData[_onlineCheckout.AuthorisePaymnetCount].NextActionUrl;
            pageinfo.SuccessCallBack = SuccessCallBack = _vgAddEditApp.AddEditApp.threeDSSuccessCheckout;
            pageinfo.FailedCallback = _vgAddEditApp.AddEditApp.threeDSFailCheckout;
            _cardIntendent.LoadCardCaptureIntendentInfo(pageinfo);
        },
        //Added by:Pradip Solanki 26-09-2022 For Edit Addon Service from Checkout page
        EditAddonServiceFromCheckOut: function (objCheckoutData, objAddonResult) {
            var objEditServiceReqData = {};
            
            objEditServiceReqData.AppointmentID = objCheckoutData.appointmentID;
            objEditServiceReqData.serviceID = objCheckoutData.serviceID;
            objEditServiceReqData.serviceName = objCheckoutData.itemTitle;
            objEditServiceReqData.serviceProviderID = objCheckoutData.serviceProviderID;
            objEditServiceReqData.businessID = objCheckoutData.businessID;
            objEditServiceReqData.iLoggedInUserID = objCheckoutData.loggedInUserID;
            objEditServiceReqData.userID = objCheckoutData.userID;
            if (objCheckoutData.outcallAddress != undefined && objCheckoutData.outcallAddress != null && objCheckoutData.outcallAddress != "") {
                objEditServiceReqData.outcallAddress = objCheckoutData.outcallAddress;
            }
            if (objCheckoutData.appType != undefined && objCheckoutData.appType != null) {
                objEditServiceReqData.appType = objCheckoutData.appType;
            }
            //Change by Chandni Shah:Custom Package:18/04/2018 :To get Custom Package details for selected services,pass GClist and Service Id
            objEditServiceReqData.CustomPackageServiceId = "";
            objEditServiceReqData.GiftcertificateId = "";
            var isCustomPackage = false;
            var lstCustomPackage = [];
            var CustomPackageIds = ""; //Change by Chandni Shah:Custom Package:13/04/2018 : Create custom package list 
            if (_checkout.PackageData.length > 0) {
                lstCustomPackage = $.grep(_checkout.PackageData, function (obj) {
                    if (obj.IsCustomPackage == true && obj.ServiceName == "" && obj.RenewalStatus != 2) {
                        CustomPackageIds += obj.GiftCertificateID + ",";
                        return true;
                    }
                    else {
                        return false;
                    }
                });
                if (lstCustomPackage.length > 0) {
                    isCustomPackage = true;
                }
            }
            if (isCustomPackage == true) {
                var objCustomPackageServiceId = $.grep(_checkout.CustomPackageServiceId, function (CustomServiceId) {
                    return CustomServiceId == objEditServiceReqData.serviceID;
                });
                if (objCustomPackageServiceId.length == 0) {
                    objEditServiceReqData.CustomPackageServiceId = objEditServiceReqData.serviceID;
                    objEditServiceReqData.GiftcertificateId = CustomPackageIds.slice(0, -1);
                }
            }

            // Add Addon collection Pradip Solanki
            objEditServiceReqData.ruleStartDate = objCheckoutData.newAppointmentDateTime;
            objEditServiceReqData.AddOnDetails = _vgAddon.CreateEditAddonCollection(objEditServiceReqData, objAddonResult);

            var EditServiceReqData = {};
            EditServiceReqData.editServiceData = objEditServiceReqData;
            EditServiceReqData.action = AppointmentActionEnum.EditServiceFromCheckOut;
            EditServiceReqData.membershipData = objCheckoutData.membershipData;

            _vgAddEditApp.Common.PageMethodsProxyPost(EditServiceReqData, 'EditServiceFromCheckOut', false,
                function (res) {/*success*/
                    // below method in checkout.js
                    _checkout.SaveChangeService_Success(res);
                },

                function (ex) { /*failure*/
                    // below method in checkout.js
                    _checkout.CallFailed();
                });
        },
    }

})();

//Added by Vimal Usadadiya on 02 Sept 2020 for Project :- Vagaro Drive (Upload Customer Files)
function SetVagaroDriveGlobalVariable(DriveContainerName, FormsFilesPath) {
    if (typeof _vgVagaroDrive !== 'undefined') {
        _vgVagaroDrive.model.DriveContainerName = DriveContainerName;
        _vgVagaroDrive.model.FormsFilesPath = FormsFilesPath;
        _vgVagaroDrive.model.IsVagaroDriveEnable = true;
        if (_vgVagaroDrive.model.CalledFrom != _vgVagaroDrive.CalledFrom.CalendarAppointment && _vgVagaroDrive.model.CalledFrom != _vgVagaroDrive.CalledFrom.SearchRebookWaitingToRealAppointment) {
            _vgVagaroDrive.LoadUploadUserControl(false);
        }

    }
};
/// <reference path="../assets/js/ClassSession/VagaroCalendar.js" />
var isWidPopup = 0;
var VagaroStaticURL = 'https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/';
function GetPopupCode(frameHeight, frameWidth, url, divID, PageTitle) {//cursor:move;
    var iColorCode = "#F37528";
    var titlestring = "<div align='left' class='title' style='color:" + iColorCode + ";border-bottom:1px solid #000;'><span> " + PageTitle + "</span></div>";
    var closefun = "HideDynamicPopup(\"" + divID + "\");";
    if (PageTitle == 'Sign Up')
        iColorCode = "#000";
    if (PageTitle == 'Change Service' || PageTitle == 'Confirm Delete' || PageTitle == 'Print Daily Plan' || PageTitle == 'Print Daily Plan' || PageTitle == 'Calendar Setting' || PageTitle == 'Rebook Service')
        iColorCode = '';
    if (PageTitle == "Customer History") {
        titlestring = "";
        closefun = "HideDynamicPopupandSaveNote(\"" + divID + "\");";
    }

    if (PageTitle == "Resource Management")
        closefun = "HideDynamicPopupResourceFrame();";
    //closefun = "HideDynamicPopupResource(\"" + divID + "\");";
    return "<div id='frame_apgProgress_" + divID + "' style='display:;'><div class='loader'>&nbsp;</div><div class='loader-img'><img id='frame_imgLoading' src='" + VagaroStaticURL + "Images/loadersmall.gif' style='border-width:0px;width:80px;height:20px;' /></div></div>" +
        "<div style='position: relative; ' id='divinnertop_up'>" +
        "<div id='modalpopupNewAppointment_backgroundElement' style='position: fixed; left: 0px; top: 0px; z-index: -1; width: 100%; height: 100%;' class='ModalPopupBG'></div>" +
        "<div style='color: white; font-family: \"Lucida Grande\",\"Arial\"; font-size: 11px; position: absolute; text-align: center;width: 100%; z-index: 2001; top: 6px; position:relative;'></div>" +
        "<div class='pop-top-mNew'>" +
        titlestring +
        "<div style='width: auto; height: auto; margin: 0 -7px;'>" +
        "<!-- Content -->" +
        "<iframe name='frame1'  frameborder='0' border='0' src='" + url + "' style='width: " + frameWidth + "px; height: " + frameHeight + "px;' id='iFrame_" + divID + "' onload='javascript:document.getElementById(\"frame_apgProgress_" + divID + "\").style.display=\"none\";'></iframe>" +
        "</div>" +
        "<div class='pop-top-mInner'><img alt='Close' onclick='" + closefun + "' style='cursor: pointer;' src='" + VagaroStaticURL + "Images/btn-close-title1.gif' height='18' width='18'></div>" +
        "</div>";

}
function ShowDynamicPopup(PageUrl, frameHeight, frameWidth, divID, PageTitle) {
    var divTopLeftarray, divTop, divLeft, viewPortHeight;
    var divtop_up = document.getElementById(divID);
    divTopLeftarray = getTopLeftPosition(frameHeight, frameWidth).split('|');
    divTop = divTopLeftarray[0];
    divLeft = divTopLeftarray[1];
    viewPortHeight = divTopLeftarray[2];
    divtop_up.style.left = divLeft - 20 + 'px';
    //var frameHeight = 220;
    var scrollTop;
    if (document.documentElement.scrollTop != document.body.scrollTop) {
        scrollTop = document.documentElement.scrollTop + document.body.scrollTop
    } else {
        scrollTop = document.body.scrollTop;
    }

    if (scrollTop > 0)
        divTop = parseInt(divTop) + scrollTop;

    if (isWidPopup == 2) {
        divTop = 100;
    }
    divTop = divTop - 20;
    divtop_up.style.top = divTop + 'px';
    if (trimAll(divtop_up.innerHTML).length < 6) {
        var strData = "";
        strData = GetPopupCode(frameHeight, frameWidth, PageUrl, divID, PageTitle);
        divtop_up.innerHTML = strData;
        divtop_up.style.position = 'absolute';
        divtop_up.width = 'auto';
        divtop_up.height = 'auto';
        divtop_up.style.zIndex = 1000001;
    }
    divtop_up.style.display = "";
    Call_ClearControls(divID);
}


function trimAll(stringToTrim) {
    return stringToTrim.replace(/^\s+|\s+$/g, "");
}
function Call_ClearControls(divID) {
    try {
        var ID = "iFrame_" + divID;
        var el = document.getElementById(ID);

        if (el.contentWindow) {
            el.contentWindow.ClearControls();
        }
        else if (el.contentDocument) {
            el.contentDocument.ClearControls();
        }
    }
    catch (ex) { }
}
function HideDynamicPopup(divID) {
    try {
        var divtop_up = document.getElementById(divID);
        divtop_up.style.display = "none";
    } catch (e) {

    }
}
function HideCCIFrame(divID) {
    var divtop_up = document.getElementById(divID);
    divtop_up.style.display = "none";
    $("#iFrame_" + divID).attr("src", "");
    $("#" + divID).html('');
}
function HideDynamicPopupandSaveNote(divID, from) {
    var divtop_up = document.getElementById("iFrame_" + divID);
    var oldAppComment_note = divtop_up.contentWindow;
    var isNewAPI = false;
    if (typeof ChangeAppStatus != 'undefined' && typeof ChangeAppStatus.IsNewCall == 'function' && ChangeAppStatus.IsNewCall() == true) {
        isNewAPI = true;
    }
    var IsEditClassSession = false;
    if (typeof _vgCal !== 'undefined') {
        //if called from edit class session
        if (isNewAPI && typeof ManageClasses !== 'undefined' && typeof ManageClasses.model.IsPopupOpen !== 'undefined') {
            IsEditClassSession = ManageClasses.model.IsPopupOpen;
        }
        else {
            IsEditClassSession = _vgCal.SPopup.model.IsPopupOpen;
        }

    }

    if (oldAppComment_note.oldAppComment != undefined) {
        var Doc = divtop_up.contentDocument ? divtop_up.contentDocument : divtop_up.contentWindow.document;
        var txtAppNotes_note = oldAppComment_note.txtAppNotes.val();
        if (oldAppComment_note.oldAppComment != txtAppNotes_note) {
            var isrec = false;
            if (oldAppComment_note.hist_isRecApp != undefined)
                isrec = oldAppComment_note.hist_isRecApp;
            //call save note function
            //if (confirm("Are you sure you want to change Appointment Note?")) {
            if (_vgCal.Common.model.IsNewAPI) {
                ChangeAppStatus.ShowLoadingPanel(true);
            }
            else {
                ShowLoadingPanal(true);
            }
            notcommetfromnotepop = txtAppNotes_note;
            //Vagaro.MySampleService.SaveCustomerNotes(0, 0, '', '', '', 0, txtAppNotes_note, Rec_EditedAppID, Rec_RuleID, isrec, oldAppComment_note.hist_isWaitingApp, NewApp_CallSuccess_SaveCustomerNotes_hist, CallFailed_Note);
            /*Change for Calendar Improvement Project by jaydip B. on 11th May 2016*/
            if (typeof from == "undefined" || from == "History") {
                var data = {};
                data.BusinessID = 0,
                    data.CustomerID = 0,
                    data.strGeneral = '',
                    data.strAlergy = '',
                    data.strFormula = '',
                    data.CreateBy = 0,
                    data.sComment = txtAppNotes_note,
                    data.AppID = Rec_EditedAppID,
                    data.RecRuleID = Rec_RuleID,
                    data.isRecApp = isrec,
                    data.isWaitingAppointment = oldAppComment_note.hist_isWaitingApp;
                CallWSJSON("VagaroWebOffline.asmx/SaveCustomerNotes", JSON.stringify(data), NewApp_CallSuccess_SaveCustomerNotes_hist, CallFailed_Note);
            }
        }
        else {
            var divtop = document.getElementById(divID);
            divtop.style.display = "none";
            oldAppComment_note.txtAppNotes.val('');
            if (oldAppComment_note.oldAppComment != undefined) {
                oldAppComment_note.oldAppComment = '';
            }
            if (oldAppComment_note._refreshCal) {
                oldAppComment_note._refreshCal = false;
                if (isNewAPI === true && typeof (Scheduler) != "undefined" && typeof (Scheduler.RefreshCalendar) == "function") {
                    Scheduler.RefreshCalendar();
                }
                else if (typeof RefreshCalendar !== "undefined") {
                    RefreshCalendar();
                }
            }
        }      
    }
    else {
        var divtop = document.getElementById(divID);
        divtop.style.display = "none";
        if (oldAppComment_note._refreshCal) {
            oldAppComment_note._refreshCal = false;
            if (isNewAPI === true && typeof (Scheduler) != "undefined" && typeof (Scheduler.RefreshCalendar) == "function") {
                Scheduler.RefreshCalendar();
            }
            else if (typeof RefreshCalendar !== "undefined") {
                RefreshCalendar();
            }
        }
    }

    if (IsEditClassSession && divID != "DivZoomIntegrationPopUp") {
        if (isNewAPI === true && typeof(ManageClasses)!== 'undefined' && typeof ManageClasses.RetrieveAttendeeData == 'function') {
            ManageClasses.RetrieveAttendeeData();
        }
        else {
            // rebind attendee data to show notes icon in attendee section , amit trivedi , 1-dec-15
            _vgCal.SPopup.RetrieveAttendeeData();
        }
    }
    else if (divID != "DivZoomIntegrationPopUp") {
        if ($('[Id$=ddCustomer]') != 'undefined') {
            //if (oldAppComment_note.txtAppNotes.val().trim() != '') {
            //    setNotes(1);
            //    return;
            //}
            if (typeof glbCustomerID !== "undefined" && glbCustomerID != undefined && glbCustomerID != null) {
                // added event type in GetCustomerDetailForCalendarDisplay call , amit trivedi , 5-oct-15
                /*Change for Calendar Improvement Project by Mohit Kariya on 9th May 2016*/

                //changed to new method to get CC Capture settings by Vimal Usadadiya on 1st March 2021 for InHouse Deposit project
                var objcustomerDetailNew = {};
                objcustomerDetailNew.CustomerID = glbCustomerID;
                objcustomerDetailNew.BusinessID = BusinessID;
                objcustomerDetailNew.eventType = '1';
                if (typeof _vgCal != 'undefined' && typeof _vgCal.Common != 'undefined' && _vgCal.Common.model.BusinessCountryId == 1) {
                    IsRequireDepositSetting = true;
                }
                else {
                    IsRequireDepositSetting == false;
                }
                objcustomerDetailNew.IsRequireDepositSetting = IsRequireDepositSetting;
                if (typeof _vgCal != 'undefined' && typeof _vgCal.Common != 'undefined' && _vgCal.Common.hdnAppointmentId > 0) {
                    objcustomerDetailNew.AppID = _vgCal.Common.hdnAppointmentId;
                }
                else {
                    objcustomerDetailNew.AppID = 1;
                }
                var data = {};
                data.objcustomerdetails = objcustomerDetailNew;
                if (typeof from == undefined || from == "History") {
                    CallWSJSON("VagaroWebOffline.asmx/GetCustomerDetailForCalendarDisplayNew", JSON.stringify(data), CallSuccess_SelectCustomer, CallFailedJSON);
                    //Vagaro.MySampleService.GetCustomerDetailForCalendarDisplay(glbCustomerID, BusinessID, '1', CallSuccess_SelectCustomer, CallFailed);
                    /*End Calendar Improvement*/
                }
            }
        }
    }

}
function HideDynamicPopupandSaveNoteSearch(divID) { 
    if (window.location.href.toLocaleLowerCase().indexOf("searchappointmentfromcalendar.aspx") > -1) {
        var divtop = document.getElementById(divID);
        divtop.style.display = "none";
    }
    
}
function CallFailed_Note() {
    alert("Appointment comment not saved.Please try again");
    var divtop = document.getElementById("DivCustomerHistoryPopUp");
    divtop.style.display = "none";
    oldAppComment_note.txtAppNotes.val('');
    if (oldAppComment_note.oldAppComment != undefined) {
        oldAppComment_note.oldAppComment = '';
    }
    ShowLoadingPanal(false);
}
function NewApp_CallSuccess_SaveCustomerNotes_hist(Res) {

    if (txtComment != undefined)
        txtComment.value = notcommetfromnotepop;

    if (typeof _vgCal.SPopup !== 'undefined') {
        _vgCal.SPopup.UpdateCommentsValue(notcommetfromnotepop);
    }

    var divid = "DivCustomerHistoryPopUp";
    var divtop = document.getElementById(divid);
    divtop.style.display = "none";
    if (_vgCal.Common.model.IsNewAPI) {
        ChangeAppStatus.ShowLoadingPanel(false);
    }
    else {
        ShowLoadingPanal(false);
    }
    var divtop_up = document.getElementById("iFrame_" + divid);
    var oldAppComment_note = divtop_up.contentWindow;
    oldAppComment_note.txtAppNotes.val('');
    //oldAppComment_note.txtAppNotes.value = "";
    //oldAppComment_note.oldAppComment = "";
    if (oldAppComment_note.oldAppComment != undefined) {
        oldAppComment_note.oldAppComment = '';
    }
    oldAppComment_note._refreshCal = false;
    if (typeof ChangeAppStatus != 'undefined' && ChangeAppStatus.IsNewCall() == true) {
        Scheduler.RefreshScheduler();
    }
    else {
        RefreshCalendar();
    }
}
function getViewPortHeightWidth() {
    //****************************************************************************************************************
    // Viewportwidth and height
    var viewportwidth;
    var viewportheight;

    // the more standards compliant browsers (mozilla/netscape/opera/IE7) use window.innerWidth and window.innerHeight
    if (typeof window.innerWidth != 'undefined') {
        viewportwidth = window.innerWidth,
            viewportheight = window.innerHeight
    }
    // IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)
    else if (typeof document.documentElement != 'undefined'
        && typeof document.documentElement.clientWidth !=
        'undefined' && document.documentElement.clientWidth != 0) {
        viewportwidth = document.documentElement.clientWidth,
            viewportheight = document.documentElement.clientHeight
    }
    // older versions of IE
    else {
        viewportwidth = document.getElementsByTagName('body')[0].clientWidth,
            viewportheight = document.getElementsByTagName('body')[0].clientHeight
    }
    return viewportheight + '|' + viewportwidth;
}
function getTopLeftPosition(frameHeight, frameWidth) {   
    var viewportheightarray, viewportheight, viewportwidth, divTop, divLeft;
    viewportheightarray = getViewPortHeightWidth().split('|');
    viewportheight = viewportheightarray[0];
    viewportwidth = viewportheightarray[1];
    divTop = (viewportheight - frameHeight) / 2; //555 is iFrame Static Height and other top-bottom so, 600 is minus from viewportheight
    if (divTop < 0)
        divTop = 1;   
    divLeft = (viewportwidth - frameWidth) / 2; //820 is iFrame Static width and other top-bottom so, 832 is minus from viewportwidth
    return divTop + '|' + divLeft + '|' + viewportheight;
}




function ShowDynamicPopupForShopOwner(PageUrl, frameHeight, frameWidth, divID, PageTitle, functionname, objectparameter, applyclass, ChildURL) {
    if (PageUrl.indexOf("/ShopOwner/PrintDailyPlanPopup.aspx") > -1 || PageUrl.indexOf("/DynamicPopupPages/Videos.aspx") > -1 || PageUrl.indexOf("/ShopOwner/VagaroDrivePopup.aspx") > -1 || PageUrl.indexOf("/merchants/vagaropaylater") > -1) {
        if ((window.location.href.indexOf("/merchants/calendar") > -1 || window.location.href.toLocaleLowerCase().indexOf("searchappointmentfromcalendar.aspx") > -1 || window.location.href.toLocaleLowerCase().indexOf("searchclassfromcalendar.aspx") > -1 ) && window.location.href.indexOf("/merchants/calendarconfiguration") < 0) {
            if (PageUrl.indexOf('?') > -1) {
                PageUrl = PageUrl + '&cal=1';
            }
            else {
                PageUrl = PageUrl + '?cal=1';
            }
        }
    }
    var divTopLeftarray, divTop, divLeft, viewPortHeight;
    var divtop_up = document.getElementById(divID);
    divTopLeftarray = getTopLeftPosition(frameHeight, frameWidth).split('|');
    divTop = divTopLeftarray[0];
    divLeft = divTopLeftarray[1];
    viewPortHeight = divTopLeftarray[2];
    //divtop_up.style.left = '35%';
    //divtop_up.style.top = '25%';

    //Reload zoom integration page everytime open to get updated values
    if (PageUrl.toLowerCase().indexOf("/shopowner/zoomintegrationpopup.aspx") > -1) {
        divtop_up.innerHTML = "";
        if (window.location.href.toLocaleLowerCase().indexOf("searchappointmentfromcalendar.aspx") > -1 && typeof window.parent != 'undefined' && window.parent != null && window.parent.location.href.toLocaleLowerCase().indexOf("shopowner/checkout.aspx") > -1) {
            if (PageUrl.indexOf('?') > -1) {
                PageUrl = PageUrl + '&isCheckout=1';
            }
            else {
                PageUrl = PageUrl + '?isCheckout=1';
            }
        }
    }

    if (trimAll(divtop_up.innerHTML).length < 6) {
        var strData = GetPopupCodeForShopOwner(frameHeight, frameWidth, PageUrl, divID, PageTitle, applyclass, objectparameter);
        divtop_up.innerHTML = strData;
        divtop_up.width = 'auto';
        divtop_up.height = 'auto';
        divtop_up.style.zIndex = 1000001;
        if (functionname != undefined && functionname != null) {
            var ID = "iFrame_" + divID;
            var el = document.getElementById(ID);
            if (el.contentWindow) {
                el.contentWindow.onload = function () {
                    document.getElementById("frame_apgProgress_" + divID).style.display = "none";
                    var myfun = el.contentWindow[functionname];
                    myfun(objectparameter, ChildURL)
                };
            }
            else if (el.contentDocument) {
                el.contentDocument.onload = function () {
                    document.getElementById("frame_apgProgress_" + divID).style.display = "none";
                    var myfun = el.contentDocument[functionname];
                    myfun(objectparameter, ChildURL)
                };
            }
        }
    }
    else {
        if (functionname != undefined && functionname != null) {
            var ID = "iFrame_" + divID;
            var el = document.getElementById(ID);
            if (el.contentWindow) {
                var myfun = el.contentWindow[functionname];
                myfun(objectparameter, ChildURL)
            }
            else if (el.contentDocument) {
                var myfun = el.contentDocument[functionname];
                myfun(objectparameter, ChildURL)
            }
        }
    }

    if (typeof (PageUrl) != "undefined" && PageUrl != "" && typeof ($('#chatFrame')) != "undefined" && $('#chatFrame').length > 0 && PageUrl.indexOf("/ShopOwner/PrintDailyPlanPopup.aspx") > -1 && $('#chatFrame').css('display') == "block" && !$('#chatFrame').hasClass('ifream-smallscreen') && !$('#chatFrame').hasClass('ifream-minimize')) {
        $('#chatFrame').css('display', 'none');
    }

    SetTopLeft(divtop_up);
    if (typeof divtop_up != "undefined" && divtop_up.id != "divMergeCustomer") {
        divtop_up.style.display = "flex";
    }
    Call_ClearControls(divID);

}
function GetPopupCodeForShopOwner(frameHeight, frameWidth, url, divID, PageTitle, applyclass, objectparameter) {
    var scrolling = 'no';
    var overflow = 'hidden';
    if ("DivCustomerHistoryPopUp" == divID) {
        var scrolling = 'yes';
        var overflow = 'auto';
    };
    var IsAllowFullScreen = '';
    if (objectparameter != undefined && PageTitle !="AddEditCustomer") {
        if (objectparameter.toLowerCase().indexOf("businesscreated.aspx") != -1) {
            IsAllowFullScreen = 'allowfullscreen';
        }
    };
    var className = '';
    if (applyclass != undefined) {
        className = 'class=' + applyclass;
    };

    return "<div id='frame_apgProgress_" + divID + "' style='display:;'><div class='loader'>&nbsp;</div><div class='loader-img'><img id='frame_imgLoading' src='" + VagaroStaticURL + "Images/loadersmall.gif' style='border-width:0px;width:80px;height:20px;' /></div></div>" +
        "<div style='position: relative; ' id='divinnertop_up'>" +
        "<div id='modalpopupNewAppointment_backgroundElement' style='position: fixed; left: 0px; top: 0px; z-index: -1; width: 100%; height: 100%;' class='ModalPopupBG'></div>" +
        "<div style='color: white;  font-size: 11px; position: absolute; text-align: center;width: 100%; z-index: 2001; top: 6px; position:relative;'></div>" +
        "<div class='Modalhistoryfullwidth'  style='width: auto; height: auto; border-radius:4px;  overflow:hidden;'>" +
        "<!-- Content -->" +
        "<iframe " + className + "   " + IsAllowFullScreen + "  name='frame1' frameborder='0' scrolling=" + scrolling + " border='0' src='" + url + "' style='overflow:" + overflow + ";width: " + frameWidth + "px; height: " + frameHeight + "px;' id='iFrame_" + divID + "' onload='javascript:document.getElementById(\"frame_apgProgress_" + divID + "\").style.display=\"none\";'></iframe>" +
        "</div>";
}
function SetTopLeft(obj) {
    $(obj).css("position", "absolute");
    var offset = $(document).scrollTop();
    $(obj).css("top", Math.max(0, (($(window).height() - $(obj).outerHeight()) / 2) +
        $(window).scrollTop()) + "px");
    $(obj).css("left", Math.max(0, (($(window).width() - $(obj).outerWidth()) / 2) +
        $(window).scrollLeft()) + "px");
    //return this;
}
if (document.readyState === "complete")
{
    $(window).resize(function ()
    {
        //resize popup edit and cust profile on calendar page
        SetTopLeft('#DivCustomerHistoryPopUp');
    });
}
function loadbusinessusercontrol() {
    if ($("#ucdivBusinessselecteion").html() == "" || $("#ucdivBusinessselecteion").html() == null) {
        $("#ucdivBusinessselecteion").html('');

        var data = {};
        data.UserControlPath = "~/ShopOwner/UserControls/ucBusinessList.ascx";
        if ($("#ucdivBusinessselecteion").data("loadjs") == 'True') {
            data.PageNamePath = "~/calendar.aspx";
        }
        else {
            data.PageNamePath = "~/transactionReport.aspx";
        }
        data.isRemoveFormTag = true;
        AddUserControlAsync('CalendarWebService.asmx/LoadUserControl', JSON.stringify(data), $("#ucdivBusinessselecteion"));
        setTimeout(function () {LoadBusinessList();}, 500);
    }
    else {
        LoadBusinessList();
    }
}

;
